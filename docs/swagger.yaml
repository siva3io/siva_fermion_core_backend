
# Copyright (C) 2022 Eunimart Omnichannel Pvt Ltd. (www.eunimart.com)
# All rights reserved.
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License v3.0 as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License v3.0 for more details.
# You should have received a copy of the GNU Lesser General Public License v3.0
# along with this program.  If not, see <https://www.gnu.org/licenses/lgpl-3.0.html/>.

basePath: /
definitions:
  DeleteGRNOrderLineResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/grn.DeleteGRNOrderLine'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  DeleteGRNResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/grn.DeleteGRN'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  DeleteNDRLineResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_ndr.DeleteNDRLine'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  DeleteNDRResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_ndr.DeleteNDR'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  DeleteRTOResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_rto.DeleteRTO'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  DeleteShippingOrderLineResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders.DeleteShippingOrderLine'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  DeleteShippingOrderResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders.DeleteShippingOrder'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  DeleteWDResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_wd.DeleteWD'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GRNCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/grn.CreateGRN'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GRNGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/grn.GetGRN'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GetAllGRNResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/grn.GetAllGRN'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GetAllNDRResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/shipping_orders_ndr.GetAllNDR'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GetAllRTOResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/shipping_orders_rto.GetAllRTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GetAllRateCalculator:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GetAllShippingOrdersResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/shipping_orders.GetAllShippingOrders'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  GetAllWDResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/shipping_orders_wd.GetAllWD'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  NDRCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_ndr.CreateNDR'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  NDRGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_ndr.GetNDR'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  RTOCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_rto.CreateRTO'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  RTOGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_rto.GetRTO'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  RateCalcRequest:
    properties:
      package_details:
        additionalProperties: true
        type: object
    type: object
  ShippingOrderCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders.CreateShippingOrder'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  ShippingOrderGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders.GetShippingOrder'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  ShippingPartnerGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/ShippingPartnerRequest'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  ShippingPartnerRequest:
    properties:
      app_id:
        type: integer
      auth_options:
        additionalProperties: true
        type: object
      id:
        type: integer
      partner_name:
        type: string
      profile_options:
        additionalProperties: true
        type: object
      shipping_partner_type_id:
        type: integer
      sp_default_preferences:
        additionalProperties: true
        type: object
      sp_time_preferences:
        additionalProperties: true
        type: object
      subscription_options:
        additionalProperties: true
        type: object
    type: object
  UpdateGRNResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/grn.UpdateGRN'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UpdateNDRResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_ndr.UpdateNDR'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UpdateRTOResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_rto.UpdateRTO'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UpdateShippingOrderResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders.UpdateShippingOrder'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UpdateWDResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_wd.UpdateWD'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UserShippingPartnerRegistrationCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_partners.CreateUserShippingPartnerRegistration'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UserShippingPartnerRegistrationDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UserShippingPartnerRegistrationGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/UserShippingPartnerRegistrationRequest'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UserShippingPartnerRegistrationGetResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  UserShippingPartnerRegistrationRequest:
    properties:
      account_details:
        $ref: '#/definitions/shipping_partners.AccountDetails'
      add_locations:
        items:
          $ref: '#/definitions/shipping_partners.AddLocations'
        type: array
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      commerical_invoice_details:
        $ref: '#/definitions/shipping_partners.CommericalInvoiceDetails'
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      packing_details:
        $ref: '#/definitions/shipping_partners.PackingDetails'
      pickup_details:
        $ref: '#/definitions/shipping_partners.PickupDetails'
      shipping_partner_id:
        type: integer
      status_history:
        items:
          additionalProperties: true
          type: object
        type: array
      status_id:
        type: integer
      test_account:
        type: boolean
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      upload_doc:
        $ref: '#/definitions/shipping_partners.UploadDoc'
      user_id:
        type: integer
    type: object
  UserShippingPartnerRegistrationUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  WDCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_wd.CreateWD'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  WDGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_wd.GetWD'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  accounting.PiPaymentDetails:
    properties:
      adjustment_amount:
        type: number
      available_vendor_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  accounting.PurchaseInvoiceLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      id:
        type: integer
      inventory:
        $ref: '#/definitions/mdm.CentralizedBasicInventory'
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      price:
        type: number
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      purchase_invoice_id:
        type: integer
      quantity:
        type: integer
      serial_number:
        type: string
      tax:
        type: number
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  accounting.SalesInvoiceLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      discount:
        type: number
      discount_type:
        $ref: '#/definitions/core.Lookupcode'
      discount_type_id:
        type: integer
      id:
        type: integer
      inventory:
        $ref: '#/definitions/mdm.CentralizedBasicInventory'
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      products:
        $ref: '#/definitions/mdm.ProductTemplate'
      quantity:
        type: integer
      sales_invoice_id:
        type: integer
      tax:
        type: number
      tax_type:
        $ref: '#/definitions/core.Lookupcode'
      tax_type_id:
        type: integer
      total_amount:
        type: number
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  asn.AsnCreate:
    properties:
      created_id:
        type: integer
    type: object
  asn.AsnCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/asn.AsnCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  asn.AsnDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  asn.AsnDeleteResponse:
    properties:
      body:
        description: '@ name AsnDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/asn.AsnDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  asn.AsnGet:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      asn_number:
        type: string
      asn_order_lines:
        items:
          $ref: '#/definitions/inventory_orders.AsnLines'
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_location_details:
        items:
          type: integer
        type: array
      dispatch_location_details:
        items:
          type: integer
        type: array
      eunimart_wallet_amount:
        type: number
      grn_ids:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      link_po:
        $ref: '#/definitions/orders.PurchaseOrders'
      link_purchase_order_id:
        type: integer
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      reference_number:
        type: string
      schedule_pickup_date:
        type: string
      schedule_pickup_from_time:
        type: string
      schedule_pickup_to_time:
        type: string
      scrap_order_id:
        type: integer
      shipping_details:
        items:
          type: integer
        type: array
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      source_document:
        items:
          type: integer
        type: array
      source_document_type:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  asn.AsnGetAll:
    properties:
      asn_number:
        type: string
      asn_order_lines:
        items:
          $ref: '#/definitions/asn.AsnOrderLines'
        type: array
      auto_create_asn_number:
        type: boolean
      auto_generate_reference_number:
        type: boolean
      destination_location:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      destination_location_id:
        type: integer
      dispatch_location:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      dispatch_location_id:
        type: integer
      eunimart_wallet_amount:
        type: number
      grn_id:
        additionalProperties: true
        type: object
      link_po:
        $ref: '#/definitions/orders.PurchaseOrders'
      link_purchase_order_id:
        type: integer
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      reference_number:
        type: string
      schedule_pickup_date_time:
        type: string
      scrap_order_id:
        type: integer
      shipping:
        $ref: '#/definitions/shipping.ShippingOrder'
      shipping_id:
        type: integer
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      source_document_id:
        type: integer
      source_document_type:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      total_quantity:
        type: integer
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  asn.AsnGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/asn.AsnGetAll'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
          pagination:
            $ref: '#/definitions/asn.AsnPaginatedResponse'
        type: object
    type: object
  asn.AsnGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/asn.AsnGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  asn.AsnLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      cross_docking_req:
        items:
          additionalProperties: true
          type: object
        type: array
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      no_of_boxes:
        type: integer
      package_height:
        type: number
      package_length:
        type: number
      package_type_id:
        type: integer
      package_weight:
        type: number
      package_width:
        type: number
      product_id:
        type: integer
      product_variant_id:
        type: integer
      unit_per_box:
        type: integer
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  asn.AsnLinesDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  asn.AsnLinesDeleteResponse:
    properties:
      body:
        description: '@ name AsnLinesDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/asn.AsnLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  asn.AsnOrderLines:
    properties:
      cross_docking_req:
        additionalProperties: true
        type: object
      no_of_boxes:
        type: integer
      package_height:
        type: number
      package_length:
        type: number
      package_type:
        $ref: '#/definitions/core.Lookupcode'
      package_type_id:
        type: integer
      package_weight:
        type: number
      package_width:
        type: number
      product:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      unit_per_box:
        type: integer
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
    type: object
  asn.AsnPaginatedResponse:
    properties:
      current_page:
        type: integer
      next_page:
        type: integer
      per_page:
        type: integer
      previous_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  asn.AsnRequest:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      asn_number:
        type: string
      asn_order_lines:
        items:
          $ref: '#/definitions/asn.AsnLines'
        type: array
      auto_create_asn_number:
        type: boolean
      auto_generate_reference_number:
        type: boolean
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_location_details:
        additionalProperties: true
        type: object
      dispatch_location_details:
        additionalProperties: true
        type: object
      eunimart_wallet_amount:
        type: number
      grn_ids:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      link_purchase_order_id:
        type: integer
      partner_id:
        type: integer
      reference_number:
        type: string
      schedule_pickup_date:
        type: string
      schedule_pickup_from_time:
        type: string
      schedule_pickup_to_time:
        type: string
      scrap_order_id:
        type: integer
      shipping_details:
        additionalProperties: true
        type: object
      shipping_mode_id:
        type: integer
      source_document:
        additionalProperties: true
        type: object
      source_document_type_id:
        type: integer
      status_history:
        items:
          additionalProperties: true
          type: object
        type: array
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  asn.AsnUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  asn.AsnUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/asn.AsnUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  asn.BulkAsnCreate:
    properties:
      created_id:
        type: integer
    type: object
  asn.BulkAsnCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/asn.BulkAsnCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  asn.DownloadPdfAsn:
    properties:
      id:
        type: string
    type: object
  asn.DownloadPdfAsnResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/asn.DownloadPdfAsn'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  asn.SendMailAsn:
    properties:
      id:
        type: string
      receiver_email:
        type: string
    type: object
  asn.SendMailAsnResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/asn.SendMailAsn'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  auth.LoginDTO:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  auth.LoginResponseDOC:
    properties:
      data:
        $ref: '#/definitions/auth.LoginResponseDTO'
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  auth.LoginResponseDTO:
    properties:
      token:
        type: string
    type: object
  auth.RegisterDTO:
    properties:
      confirm_password:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  auth.RegisterRespData:
    properties:
      id:
        type: integer
      name:
        type: string
      username:
        type: string
    type: object
  auth.RegisterResponseDOC:
    properties:
      data:
        $ref: '#/definitions/auth.RegisterRespData'
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  auth.UserLoginDTO:
    properties:
      login:
        type: string
    type: object
  auth.UserLoginResponse:
    properties:
      id:
        type: integer
      new_user:
        type: boolean
      otp_sent:
        type: boolean
      status:
        type: string
    type: object
  auth.VerifyOtpDTO:
    properties:
      access_template_id:
        type: integer
      id:
        type: integer
      otp:
        type: string
    type: object
  auth.VerifyOtpResponse:
    properties:
      access_template_id:
        type: integer
      message:
        type: string
      status:
        type: boolean
      token:
        type: string
      user: {}
    type: object
  basic_inventory.CentralizedBasicInventoryDTO:
    properties:
      available_stock:
        type: integer
      bin_tag:
        type: string
      channel_code:
        type: string
      inventory_count:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      no_of_units:
        type: integer
      physical_location_id:
        type: integer
      product_variant_id:
        type: integer
      quantity:
        type: integer
    type: object
  basic_inventory.CentralizedListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/basic_inventory.CentralizedBasicInventoryDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  basic_inventory.CentralizedSearchObjDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  basic_inventory.CentralizedViewDTO:
    properties:
      data:
        $ref: '#/definitions/basic_inventory.CentralizedBasicInventoryDTO'
      meta:
        $ref: '#/definitions/response.SuccessResponse'
    type: object
  basic_inventory.DecentralizedBasicInventoryDTO:
    properties:
      available_stock:
        type: integer
      bin_tag:
        type: string
      channel_code:
        type: string
      commited_stock:
        type: integer
      company_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      no_of_units:
        type: integer
      on_hand_quantity:
        type: integer
      physical_location_id:
        type: integer
      planned_in_quantity:
        type: integer
      planned_out_quantity:
        type: integer
      product_variant_id:
        type: integer
      quantity:
        type: integer
      stock_expected:
        type: integer
    type: object
  basic_inventory.DecentralizedSearchObjDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  basic_inventory.DeentralizedListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/basic_inventory.DecentralizedBasicInventoryDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  basic_inventory.DeentralizedViewDTO:
    properties:
      data:
        $ref: '#/definitions/basic_inventory.DecentralizedBasicInventoryDTO'
      meta:
        $ref: '#/definitions/response.SuccessResponse'
    type: object
  contacts.AdditionalInformation:
    properties:
      additional_contact:
        type: string
      additional_information:
        type: string
      date_of_birth:
        type: string
      emergency_contact:
        type: string
      gst_doc:
        type: string
      gst_no:
        type: string
      notes:
        type: string
      website_url:
        type: string
    type: object
  contacts.AddressDetailsDTO:
    properties:
      address_line_1:
        type: string
      address_line_2:
        type: string
      address_line_3:
        type: string
      address_type:
        description: shipping, billing, both
        type: string
      address_type_id:
        description: 1,2,3
        type: integer
      city:
        type: string
      contact_person_name:
        type: string
      contact_person_number:
        type: string
      country:
        $ref: '#/definitions/cores.CountryDTO'
      gst_in_number:
        type: string
      land_mark:
        type: string
      location:
        $ref: '#/definitions/cores.LookupCodesDTO'
      location_name:
        type: string
      mark_default_address:
        type: boolean
      pin_code:
        type: string
      state:
        $ref: '#/definitions/cores.StateDTO'
    type: object
  contacts.BillingDetailsDTO:
    properties:
      account_name:
        type: string
      account_number:
        type: string
      bank_id:
        type: string
      bank_name:
        type: string
      ifsc_code:
        type: string
      upi:
        type: string
    type: object
  contacts.ContactListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/contacts.PartnerResponseDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  contacts.ContactViewDTO:
    properties:
      data:
        $ref: '#/definitions/contacts.PartnerResponseDTO'
      meta:
        $ref: '#/definitions/response.SuccessResponse'
    type: object
  contacts.IdNameDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  contacts.Ids:
    properties:
      id:
        type: integer
    type: object
  contacts.ImageOptionsDTO:
    properties:
      data:
        type: string
      link:
        type: string
      name:
        type: string
      size:
        type: integer
      type:
        type: string
    type: object
  contacts.PartnerResponseDTO:
    properties:
      additional_information:
        items:
          type: integer
        type: array
      address_details:
        items:
          $ref: '#/definitions/contacts.AddressDetailsDTO'
        type: array
      billing_details:
        $ref: '#/definitions/contacts.BillingDetailsDTO'
      child_contacts:
        items:
          $ref: '#/definitions/contacts.PartnerResponseDTO'
        type: array
      company_name:
        description: AccessTemplateId      uint                      `json:"access_template_id"`
        type: string
      contact_type:
        $ref: '#/definitions/cores.LookupCodesDTO'
      default_address:
        $ref: '#/definitions/contacts.AddressDetailsDTO'
      first_name:
        type: string
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      is_active:
        type: boolean
      is_allowed_login:
        type: boolean
      is_enabled:
        type: boolean
      last_name:
        type: string
      parent:
        $ref: '#/definitions/contacts.PartnerResponseDTO'
      parent_id:
        type: integer
      primary_email:
        type: string
      primary_phone:
        type: string
      profile_info:
        $ref: '#/definitions/contacts.IdNameDTO'
      properties:
        items:
          $ref: '#/definitions/cores.LookupCodesDTO'
        type: array
    type: object
  contacts.SwaggerPartnerRequestDTO:
    properties:
      access_template_id:
        type: integer
      additional_information:
        $ref: '#/definitions/contacts.AdditionalInformation'
      address_details:
        items:
          $ref: '#/definitions/contacts.AddressDetailsDTO'
        type: array
      billing_details:
        $ref: '#/definitions/contacts.BillingDetailsDTO'
      company_name:
        type: string
      contact_type_id:
        type: integer
      created_by_id:
        type: integer
      deleted_by_id:
        type: integer
      first_name:
        type: string
      image_options:
        $ref: '#/definitions/contacts.ImageOptionsDTO'
      is_active:
        type: boolean
      is_allowed_login:
        type: boolean
      is_enabled:
        type: boolean
      last_name:
        type: string
      parent_id:
        type: integer
      primary_email:
        type: string
      primary_phone:
        type: string
      profile_info:
        items:
          type: integer
        type: array
      properties:
        items:
          $ref: '#/definitions/contacts.Ids'
        type: array
      updated_by_id:
        type: integer
    type: object
  core.AccessTemplate:
    properties:
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        description: DeletedBy   *CoreUsers
        type: string
      deleted_by:
        description: UpdatedBy   *CoreUsers
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        description: Model
        type: string
      updated_by:
        type: integer
      updated_date:
        description: CreatedBy   *CoreUsers
        type: string
    type: object
  core.Company:
    properties:
      addresses:
        items:
          type: integer
        type: array
      business_type:
        $ref: '#/definitions/core.Lookupcode'
      business_type_id:
        type: integer
      child_ids:
        items:
          type: integer
        type: array
      company_defaults:
        items:
          type: integer
        type: array
      company_details:
        items:
          type: integer
        type: array
      company_name:
        type: string
      constraints:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      email:
        type: string
      file_preference:
        $ref: '#/definitions/core.Lookupcode'
      file_preference_id:
        type: integer
      id:
        type: integer
      invoice_generation:
        $ref: '#/definitions/core.Lookupcode'
      invoice_generation_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      is_enterpise:
        type: boolean
      kyc_documents:
        items:
          type: integer
        type: array
      menu_hierarchy:
        items:
          type: integer
        type: array
      notification_settings_id:
        type: integer
      notification_template_id:
        items:
          type: integer
        type: array
      notificationSettings:
        $ref: '#/definitions/core.NotificationSettings'
      organization_details:
        items:
          type: integer
        type: array
      parent_id:
        type: integer
      phone:
        type: string
      plt_point_ids:
        items:
          type: integer
        type: array
      queue_services:
        items:
          type: integer
        type: array
      schedulers:
        items:
          type: integer
        type: array
      total_points:
        type: integer
      type:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  core.CoreUsers:
    properties:
      2fa_conf:
        items:
          type: integer
        type: array
      access_ids:
        items:
          type: integer
        type: array
      access_template_id:
        items:
          $ref: '#/definitions/core.AccessTemplate'
        type: array
      auth:
        items:
          type: integer
        type: array
      company:
        $ref: '#/definitions/core.Company'
      company_id:
        type: integer
      constraints:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      device_ids:
        items:
          type: integer
        type: array
      email:
        type: string
      external_details:
        items:
          type: integer
        type: array
      first_name:
        type: string
      gamification:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        description: |-
          PltPointIds   *PlatformPoints `json:"plt_point_ids" gorm:"foreignkey:PltPointId"`
          CreatedBy []CoreUsers `gorm:"many2many:created_by"`
        type: boolean
      last_name:
        type: string
      login_type:
        type: integer
      menu_hierarchy:
        items:
          type: integer
        type: array
      mobile_number:
        type: string
      name:
        type: string
      password:
        type: string
      plt_point_id:
        items:
          type: integer
        type: array
      preferences:
        items:
          type: integer
        type: array
      profile:
        items:
          type: integer
        type: array
      queue_services:
        items:
          type: integer
        type: array
      schedulers:
        items:
          type: integer
        type: array
      total_points:
        type: integer
      tutorials:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      username:
        type: string
      work_email:
        type: string
    type: object
  core.Country:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      country_code:
        type: string
      country_code2:
        type: string
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      default_accounting_principle:
        items:
          type: integer
        type: array
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_dst:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      state_ids:
        items:
          type: integer
        type: array
      time_zone_ids:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  core.Currency:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      auto_update_er:
        items:
          type: integer
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency_code:
        type: string
      currency_symbol:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      exchange_rate:
        type: number
      exchange_rate_history:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_base_currency:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  core.IRModelFields:
    properties:
      character_maximum_length:
        type: string
      column_default:
        type: string
      column_name:
        type: string
      createdAt:
        type: string
      data_type:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      is_nullable:
        type: string
      table_id:
        type: integer
      table_name:
        type: string
      updatedAt:
        type: string
    type: object
  core.InstalledApps:
    properties:
      access_token:
        type: string
      app_access_template:
        items:
          type: integer
        type: array
      app_details:
        items:
          type: integer
        type: array
      app_services:
        items:
          type: integer
        type: array
      category_id:
        type: integer
      category_name:
        type: string
      code:
        type: string
      concurrency_list:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      current_version:
        type: string
      developer_ids:
        items:
          type: integer
        type: array
      gamification:
        items:
          type: integer
        type: array
      icon:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_core:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      schedulers:
        items:
          type: integer
        type: array
      tutorials:
        items:
          type: integer
        type: array
      type:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      version_compatible:
        items:
          type: integer
        type: array
    type: object
  core.Lookupcode:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      display_name:
        type: string
      id:
        type: integer
      is_enabled:
        type: boolean
      lookup_code:
        type: string
      lookup_type_id:
        type: integer
      lookupType:
        $ref: '#/definitions/core.Lookuptype'
      updatedAt:
        type: string
    type: object
  core.Lookuptype:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      display_name:
        type: string
      id:
        type: integer
      is_enabled:
        type: boolean
      lookup_type:
        type: string
      lookupcodes:
        items:
          $ref: '#/definitions/core.Lookupcode'
        type: array
      updatedAt:
        type: string
    type: object
  core.NotificationSettings:
    properties:
      app_header_settings:
        items:
          type: integer
        type: array
      apps_flyer_settings:
        items:
          type: integer
        type: array
      branch_settings:
        items:
          type: integer
        type: array
      browser_notifications:
        items:
          type: integer
        type: array
      email_domain:
        type: string
      email_pop:
        items:
          type: integer
        type: array
      email_smtp:
        items:
          type: integer
        type: array
      firebase_settings:
        items:
          type: integer
        type: array
      hotjar_settings:
        items:
          type: integer
        type: array
      id:
        type: integer
      mobile_push_settings:
        items:
          type: integer
        type: array
      name:
        type: string
      pixel_settings:
        items:
          type: integer
        type: array
      sms_settings:
        items:
          type: integer
        type: array
      tag_manager_settings:
        items:
          type: integer
        type: array
      third_party_settings:
        items:
          type: integer
        type: array
    type: object
  cores.AppsListDTO:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      category_name:
        description: CategoryId    uint                   `json:"category_id"` //
          need to implement
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      icon:
        additionalProperties: true
        type: object
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      ratings:
        description: need to implement
        type: string
      source_link:
        type: string
      state:
        description: installed or not installed
        type: string
      total_installs:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  cores.CountryDTO:
    properties:
      country_code:
        type: string
      country_code2:
        type: string
      currency:
        $ref: '#/definitions/cores.CurrencyDTO'
      currency_id:
        type: integer
      default_accounting_principle:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_dst:
        type: boolean
      name:
        type: string
      state_ids:
        items:
          type: integer
        type: array
      time_zone_ids:
        items:
          type: integer
        type: array
    type: object
  cores.CurrencyDTO:
    properties:
      auto_update_er:
        items:
          type: integer
        type: array
      currency_code:
        type: string
      currency_symbol:
        type: string
      exchange_rate:
        type: number
      exchange_rate_history:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_base_currency:
        type: boolean
      name:
        type: string
    type: object
  cores.GetAppStoreDTO:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      code:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      faqs:
        items:
          additionalProperties: true
          type: object
        type: array
      icon:
        additionalProperties: true
        type: object
      id:
        type: integer
      image_options:
        items:
          additionalProperties: true
          type: object
        type: array
      installation:
        additionalProperties: true
        type: object
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      license:
        type: string
      name:
        type: string
      price:
        type: number
      publisher:
        additionalProperties: true
        type: object
      release_date:
        type: string
      reviews:
        items:
          additionalProperties: true
          type: object
        type: array
      source_link:
        type: string
      state:
        description: installed or not installed
        type: string
      support:
        additionalProperties: true
        type: object
      total_installs:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      version:
        type: string
      version_history:
        type: string
      website:
        type: string
    type: object
  cores.InstalledAppsDTO:
    properties:
      access_token:
        type: string
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_access_template:
        items:
          type: integer
        type: array
      app_details:
        items:
          type: integer
        type: array
      app_id:
        type: integer
      category_id:
        type: integer
      category_name:
        type: string
      code:
        type: string
      company_id:
        type: integer
      concurrency_list:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      current_version:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      developer_ids:
        items:
          type: integer
        type: array
      gamification:
        items:
          type: integer
        type: array
      icon:
        items:
          type: integer
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_core:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      schedulers:
        items:
          type: integer
        type: array
      tutorials:
        items:
          type: integer
        type: array
      type:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      version_compatible:
        items:
          type: integer
        type: array
    type: object
  cores.ListMetaDataDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/core.IRModelFields'
        type: array
    type: object
  cores.LookupCode:
    properties:
      display_name:
        type: string
      lookup_code:
        type: string
      lookup_type_id:
        type: integer
    type: object
  cores.LookupCodeDTO:
    properties:
      display_name:
        type: string
      id:
        type: integer
      lookup_code:
        type: string
      lookup_type:
        type: string
    type: object
  cores.LookupCodesDTO:
    properties:
      display_name:
        type: string
      id:
        type: integer
      lookup_code:
        type: string
    type: object
  cores.LookupTypesDTO:
    properties:
      display_name:
        type: string
      id:
        type: integer
      lookup_type:
        type: string
      number_of_lookup_codes:
        type: integer
    type: object
  cores.StateDTO:
    properties:
      country:
        $ref: '#/definitions/cores.CountryDTO'
      country_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      state_code:
        type: string
    type: object
  cores.ViewMetaDataDTO:
    properties:
      data:
        $ref: '#/definitions/core.IRModelFields'
    type: object
  creditnote.CreditNoteDTO:
    properties:
      adjustments:
        type: number
      app_id:
        type: integer
      attachments:
        items:
          type: integer
        type: array
      billing_address_id:
        additionalProperties: true
        type: object
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      credit_note_id:
        type: string
      credit_note_line_items:
        items:
          $ref: '#/definitions/creditnote.CreditNoteLineItems'
        type: array
      currency_id:
        type: integer
      customer_credits:
        type: number
      customer_id:
        type: integer
      external_notes:
        type: string
      generate_credit_note_id:
        type: boolean
      generate_reference_id:
        type: boolean
      id:
        type: integer
      internal_notes:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      purchase_invoice_id:
        type: integer
      reason_id:
        type: integer
      reference_id:
        type: string
      shipping_address_id:
        additionalProperties: true
        type: object
      shipping_charges:
        type: number
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      sub_total:
        type: number
      tax:
        type: number
      terms_and_conditions:
        type: string
      total_amount:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
    type: object
  creditnote.CreditNoteLineItems:
    properties:
      amount:
        type: number
      credit_note_id:
        type: integer
      discount:
        type: number
      id:
        type: integer
      price:
        type: number
      product_template_id:
        type: integer
      product_variant_id:
        type: integer
      quantity:
        type: integer
      tax:
        type: number
      uom_id:
        type: integer
    type: object
  currency_exchange.BreakDownIntervals:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      breakDownId:
        type: integer
      company_id:
        type: integer
      conversion_ratio:
        type: number
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      end_date:
        type: string
      end_time:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      start_date:
        type: string
      start_time:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  currency_exchange.CurrencyExchangeDTO:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      base_currency:
        $ref: '#/definitions/core.Currency'
      base_currency_id:
        type: integer
      breakdown_intervals:
        items:
          $ref: '#/definitions/currency_exchange.BreakDownIntervals'
        type: array
      company_id:
        type: integer
      country:
        $ref: '#/definitions/core.Country'
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      exchange:
        $ref: '#/definitions/core.Lookupcode'
      exchange_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      quote_country_id:
        type: integer
      quote_currency:
        $ref: '#/definitions/core.Currency'
      quote_currency_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  cycle_count.BulkCycleCountCreate:
    properties:
      created_id:
        type: integer
    type: object
  cycle_count.BulkCycleCountCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/cycle_count.BulkCycleCountCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  cycle_count.CycleCountCreate:
    properties:
      created_id:
        type: integer
    type: object
  cycle_count.CycleCountCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/cycle_count.CycleCountCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  cycle_count.CycleCountDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  cycle_count.CycleCountDeleteResponse:
    properties:
      body:
        description: '@ name CycleCountDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/cycle_count.CycleCountDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  cycle_count.CycleCountGet:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      auto_schedule_cycle_count:
        type: boolean
      company_id:
        type: integer
      count_method:
        $ref: '#/definitions/core.Lookupcode'
      count_method_id:
        type: integer
      create_inventory_adjustment:
        type: boolean
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      cycle_count_number:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      frequency:
        $ref: '#/definitions/core.Lookupcode'
      frequency_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      items_count:
        type: integer
      order_lines:
        items:
          $ref: '#/definitions/inventory_tasks.CycleCountLines'
        type: array
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      schedule_date:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      threshold_limit:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  cycle_count.CycleCountGetAll:
    properties:
      auto_schedule_cycle_count:
        type: boolean
      count_method:
        $ref: '#/definitions/core.Lookupcode'
      count_method_id:
        type: integer
      create_inventory_adjustment:
        type: boolean
      cycle_count_number:
        type: string
      frequency:
        $ref: '#/definitions/core.Lookupcode'
      frequency_id:
        type: integer
      items_count:
        type: integer
      order_lines:
        items:
          $ref: '#/definitions/cycle_count.CycleCountLines'
        type: array
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      schedule_date:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      threshold_limit:
        type: number
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  cycle_count.CycleCountGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/cycle_count.CycleCountGetAll'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
          pagination:
            $ref: '#/definitions/cycle_count.CycleCountPaginatedResponse'
        type: object
    type: object
  cycle_count.CycleCountGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/cycle_count.CycleCountGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  cycle_count.CycleCountLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      bin_location_id:
        items:
          additionalProperties: true
          type: object
        type: array
      bin_number:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      current_count:
        type: integer
      cycle_count_discrepancy_reason:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discrepancy_count:
        type: integer
      discrepancy_level:
        type: number
      id:
        type: integer
      inventory_count:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location_details:
        items:
          additionalProperties: true
          type: object
        type: array
      location_input_type_id:
        type: integer
      location_space_type_id:
        type: integer
      product_id:
        type: integer
      product_variant_id:
        type: integer
      rack_number:
        type: integer
      recorded_quantity:
        type: integer
      row_number:
        type: integer
      shelf_number:
        type: integer
      total_bin_count:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  cycle_count.CycleCountLinesDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  cycle_count.CycleCountLinesDeleteResponse:
    properties:
      body:
        description: '@ name CycleCountLinesDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/cycle_count.CycleCountLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  cycle_count.CycleCountPaginatedResponse:
    properties:
      current_page:
        type: integer
      next_page:
        type: integer
      per_page:
        type: integer
      previous_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  cycle_count.CycleCountRequest:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      auto_schedule_cycle_count:
        type: boolean
      company_id:
        type: integer
      count_method_id:
        type: integer
      create_inventory_adjustment:
        type: boolean
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      cycle_count_number:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      frequency_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      items_count:
        type: integer
      order_lines:
        items:
          $ref: '#/definitions/cycle_count.CycleCountLines'
        type: array
      partner_id:
        type: integer
      schedule_date:
        type: string
      status_history:
        items:
          additionalProperties: true
          type: object
        type: array
      status_id:
        type: integer
      threshold_limit:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  cycle_count.CycleCountUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  cycle_count.CycleCountUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/cycle_count.CycleCountUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  cycle_count.DownloadPdfCycleCount:
    properties:
      id:
        type: string
    type: object
  cycle_count.DownloadPdfCycleCountResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/cycle_count.DownloadPdfCycleCount'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  cycle_count.GetProductsListDTO:
    properties:
      data:
        items:
          type: integer
        type: array
    type: object
  cycle_count.SendMailCycleCount:
    properties:
      id:
        type: string
      receiver_email:
        type: string
    type: object
  cycle_count.SendMailCycleCountResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/cycle_count.SendMailCycleCount'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  debitnote.DebitNoteDTO:
    properties:
      adjustments:
        type: number
      attachments:
        items:
          type: integer
        type: array
      available_vendor_credits:
        type: number
      billing_address_id:
        type: integer
      created_by:
        type: integer
      currency_id:
        type: integer
      customer_credits:
        type: number
      debit_note_id:
        type: string
      debit_note_line_items:
        items:
          $ref: '#/definitions/debitnote.DebitNoteLineItems'
        type: array
      delivery_address_id:
        type: integer
      external_notes:
        type: string
      generate_debit_note_id:
        type: boolean
      generate_reference_id:
        type: boolean
      id:
        type: integer
      internal_notes:
        type: string
      purchase_invoice_id:
        type: integer
      reason_id:
        type: integer
      reference_id:
        type: string
      shipping_charges:
        type: number
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      sub_total:
        type: number
      tax:
        type: number
      terms_and_conditions:
        type: string
      total_amount:
        type: number
      updated_by:
        type: integer
      vendor_id:
        type: integer
    type: object
  debitnote.DebitNoteLineItems:
    properties:
      amount:
        type: number
      debit_note_id:
        type: integer
      discount:
        type: number
      id:
        type: integer
      price:
        type: number
      product_template_id:
        type: integer
      product_variant_id:
        type: integer
      quantity:
        type: integer
      tax:
        type: number
      uom_id:
        type: integer
    type: object
  delivery_orders.AdditionalInformation:
    properties:
      attachments:
        additionalProperties: true
        type: object
      notes:
        type: string
      terms_and_condtion:
        type: string
    type: object
  delivery_orders.Additionalinformation:
    properties:
      attachments:
        additionalProperties: true
        type: object
      notes:
        type: string
      terms_and_condtion:
        type: string
    type: object
  delivery_orders.BulkDeliveryOrderCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  delivery_orders.DO_PickupDateAndTime:
    properties:
      pickup_date:
        type: string
      pickup_from_time:
        type: string
      pickup_to_time:
        type: string
    type: object
  delivery_orders.DOGet:
    properties:
      additional_information:
        $ref: '#/definitions/orders.Additionalinformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      billing_address_details:
        items:
          type: integer
        type: array
      channel_name:
        type: string
      company_id:
        type: integer
      contact_details:
        $ref: '#/definitions/mdm.Partner'
      contact_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address_details:
        items:
          type: integer
        type: array
      delivery_order_details:
        $ref: '#/definitions/orders.DeliveryOrdersDetails'
      delivery_order_lines:
        items:
          $ref: '#/definitions/orders.DeliveryOrderLines'
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_credit_used:
        type: boolean
      is_enabled:
        type: boolean
      is_shipping:
        type: boolean
      payment_details:
        $ref: '#/definitions/orders.Payment_details'
      payment_type:
        $ref: '#/definitions/core.Lookupcode'
      payment_type_id:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/orders.DO_PickupDateAndTime'
      shipping_carrier:
        $ref: '#/definitions/core.Lookupcode'
      shipping_carrier_id:
        type: integer
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      shipping_order:
        $ref: '#/definitions/core.Lookupcode'
      shipping_order_id:
        type: integer
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      tracking_number:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  delivery_orders.DeliveryOrderCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  delivery_orders.DeliveryOrderDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  delivery_orders.DeliveryOrderGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/delivery_orders.DeliveryOrderResponse'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  delivery_orders.DeliveryOrderGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/delivery_orders.DOGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  delivery_orders.DeliveryOrderLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      available_credit:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      discount_value:
        type: number
      do_id:
        type: integer
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      price:
        type: integer
      product_id:
        type: integer
      product_template_id:
        type: integer
      quantity:
        type: integer
      rate:
        type: number
      serial_no:
        type: string
      tax:
        type: number
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        type: string
    type: object
  delivery_orders.DeliveryOrderLinesDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  delivery_orders.DeliveryOrderLinesResponse:
    properties:
      amount:
        type: number
      available_credit:
        type: integer
      created_by:
        type: integer
      description:
        type: string
      discount_value:
        type: number
      do_id:
        type: integer
      id:
        type: integer
      inventory_id:
        type: integer
      location:
        type: string
      payment_terms:
        $ref: '#/definitions/cores.LookupCodesDTO'
      payment_terms_id:
        type: integer
      price:
        type: integer
      product_details:
        $ref: '#/definitions/products.VariantResponseDTO'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/products.TemplateReponseDTO'
      product_template_id:
        type: integer
      quantity:
        type: integer
      rate:
        type: number
      serial_no:
        type: string
      tax:
        type: number
      uom_details:
        $ref: '#/definitions/uom.UomResponseDTO'
      uom_id:
        type: integer
      updated_by:
        type: integer
      warehouse:
        type: string
    type: object
  delivery_orders.DeliveryOrderRequest:
    properties:
      additional_information:
        $ref: '#/definitions/delivery_orders.Additionalinformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      billing_address_details:
        additionalProperties: true
        type: object
      channel_name:
        type: string
      company_id:
        type: integer
      contact_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address_details:
        additionalProperties: true
        type: object
      delivery_order_details:
        $ref: '#/definitions/delivery_orders.DeliveryOrdersDetails'
      delivery_order_lines:
        items:
          $ref: '#/definitions/delivery_orders.DeliveryOrderLines'
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_credit_used:
        type: boolean
      is_enabled:
        type: boolean
      is_shipping:
        type: boolean
      payment_details:
        $ref: '#/definitions/delivery_orders.Payment_details'
      payment_type_id:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/delivery_orders.DO_PickupDateAndTime'
      shipping_carrier_id:
        type: integer
      shipping_details:
        $ref: '#/definitions/shipping_orders.ShippingOrderRequest'
      shipping_mode_id:
        type: integer
      shipping_order_id:
        type: integer
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      tracking_number:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  delivery_orders.DeliveryOrderResponse:
    properties:
      additional_information:
        $ref: '#/definitions/delivery_orders.AdditionalInformation'
      app_id:
        type: integer
      billing_address_details:
        additionalProperties: true
        type: object
      channel_name:
        type: string
      contact_details:
        $ref: '#/definitions/contacts.PartnerResponseDTO'
      contact_id:
        type: integer
      created_by:
        type: integer
      customer_name:
        type: string
      delivery_address_details:
        additionalProperties: true
        type: object
      delivery_order_details:
        $ref: '#/definitions/delivery_orders.DeliveryOrdersDetail'
      delivery_order_lines:
        items:
          $ref: '#/definitions/delivery_orders.DeliveryOrderLinesResponse'
        type: array
      id:
        type: integer
      is_credit_used:
        type: boolean
      is_shipping:
        type: boolean
      payment_details:
        $ref: '#/definitions/delivery_orders.PaymentDetails'
      payment_type:
        $ref: '#/definitions/cores.LookupCodesDTO'
      payment_type_id:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/delivery_orders.DO_PickupDateAndTime'
      shipping_carrier:
        $ref: '#/definitions/cores.LookupCodesDTO'
      shipping_carrier_id:
        type: integer
      shipping_mode:
        $ref: '#/definitions/cores.LookupCodesDTO'
      shipping_mode_id:
        type: integer
      shipping_order:
        $ref: '#/definitions/cores.LookupCodesDTO'
      shipping_order_id:
        type: integer
      status:
        $ref: '#/definitions/cores.LookupCodesDTO'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      tracking_number:
        type: string
      updated_by:
        type: integer
      warehouse:
        $ref: '#/definitions/locations.LocationResponseDTO'
      warehouse_id:
        type: integer
    type: object
  delivery_orders.DeliveryOrderUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  delivery_orders.DeliveryOrdersDetail:
    properties:
      currency_details:
        $ref: '#/definitions/cores.CurrencyDTO'
      delivery_order_date:
        type: string
      delivery_order_number:
        type: string
      do_currency:
        type: integer
      expected_shipping_date:
        type: string
      payment_due_date:
        type: string
      payment_term:
        $ref: '#/definitions/cores.LookupCodesDTO'
      payment_term_id:
        type: integer
      price_list_id:
        type: integer
      pricing_details:
        $ref: '#/definitions/shared_pricing_and_location.Pricing'
      reference_id:
        type: string
      source_document:
        $ref: '#/definitions/cores.LookupCodesDTO'
      source_document_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
    type: object
  delivery_orders.DeliveryOrdersDetails:
    properties:
      auto_create_do_number:
        type: boolean
      auto_generate_reference_number:
        type: boolean
      delivery_order_date:
        type: string
      delivery_order_number:
        type: string
      do_currency:
        type: integer
      expected_shipping_date:
        type: string
      payment_due_date:
        type: string
      payment_term_id:
        type: integer
      price_list_id:
        type: integer
      reference_id:
        type: string
      source_document_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
    type: object
  delivery_orders.Payment_details:
    properties:
      adjustment_amount:
        type: number
      currency_id:
        type: integer
      shipping_charge:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      vender_credits:
        type: number
    type: object
  delivery_orders.PaymentDetails:
    properties:
      adjustment_amount:
        type: number
      currency_id:
        type: integer
      currency_info:
        $ref: '#/definitions/cores.CurrencyDTO'
      shipping_charge:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      vender_credits:
        type: number
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  grn.BulkGRNCreate:
    properties:
      created:
        type: boolean
    type: object
  grn.BulkGRNCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/grn.BulkGRNCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  grn.CreateGRN:
    properties:
      created_GRN_Id:
        type: integer
    type: object
  grn.DeleteGRN:
    properties:
      deleted_GRN_Id:
        type: integer
    type: object
  grn.DeleteGRNOrderLine:
    properties:
      deleted_GRN_Line_Item:
        type: string
      grn_Id:
        type: integer
    type: object
  grn.GRNOrderLines:
    properties:
      lot_number:
        type: string
      ordered_units:
        type: integer
      pending_units:
        type: integer
      product_id:
        type: integer
      product_template_id:
        type: integer
      putaway_location:
        type: string
      putaway_status:
        type: boolean
      quality_check:
        type: boolean
      reason_of_rejection:
        type: string
      received_units:
        type: integer
      rejected_quantities:
        type: integer
      shelf_location:
        type: string
      uom_id:
        type: integer
    type: object
  grn.GRNRequest:
    properties:
      auto_generate_grn_number:
        type: boolean
      auto_generate_reference_number:
        type: boolean
      create_scrap_order:
        type: boolean
      created_by:
        type: integer
      deleted_by:
        type: integer
      grn_number:
        type: string
      grn_order_lines:
        items:
          $ref: '#/definitions/grn.GRNOrderLines'
        type: array
      reference_number:
        type: string
      source_document:
        additionalProperties: true
        type: object
      source_document_type_id:
        type: integer
      status_id:
        type: integer
      updated_by:
        type: integer
      warehouse_id:
        type: integer
    type: object
  grn.GetAllGRN:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      create_scrap_order:
        type: boolean
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      document_type:
        $ref: '#/definitions/core.Lookupcode'
      grn_number:
        type: string
      grn_order_lines:
        items:
          $ref: '#/definitions/inventory_orders.GRNOrderLines'
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      reference_number:
        type: string
      source_document:
        items:
          type: integer
        type: array
      source_document_type_id:
        description: asn, ist, purchaseOrder, purchaseReturn
        type: integer
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  grn.GetGRN:
    type: object
  grn.UpdateGRN:
    properties:
      updated_GRN_Id:
        type: integer
    type: object
  internal_transfers.GetAllInternalTransfersResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/internal_transfers.ListInternalTransfersDTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  internal_transfers.InternalTransferLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_stock:
        type: integer
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      is_scrap:
        type: boolean
      ist_id:
        type: integer
      product_id:
        type: integer
      product_template_id:
        type: integer
      serial_number:
        type: string
      source_stock:
        type: integer
      transfer_quantity:
        type: integer
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  internal_transfers.InternalTransferOrderLinesDelete:
    properties:
      deleted_id:
        type: integer
      product_id:
        type: integer
    type: object
  internal_transfers.InternalTransferOrderLinesDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/internal_transfers.InternalTransferOrderLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  internal_transfers.InternalTransfersCreate:
    properties:
      created_id:
        type: integer
    type: object
  internal_transfers.InternalTransfersCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/internal_transfers.InternalTransfersCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  internal_transfers.InternalTransfersDTO:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_location_id:
        type: integer
      grn_id:
        type: integer
      id:
        type: integer
      internal_transfer_lines:
        items:
          $ref: '#/definitions/internal_transfers.InternalTransferLines'
        type: array
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      ist_date:
        type: string
      no_of_items:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/internal_transfers.PickupDateAndTime'
      reason_id:
        type: integer
      receipt_routing_id:
        type: integer
      reference_number:
        type: string
      shipping_details:
        additionalProperties: true
        type: object
      shipping_mode_id:
        type: integer
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      source_location_id:
        type: integer
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  internal_transfers.InternalTransfersDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  internal_transfers.InternalTransfersDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/internal_transfers.InternalTransfersDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  internal_transfers.InternalTransfersGet:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_location_details:
        items:
          type: integer
        type: array
      destination_location_id:
        type: integer
      destination_warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      id:
        type: integer
      internal_transfer_lines:
        items:
          $ref: '#/definitions/orders.InternalTransferLines'
        type: array
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      ist_date:
        type: string
      ist_number:
        type: string
      no_of_items:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/orders.PickupDateAndTime'
      reason:
        $ref: '#/definitions/core.Lookupcode'
      reason_id:
        type: integer
      receipt_routing:
        $ref: '#/definitions/core.Lookupcode'
      receipt_routing_id:
        type: integer
      reference_number:
        type: string
      scheduled_delivery_date:
        type: string
      shipping_details:
        items:
          type: integer
        type: array
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      source_document:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      source_location_details:
        items:
          type: integer
        type: array
      source_location_id:
        type: integer
      source_warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  internal_transfers.InternalTransfersGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/internal_transfers.InternalTransfersGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  internal_transfers.InternalTransfersUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  internal_transfers.InternalTransfersUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/internal_transfers.InternalTransfersUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  internal_transfers.ListInternalTransfersDTO:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_location_id:
        type: integer
      destination_warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      grn_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      ist_date:
        type: string
      ist_number:
        type: string
      no_of_items:
        type: integer
      reference_number:
        type: string
      scheduled_delivery_date:
        type: string
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      source_location_id:
        type: integer
      source_warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  internal_transfers.PickupDateAndTime:
    properties:
      pickup_date:
        type: string
      pickup_from_time:
        type: string
      pickup_to_time:
        type: string
    type: object
  inventory_adjustments.BulkInvAdjCreate:
    properties:
      created_id:
        type: integer
    type: object
  inventory_adjustments.BulkInvAdjCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.BulkInvAdjCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_adjustments.DownloadPdfInvAdj:
    properties:
      id:
        type: string
    type: object
  inventory_adjustments.DownloadPdfInvAdjResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.DownloadPdfInvAdj'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_adjustments.InvAdjCreate:
    properties:
      created_id:
        type: integer
    type: object
  inventory_adjustments.InvAdjCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.InvAdjCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_adjustments.InvAdjDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  inventory_adjustments.InvAdjDeleteResponse:
    properties:
      body:
        description: '@ name InvAdjDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.InvAdjDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_adjustments.InvAdjGet:
    properties:
      adjustment_date:
        type: string
      adjustment_type:
        $ref: '#/definitions/core.Lookupcode'
      adjustment_type_id:
        type: integer
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      external_notes:
        type: string
      file_attach_id:
        items:
          type: integer
        type: array
      id:
        type: integer
      internal_notes:
        type: string
      inventory_adjustment_lines:
        items:
          $ref: '#/definitions/inventory_orders.InventoryAdjustmentLines'
        type: array
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_address:
        items:
          type: integer
        type: array
      partner_id:
        type: integer
      reason:
        $ref: '#/definitions/core.Lookupcode'
      reason_id:
        type: integer
      reference_number:
        type: string
      shipping_address:
        items:
          type: integer
        type: array
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
      shipping_order_id:
        type: integer
      source_document:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      total_change_in_inventory:
        type: integer
      total_change_in_inventory_count:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_address:
        items:
          type: integer
        type: array
      warehouse_id:
        type: integer
    type: object
  inventory_adjustments.InvAdjGetAll:
    properties:
      adjustment_date:
        type: string
      adjustment_type:
        $ref: '#/definitions/core.Lookupcode'
      adjustment_type_id:
        type: integer
      external_notes:
        type: string
      file_attach_id:
        additionalProperties: true
        type: object
      internal_notes:
        type: string
      inventory_adjustment_lines:
        items:
          $ref: '#/definitions/inventory_adjustments.InventoryAdjustmentOrderLines'
        type: array
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_address:
        additionalProperties: true
        type: object
      partner_id:
        type: integer
      reason:
        $ref: '#/definitions/core.Lookupcode'
      reason_id:
        type: integer
      reference_number:
        type: string
      shipping_address:
        additionalProperties: true
        type: object
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
      shipping_order_id:
        type: integer
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      total_change_in_inventory:
        type: integer
      total_change_in_inventory_count:
        type: integer
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_address:
        additionalProperties: true
        type: object
      warehouse_id:
        type: integer
    type: object
  inventory_adjustments.InvAdjGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/inventory_adjustments.InvAdjGetAll'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
          pagination:
            $ref: '#/definitions/inventory_adjustments.InvAdjPaginatedResponse'
        type: object
    type: object
  inventory_adjustments.InvAdjGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.InvAdjGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_adjustments.InvAdjLinesDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  inventory_adjustments.InvAdjLinesDeleteResponse:
    properties:
      body:
        description: '@ name InvAdjLinesDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.InvAdjLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_adjustments.InvAdjPaginatedResponse:
    properties:
      current_page:
        type: integer
      next_page:
        type: integer
      per_page:
        type: integer
      previous_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  inventory_adjustments.InvAdjUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  inventory_adjustments.InvAdjUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.InvAdjUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_adjustments.InventoryAdjustmentLines:
    properties:
      adjusted_price:
        type: number
      adjusted_quantity:
        type: integer
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      balance_quantity:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      product_id:
        type: integer
      product_variant_id:
        type: integer
      stock_in_hand:
        type: integer
      unit_price:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  inventory_adjustments.InventoryAdjustmentOrderLines:
    properties:
      adjusted_price:
        type: number
      adjusted_quantity:
        type: integer
      balance_quantity:
        type: integer
      description:
        type: string
      product:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      stock_in_hand:
        type: integer
    type: object
  inventory_adjustments.InventoryAdjustmentsRequest:
    properties:
      adjustment_date:
        type: string
      adjustment_type_id:
        type: integer
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      external_notes:
        type: string
      file_attach_id:
        items:
          additionalProperties: true
          type: object
        type: array
      id:
        type: integer
      internal_notes:
        type: string
      inventory_adjustment_lines:
        items:
          $ref: '#/definitions/inventory_adjustments.InventoryAdjustmentLines'
        type: array
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      partner_address:
        items:
          additionalProperties: true
          type: object
        type: array
      partner_id:
        type: integer
      reason_id:
        type: integer
      reference_number:
        type: string
      shipping_address:
        items:
          additionalProperties: true
          type: object
        type: array
      shipping_order_id:
        type: integer
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status_history:
        items:
          additionalProperties: true
          type: object
        type: array
      status_id:
        type: integer
      total_change_in_inventory:
        type: integer
      total_change_in_inventory_count:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_address:
        items:
          additionalProperties: true
          type: object
        type: array
      warehouse_id:
        type: integer
    type: object
  inventory_adjustments.SendMailInvAdj:
    properties:
      id:
        type: string
      receiver_email:
        type: string
    type: object
  inventory_adjustments.SendMailInvAdjResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/inventory_adjustments.SendMailInvAdj'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  inventory_orders.AsnLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      cross_docking_req:
        items:
          type: integer
        type: array
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      no_of_boxes:
        type: integer
      package_height:
        type: number
      package_length:
        type: number
      package_type:
        $ref: '#/definitions/core.Lookupcode'
      package_type_id:
        type: integer
      package_weight:
        type: number
      package_width:
        type: number
      product:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      unit_per_box:
        type: integer
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  inventory_orders.GRNOrderLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      grn_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      lot_number:
        type: string
      ordered_units:
        type: integer
      pending_units:
        type: integer
      product:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      putaway_location:
        type: string
      putaway_status:
        type: boolean
      quality_check:
        type: boolean
      reason_of_rejection:
        type: string
      received_units:
        type: integer
      rejected_quantities:
        type: integer
      shelf_location:
        type: string
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  inventory_orders.InventoryAdjustmentLines:
    properties:
      adjusted_price:
        type: number
      adjusted_quantity:
        type: integer
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      balance_quantity:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      product:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      stock_in_hand:
        type: integer
      unit_price:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  inventory_tasks.CycleCountLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      bin_location_id:
        items:
          type: integer
        type: array
      bin_number:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      current_count:
        type: integer
      cycle_count_discrepancy_reason:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discrepancy_count:
        type: integer
      discrepancy_level:
        type: number
      id:
        type: integer
      inventory_count:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location_details:
        items:
          type: integer
        type: array
      location_input_type:
        $ref: '#/definitions/core.Lookupcode'
      location_input_type_id:
        type: integer
      location_space_type:
        $ref: '#/definitions/core.Lookupcode'
      location_space_type_id:
        type: integer
      product:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      rack_number:
        type: integer
      recorded_quantity:
        type: integer
      row_number:
        type: integer
      shelf_number:
        type: integer
      total_bin_count:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  inventory_tasks.PickListLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      product:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      quantity_ordered:
        type: integer
      quantity_picked:
        type: integer
      quantity_to_pick:
        type: integer
      remaining_quantity:
        type: integer
      sales_document_id:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  locations.Currency:
    properties:
      currency_code:
        type: string
      currency_symbol:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  locations.IdNameDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  locations.LocalWarehouseDetailsResponseDTO:
    properties:
      contact_details:
        items:
          type: integer
        type: array
      integrated_channels:
        items:
          type: integer
        type: array
      is_return_location:
        type: boolean
      is_scrap_location:
        type: boolean
      shipping_partners:
        items:
          type: integer
        type: array
      warehouse_storage_management:
        items:
          type: integer
        type: array
      zone:
        items:
          $ref: '#/definitions/locations.StorageLocationDTO'
        type: array
    type: object
  locations.LocationListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/locations.LocationListResponseDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  locations.LocationListResponseDTO:
    properties:
      LocationType:
        $ref: '#/definitions/cores.LookupCodesDTO'
      address:
        items:
          type: integer
        type: array
      created_date:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location_docs:
        items:
          type: integer
        type: array
      location_id:
        type: string
      mobile_number:
        type: string
      name:
        type: string
      notes:
        type: string
      updated_date:
        type: string
    type: object
  locations.LocationRequestDTO:
    properties:
      address:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      deleted_by:
        type: integer
      email:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      latitude:
        type: number
      location_details:
        items:
          type: integer
        type: array
      location_docs:
        items:
          type: integer
        type: array
      location_id:
        type: string
      location_type_id:
        type: integer
      longitude:
        type: number
      mobile_number:
        type: string
      name:
        type: string
      notes:
        type: string
      parent_id:
        type: integer
      related_location_id:
        type: integer
      serviceable_area_ids:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
    type: object
  locations.LocationResponseDTO:
    properties:
      LocationType:
        $ref: '#/definitions/cores.LookupCodesDTO'
      address:
        items:
          type: integer
        type: array
      child_locations:
        items:
          $ref: '#/definitions/locations.LocationResponseDTO'
        type: array
      created_date:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      latitude:
        type: number
      location_details:
        items:
          type: integer
        type: array
      location_docs:
        items:
          type: integer
        type: array
      location_id:
        type: string
      longitude:
        type: number
      mobile_number:
        type: string
      name:
        type: string
      notes:
        type: string
      parent_location:
        $ref: '#/definitions/locations.LocationResponseDTO'
      related_location_id:
        type: integer
      serviceable_area_ids:
        items:
          type: integer
        type: array
      updated_date:
        type: string
    type: object
  locations.LocationViewDTO:
    properties:
      data:
        properties:
          LocationType:
            $ref: '#/definitions/cores.LookupCodesDTO'
          address:
            additionalProperties: true
            type: object
          child_locations:
            items:
              $ref: '#/definitions/locations.LocationResponseDTO'
            type: array
          email:
            type: string
          id:
            type: integer
          latitude:
            type: number
          location_details:
            properties:
              location_details:
                properties:
                  allow_back_order:
                    type: boolean
                  contact_details:
                    additionalProperties: true
                    type: object
                  currency:
                    $ref: '#/definitions/locations.Currency'
                  email_notification:
                    type: boolean
                  external_details:
                    additionalProperties: true
                    type: object
                  integrated_channels:
                    additionalProperties: true
                    type: object
                  inventory_type:
                    $ref: '#/definitions/cores.LookupCodesDTO'
                  is_return_location:
                    type: boolean
                  is_scrap_location:
                    type: boolean
                  linked_facility:
                    $ref: '#/definitions/locations.IdNameDTO'
                  location_incharge_details:
                    additionalProperties: true
                    type: object
                  order_tag_ids:
                    items:
                      $ref: '#/definitions/cores.LookupCodesDTO'
                    type: array
                  partial_fulfilment:
                    type: boolean
                  payment_mapping:
                    additionalProperties: true
                    type: object
                  price_includes_tax:
                    $ref: '#/definitions/cores.LookupCodesDTO'
                  price_list:
                    $ref: '#/definitions/locations.PriceListResponseDTO'
                  shipping_partners:
                    additionalProperties: true
                    type: object
                  source_facility:
                    $ref: '#/definitions/locations.IdNameDTO'
                  store_name:
                    type: string
                  warehouse_storage_management:
                    additionalProperties: true
                    type: object
                  zone:
                    items:
                      $ref: '#/definitions/locations.StorageLocationDTO'
                    type: array
                type: object
            type: object
          location_docs:
            additionalProperties: true
            type: object
          location_id:
            type: string
          longitude:
            type: number
          mobile_number:
            type: string
          name:
            type: string
          notes:
            type: string
          parent_location:
            $ref: '#/definitions/locations.LocationResponseDTO'
          related_location_id:
            type: integer
          serviceable_area_ids:
            additionalProperties: true
            type: object
        type: object
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  locations.LocationsDTO:
    properties:
      address:
        additionalProperties: true
        type: object
      email:
        type: string
      latitude:
        type: number
      location_details:
        properties:
          allow_back_order:
            type: boolean
          contact_details:
            additionalProperties: true
            type: object
          currency_id:
            type: integer
          email_notification:
            type: boolean
          external_details:
            additionalProperties: true
            type: object
          integrated_channels:
            additionalProperties: true
            type: object
          inventory_type_id:
            type: integer
          is_return_location:
            type: boolean
          is_scrap_location:
            type: boolean
          linked_facility_id:
            type: integer
          location_incharge_details:
            additionalProperties: true
            type: object
          order_tag_ids:
            items:
              $ref: '#/definitions/cores.LookupCodesDTO'
            type: array
          partial_fulfilment:
            type: boolean
          payment_mapping:
            additionalProperties: true
            type: object
          price_includes_tax_id:
            type: integer
          price_list_id:
            type: integer
          shipping_partners:
            additionalProperties: true
            type: object
          source_facility_id:
            type: integer
          store_name:
            type: string
          warehouse_storage_management:
            additionalProperties: true
            type: object
          zone:
            items:
              $ref: '#/definitions/locations.StorageLocationDTO'
            type: array
        type: object
      location_docs:
        additionalProperties: true
        type: object
      location_id:
        type: string
      location_type_id:
        type: integer
      longitude:
        type: number
      mobile_number:
        type: string
      name:
        type: string
      notes:
        type: string
      parent_id:
        type: integer
      related_location_id:
        type: integer
      serviceable_area_ids:
        additionalProperties: true
        type: object
    type: object
  locations.PriceListResponseDTO:
    properties:
      id:
        type: integer
      price_list_name:
        type: string
    type: object
  locations.StorageLocationDTO:
    properties:
      capacity:
        type: integer
      child_storage_locations:
        items:
          $ref: '#/definitions/locations.StorageLocationDTO'
        type: array
      created_by_id:
        type: integer
      deleted_by_id:
        type: integer
      id:
        type: integer
      local_warehouse:
        $ref: '#/definitions/locations.LocalWarehouseDetailsResponseDTO'
      local_warehouse_id:
        type: integer
      name:
        type: string
      parent_storage_location:
        $ref: '#/definitions/locations.StorageLocationDTO'
      parent_storage_location_id:
        type: integer
      rack_id:
        type: integer
      row_id:
        type: integer
      shelf_id:
        type: integer
      storage_quantity:
        items:
          $ref: '#/definitions/locations.StorageQuantityDTO'
        type: array
      type:
        $ref: '#/definitions/core.Lookupcode'
      type_id:
        type: integer
      uom:
        items:
          type: integer
        type: array
      uom_id:
        type: integer
      updated_by_id:
        type: integer
      zone_id:
        type: integer
    type: object
  locations.StorageLocationListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/locations.StorageLocationDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  locations.StorageQuantityDTO:
    properties:
      id:
        type: integer
      product_variant:
        items:
          type: integer
        type: array
      product_variant_id:
        type: integer
      stock_count:
        type: integer
      storage_location_id:
        type: integer
    type: object
  locations.StorageQuantityListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/locations.StorageQuantityDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  marketplace.Advanced_channel_configuration:
    properties:
      email_for_shipping_orders:
        type: boolean
      partial_fulfilment_shipping:
        type: boolean
      prices_include_taxes_id:
        type: integer
    type: object
  marketplace.AvailableMarketPlacesResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/marketplace.Marketplace'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.Bank_info:
    properties:
      account_number:
        type: integer
      bank_name:
        type: string
      bank_statement:
        additionalProperties: true
        type: object
      cancelled_cheque:
        additionalProperties: true
        type: object
      holder_name:
        type: string
      ifsc_code:
        type: string
    type: object
  marketplace.Channel_details:
    properties:
      currency_id:
        type: integer
      order_tags_id:
        type: integer
      price_list_id:
        type: integer
    type: object
  marketplace.Fullfilment_details:
    properties:
      enable_fba_fbf_to_fullfil_orders:
        type: boolean
      select_the_3pl_facility:
        additionalProperties: true
        type: object
    type: object
  marketplace.Inventory_Automation_Details:
    properties:
      automation_select_source_facility:
        type: string
      inventory_type_id:
        type: integer
      sync_inventory:
        type: boolean
      sync_price:
        type: boolean
    type: object
  marketplace.Inventory_details:
    properties:
      fixed_inventory:
        type: string
      inventory_range:
        type: string
      select_source_facility_id:
        type: integer
      type_of_source_id:
        type: integer
    type: object
  marketplace.Kyc_info:
    properties:
      adhaar_card:
        additionalProperties: true
        type: object
      gstin:
        additionalProperties: true
        type: object
      iec:
        additionalProperties: true
        type: object
      pan_card:
        additionalProperties: true
        type: object
      passport:
        additionalProperties: true
        type: object
      voter_id:
        additionalProperties: true
        type: object
    type: object
  marketplace.Marketplace:
    properties:
      image_options:
        additionalProperties: true
        type: object
      location_served:
        additionalProperties: true
        type: object
      name:
        type: string
    type: object
  marketplace.Marketplace_Details:
    properties:
      advanced_channel_configuration:
        $ref: '#/definitions/marketplace.Advanced_channel_configuration'
      channel_details:
        $ref: '#/definitions/marketplace.Channel_details'
      fullfilment_details:
        $ref: '#/definitions/marketplace.Fullfilment_details'
      inventory_Automation_Details:
        $ref: '#/definitions/marketplace.Inventory_Automation_Details'
      inventory_details:
        $ref: '#/definitions/marketplace.Inventory_details'
      marketplace_id:
        type: integer
      order_details:
        $ref: '#/definitions/marketplace.Order_details'
      payment_mapping:
        $ref: '#/definitions/marketplace.Payment_mapping'
      pre_sync_configuration:
        $ref: '#/definitions/marketplace.Pre_sync_configuration'
      sync_configuration:
        $ref: '#/definitions/marketplace.Sync_configuration'
      sync_fetch_data:
        $ref: '#/definitions/marketplace.Sync_fetch_data'
    type: object
  marketplace.Marketplace_Request:
    properties:
      bank_info:
        $ref: '#/definitions/marketplace.Bank_info'
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      kyc_info:
        $ref: '#/definitions/marketplace.Kyc_info'
      marketplace_id:
        type: integer
      mobile_no:
        type: integer
      status:
        type: string
      status_history:
        type: string
    type: object
  marketplace.MarketplaceCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplaceGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/marketplace.Marketplace_Request'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplaceGetResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplaceLinesDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplaceUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplacedetailCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplacedetailDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplacedetailGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/marketplace.Marketplace_Details'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplacedetailGetResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.MarketplacedetailUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  marketplace.Order_details:
    properties:
      assign_auto_fullfilment:
        type: boolean
      order_select_source_facility_id:
        type: integer
    type: object
  marketplace.Payment_mapping:
    properties:
      payment_method:
        type: string
      payment_method_description:
        type: string
      payment_method_name:
        type: string
    type: object
  marketplace.Pre_sync_configuration:
    properties:
      pause_inventory_update:
        type: boolean
      pause_order_update:
        type: boolean
      pause_price_update:
        type: boolean
      start_date:
        type: string
    type: object
  marketplace.Sync_configuration:
    properties:
      consumer_key:
        type: string
      consumer_secret:
        type: string
      store_name:
        type: string
      store_url:
        type: string
    type: object
  marketplace.Sync_fetch_data:
    properties:
      inventory:
        type: boolean
      orders:
        type: boolean
      products:
        type: boolean
    type: object
  mdm.CentralizedBasicInventory:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      available_stock:
        type: integer
      bin_tag:
        type: string
      channel_code:
        type: string
      commited_stock:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      inventory_count:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      no_of_units:
        type: integer
      physical_location:
        items:
          type: integer
        type: array
      physical_location_id:
        type: integer
      product_details:
        items:
          type: integer
        type: array
      product_variant_id:
        type: integer
      quantity:
        type: integer
      stock_expected:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  mdm.DecentralizedBasicInventory:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      available_stock:
        type: integer
      bin_tag:
        type: string
      channel_code:
        type: string
      commited_stock:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      no_of_units:
        type: integer
      on_hand_quantity:
        type: integer
      physical_location:
        items:
          type: integer
        type: array
      physical_location_id:
        type: integer
      planned_in_quantity:
        type: integer
      planned_out_quantity:
        type: integer
      product_details:
        items:
          type: integer
        type: array
      product_variant_id:
        type: integer
      quantity:
        type: integer
      stock_expected:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  mdm.Partner:
    properties:
      additional_information:
        items:
          type: integer
        type: array
      address_details:
        items:
          type: integer
        type: array
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      billing_details:
        items:
          type: integer
        type: array
      child_contacts:
        items:
          $ref: '#/definitions/mdm.Partner'
        type: array
      company_id:
        type: integer
      company_name:
        type: string
      contact_type:
        $ref: '#/definitions/core.Lookupcode'
      contact_type_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      first_name:
        type: string
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      is_active:
        type: boolean
      is_allowed_login:
        type: boolean
      is_enabled:
        type: boolean
      last_name:
        type: string
      parent:
        $ref: '#/definitions/mdm.Partner'
      parent_id:
        type: integer
      primary_email:
        type: string
      primary_phone:
        type: string
      profile_info:
        items:
          type: integer
        type: array
      properties:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  mdm.ProductBrand:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      brand_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  mdm.ProductCategory:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      child_ids:
        items:
          $ref: '#/definitions/mdm.ProductCategory'
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      external_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      parent_category_id:
        type: integer
      recommended_category_ids:
        items:
          $ref: '#/definitions/mdm.ProductCategory'
        type: array
      related_categorie_ids:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  mdm.ProductPricingDetails:
    properties:
      cost_price:
        type: number
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      mrp:
        type: number
      sales_price:
        type: number
      shipping:
        type: boolean
      tax:
        type: boolean
      tax_options:
        type: number
    type: object
  mdm.ProductTemplate:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      brand:
        $ref: '#/definitions/mdm.ProductBrand'
      brand_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        items:
          type: integer
        type: array
      hsn_code:
        type: string
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      inventory_tracking:
        $ref: '#/definitions/core.Lookupcode'
      inventory_tracking_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      other_statuses:
        items:
          type: integer
        type: array
      package_dimensions:
        items:
          type: integer
        type: array
      package_material_options:
        items:
          type: integer
        type: array
      price_list_details:
        items:
          type: integer
        type: array
      primary_category:
        $ref: '#/definitions/mdm.ProductCategory'
      primary_category_id:
        type: integer
      product_condition:
        $ref: '#/definitions/core.Lookupcode'
      product_condition_id:
        type: integer
      product_name:
        type: string
      product_pricing_details:
        $ref: '#/definitions/mdm.ProductPricingDetails'
      product_procurement_treatment_ids:
        items:
          type: integer
        type: array
      product_type:
        $ref: '#/definitions/core.Lookupcode'
      product_type_id:
        type: integer
      product_variant_ids:
        items:
          $ref: '#/definitions/mdm.ProductVariant'
        type: array
      recommended:
        items:
          type: integer
        type: array
      related:
        items:
          type: integer
        type: array
      secondary_category:
        $ref: '#/definitions/mdm.ProductCategory'
      secondary_category_id:
        type: integer
      secondary_uom:
        items:
          type: integer
        type: array
      shipping_options:
        items:
          type: integer
        type: array
      sku_code:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_id:
        type: integer
      stock_treatment_ids:
        items:
          type: integer
        type: array
      template_options:
        items:
          type: integer
        type: array
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_price_list_ids:
        items:
          type: integer
        type: array
    type: object
  mdm.ProductVariant:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      attribute_key_values_id:
        items:
          type: integer
        type: array
      barcode:
        type: string
      category:
        $ref: '#/definitions/mdm.ProductCategory'
      category_id:
        type: integer
      company_id:
        type: integer
      condition:
        $ref: '#/definitions/core.Lookupcode'
      condition_id:
        type: integer
      cost_details:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        items:
          type: integer
        type: array
      forecasting_options:
        items:
          type: integer
        type: array
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      inventory_details:
        items:
          $ref: '#/definitions/mdm.DecentralizedBasicInventory'
        type: array
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      keyword_ids:
        items:
          type: integer
        type: array
      leaf_category:
        $ref: '#/definitions/mdm.ProductCategory'
      leaf_category_id:
        type: integer
      package_dimensions:
        items:
          type: integer
        type: array
      package_material_options:
        items:
          type: integer
        type: array
      package_template_options:
        items:
          type: integer
        type: array
      parent_sku_id:
        type: string
      price_list_details:
        items:
          type: integer
        type: array
      product_dimensions:
        items:
          type: integer
        type: array
      product_name:
        type: string
      product_pricing_details:
        $ref: '#/definitions/mdm.ProductPricingDetails'
      product_template_id:
        type: integer
      serial_number:
        type: string
      shipping_options:
        items:
          type: integer
        type: array
      sku_id:
        type: string
      standard_product_type_id:
        type: string
      standard_product_types:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      validation_info:
        type: string
      variant_type:
        $ref: '#/definitions/core.Lookupcode'
      variant_type_id:
        type: integer
      vendor_price_list_ids:
        items:
          type: integer
        type: array
    type: object
  mdm.Uom:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      base_uom:
        type: string
      code:
        type: string
      company_id:
        type: integer
      conversion_factor:
        type: number
      conversion_type:
        $ref: '#/definitions/core.Lookupcode'
      conversion_type_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      item_type:
        $ref: '#/definitions/core.Lookupcode'
      item_type_id:
        type: integer
      name:
        type: string
      uom_class_code:
        $ref: '#/definitions/mdm.UomClass'
      uom_class_id:
        type: integer
      uom_class_name:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  mdm.UomClass:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      base_uom:
        type: string
      code:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        description: Uom         *Uom   `json:"uom" gorm:"foreignkey:ID;references:ID"`
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  mdm.Vendors:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      contact:
        $ref: '#/definitions/mdm.Partner'
      contact_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      primary_contact:
        $ref: '#/definitions/mdm.Partner'
      primary_contact_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        items:
          type: integer
        type: array
      vendor_docs:
        items:
          type: integer
        type: array
    type: object
  module.CoreAppModule:
    properties:
      id:
        type: integer
      image_option:
        type: string
      item_sequence:
        type: integer
      module_code:
        type: string
      module_name:
        type: string
      parent_module_id:
        type: integer
      parentModule:
        $ref: '#/definitions/module.CoreAppModule'
      port_number:
        type: integer
      route_path:
        type: string
    type: object
  omnichannel.Marketplace:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      code:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location_served:
        items:
          type: integer
        type: array
      market_place_details:
        items:
          type: integer
        type: array
      name:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  omnichannel_fields.GetAllOmnichannelFieldsResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/omnichannel_fields.OmnichannelFieldResponseDto'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  omnichannel_fields.OmnichannelFieldDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/omnichannel_fields.OmnichannelFieldResponseDto'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  omnichannel_fields.OmnichannelFieldRequestDto:
    properties:
      allowed_values:
        items:
          type: string
        type: array
      app_id:
        type: integer
      channel_function_id:
        type: integer
      channel_type_id:
        type: integer
      data_source:
        type: string
      data_source_params:
        items:
          type: integer
        type: array
      data_type:
        type: string
      display_name:
        type: string
      field_sequence:
        type: integer
      is_mandatory:
        type: boolean
      name:
        type: string
      placeholder:
        type: string
      section_name:
        type: string
      section_sequence:
        type: integer
      type:
        type: string
    type: object
  omnichannel_fields.OmnichannelFieldResponseDto:
    properties:
      allowed_values:
        items:
          type: string
        type: array
      app_id:
        type: integer
      channel_function:
        $ref: '#/definitions/cores.LookupCodeDTO'
      channel_function_id:
        type: integer
      channel_type:
        $ref: '#/definitions/cores.LookupCodeDTO'
      channel_type_id:
        type: integer
      data_source:
        type: string
      data_source_params:
        items:
          type: integer
        type: array
      data_type:
        type: string
      display_name:
        type: string
      field_sequence:
        type: integer
      id:
        type: integer
      is_mandatory:
        type: boolean
      name:
        type: string
      placeholder:
        type: string
      section_name:
        type: string
      section_sequence:
        type: integer
      type:
        type: string
    type: object
  orders.AdditionalInformation:
    properties:
      attachments:
        items:
          type: integer
        type: array
      notes:
        type: string
      terms_and_conditions:
        type: string
    type: object
  orders.Additionalinformation:
    properties:
      attachments:
        items:
          type: integer
        type: array
      notes:
        type: string
      terms_and_condtion:
        type: string
    type: object
  orders.DO_PickupDateAndTime:
    properties:
      pickup_date:
        type: string
      pickup_from_time:
        type: string
      pickup_to_time:
        type: string
    type: object
  orders.DeliveryOrderLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      available_credit:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      discount_value:
        type: number
      do_id:
        type: integer
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      price:
        type: integer
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      quantity:
        type: integer
      rate:
        type: number
      serial_no:
        type: string
      tax:
        type: number
      uom_details:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        type: string
    type: object
  orders.DeliveryOrders:
    properties:
      additional_information:
        $ref: '#/definitions/orders.Additionalinformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      billing_address_details:
        items:
          type: integer
        type: array
      channel_name:
        type: string
      company_id:
        type: integer
      contact_details:
        $ref: '#/definitions/mdm.Partner'
      contact_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address_details:
        items:
          type: integer
        type: array
      delivery_order_details:
        $ref: '#/definitions/orders.DeliveryOrdersDetails'
      delivery_order_lines:
        items:
          $ref: '#/definitions/orders.DeliveryOrderLines'
        type: array
      id:
        type: integer
      is_active:
        type: boolean
      is_credit_used:
        type: boolean
      is_enabled:
        type: boolean
      is_shipping:
        type: boolean
      payment_details:
        $ref: '#/definitions/orders.Payment_details'
      payment_type:
        $ref: '#/definitions/core.Lookupcode'
      payment_type_id:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/orders.DO_PickupDateAndTime'
      shipping_carrier:
        $ref: '#/definitions/core.Lookupcode'
      shipping_carrier_id:
        type: integer
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      shipping_order:
        $ref: '#/definitions/core.Lookupcode'
      shipping_order_id:
        type: integer
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      tracking_number:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  orders.DeliveryOrdersDetails:
    properties:
      currency_details:
        $ref: '#/definitions/core.Currency'
      delivery_order_date:
        type: string
      delivery_order_number:
        type: string
      do_currency:
        type: integer
      expected_shipping_date:
        type: string
      payment_due_date:
        type: string
      payment_term:
        $ref: '#/definitions/core.Lookupcode'
      payment_term_id:
        type: integer
      price_list_id:
        type: integer
      pricing_details:
        $ref: '#/definitions/shared_pricing_and_location.Pricing'
      reference_id:
        type: string
      source_document:
        $ref: '#/definitions/core.Lookupcode'
      source_document_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
    type: object
  orders.InternalTransferLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_stock:
        type: integer
      id:
        type: integer
      inventory:
        $ref: '#/definitions/mdm.CentralizedBasicInventory'
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      is_scrap:
        type: boolean
      ist_id:
        type: integer
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      serial_number:
        type: string
      source_stock:
        type: integer
      transfer_quantity:
        type: integer
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  orders.Payment_details:
    properties:
      adjustment_amount:
        type: number
      currency_id:
        type: integer
      currency_info:
        $ref: '#/definitions/core.Currency'
      shipping_charge:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      vender_credits:
        type: number
    type: object
  orders.PickupDateAndTime:
    properties:
      pickup_date:
        type: string
      pickup_from_time:
        type: string
      pickup_to_time:
        type: string
    type: object
  orders.PoPaymentDetails:
    properties:
      adjustment_amount:
        type: number
      available_vendor_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  orders.PurchaseOrderLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      credit_period:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      exp_delivery_lead_time:
        type: string
      id:
        type: integer
      inventory:
        $ref: '#/definitions/mdm.CentralizedBasicInventory'
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      lead_time:
        type: string
      po_id:
        type: integer
      price:
        type: number
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      quantity:
        type: integer
      sales_period:
        type: string
      serial_number:
        type: string
      tax:
        type: number
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  orders.PurchaseOrders:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      billed:
        $ref: '#/definitions/core.Lookupcode'
      billed_id:
        type: integer
      billing_address:
        items:
          type: integer
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      date_and_time:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address:
        items:
          type: integer
        type: array
      delivery_to:
        $ref: '#/definitions/core.Lookupcode'
      delivery_to_id:
        type: integer
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      organization_details:
        items:
          type: integer
        type: array
      paid:
        $ref: '#/definitions/core.Lookupcode'
      paid_id:
        type: integer
      payment_due_date:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      po_payment_details:
        $ref: '#/definitions/orders.PoPaymentDetails'
      price_list_id:
        type: integer
      priceList:
        $ref: '#/definitions/shared_pricing_and_location.Pricing'
      purchase_order_lines:
        items:
          $ref: '#/definitions/orders.PurchaseOrderLines'
        type: array
      purchase_order_number:
        type: string
      reference_number:
        type: string
      source_document:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        items:
          type: integer
        type: array
    type: object
  orders.SO_PickupDateAndTime:
    properties:
      pickup_date:
        type: string
      pickup_from_time:
        type: string
      pickup_to_time:
        type: string
    type: object
  orders.SalesOrderLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      discount:
        type: number
      external_details:
        items:
          type: integer
        type: array
      id:
        type: integer
      inventory:
        $ref: '#/definitions/mdm.CentralizedBasicInventory'
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location:
        type: string
      payment_term_id:
        type: integer
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      price:
        type: number
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      quantity:
        type: integer
      serial_number:
        type: string
      so_id:
        type: integer
      tax:
        type: number
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  orders.SalesOrders:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      channel_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      customer_billing_address:
        items:
          type: integer
        type: array
      customer_name:
        type: string
      customer_shipping_address:
        items:
          type: integer
        type: array
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_shipping_date:
        type: string
      id:
        type: integer
      invoiced:
        $ref: '#/definitions/core.Lookupcode'
      invoiced_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_due_date:
        type: string
      payment_received:
        $ref: '#/definitions/core.Lookupcode'
      payment_received_id:
        type: integer
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      payment_type:
        $ref: '#/definitions/core.Lookupcode'
      payment_type_id:
        type: integer
      reference_number:
        type: string
      sales_order_lines:
        items:
          $ref: '#/definitions/orders.SalesOrderLines'
        type: array
      sales_order_number:
        type: string
      so_date:
        type: string
      so_payment_details:
        $ref: '#/definitions/orders.SoPaymentDetails'
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        items:
          type: integer
        type: array
    type: object
  orders.ScrapOrderLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      lot_number:
        type: integer
      price:
        type: number
      product_Details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      scrap_id:
        type: integer
      scrap_item_quantity:
        type: integer
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        description: Uom        string             `json:"uom"`
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  orders.SoPaymentDetails:
    properties:
      adjustment_amount:
        type: number
      available_customer_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  pagination.Paginatevalue:
    properties:
      filters:
        type: string
      page_no:
        type: integer
      per_page:
        type: integer
      sort:
        type: string
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  payment_terms_and_record_payment.PaymentTermDetails:
    properties:
      due:
        type: integer
      event_id:
        type: integer
      event_type:
        type: string
      on_the_day_of_month:
        type: string
      payment_term_no:
        type: integer
      term_type_id:
        type: integer
      value:
        type: integer
    type: object
  payment_terms_and_record_payment.PaymentTermsDTO:
    properties:
      account_type_id:
        type: integer
      description_on_invoice:
        type: string
      payment_term_name:
        type: string
      term_details:
        items:
          $ref: '#/definitions/payment_terms_and_record_payment.PaymentTermDetails'
        type: array
    type: object
  pick_list.BulkPicklistCreate:
    properties:
      created_id:
        type: integer
    type: object
  pick_list.BulkPicklistCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/pick_list.BulkPicklistCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pick_list.DownloadPdfPickList:
    properties:
      id:
        type: string
    type: object
  pick_list.DownloadPdfPickListResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/pick_list.DownloadPdfPickList'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pick_list.PickListLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      partner_id:
        type: integer
      product_id:
        type: integer
      product_variant_id:
        type: integer
      quantity_ordered:
        type: integer
      quantity_picked:
        type: integer
      quantity_to_pick:
        type: integer
      remaining_quantity:
        type: integer
      sales_document_id:
        items:
          additionalProperties: true
          type: object
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  pick_list.PickListOrderLines:
    properties:
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      product:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      quantity_ordered:
        type: integer
      quantity_picked:
        type: integer
      quantity_to_pick:
        type: integer
      remaining_quantity:
        type: integer
      sales_document_id:
        additionalProperties: true
        type: object
    type: object
  pick_list.PicklistCreate:
    properties:
      created_id:
        type: integer
    type: object
  pick_list.PicklistCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/pick_list.PicklistCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pick_list.PicklistDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  pick_list.PicklistDeleteResponse:
    properties:
      body:
        description: '@ name PicklistDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/pick_list.PicklistDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pick_list.PicklistGet:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      assignee_to:
        $ref: '#/definitions/mdm.Partner'
      assignee_to_id:
        type: integer
      attachment_files:
        items:
          type: integer
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      end_date_time:
        type: string
      external_notes:
        type: string
      id:
        type: integer
      internal_notes:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      items_to_pick:
        type: integer
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      pick_list_number:
        type: string
      picklist_lines:
        items:
          $ref: '#/definitions/inventory_tasks.PickListLines'
        type: array
      price_list:
        $ref: '#/definitions/shared_pricing_and_location.Pricing'
      price_list_id:
        type: integer
      reference_number:
        type: string
      select_customer:
        $ref: '#/definitions/mdm.Partner'
      select_customer_id:
        type: integer
      source_doc_type:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      start_date_time:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      total_picked_items:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  pick_list.PicklistGetAll:
    properties:
      attachment_files:
        additionalProperties: true
        type: object
      auto_create_picklist_number:
        type: boolean
      end_date_time:
        type: string
      external_notes:
        type: string
      internal_notes:
        type: string
      items_to_pick:
        type: integer
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      pick_list_number:
        type: string
      picklist_lines:
        items:
          $ref: '#/definitions/pick_list.PickListOrderLines'
        type: array
      price_list:
        $ref: '#/definitions/shared_pricing_and_location.Pricing'
      price_list_id:
        type: integer
      reference_number:
        type: string
      source_doc_type:
        $ref: '#/definitions/core.Lookupcode'
      source_document_ids:
        items:
          type: integer
        type: array
      source_document_type_id:
        type: integer
      start_date_time:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      total_picked_items:
        type: integer
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  pick_list.PicklistGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/pick_list.PicklistGetAll'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
          pagination:
            $ref: '#/definitions/pick_list.PicklistPaginatedResponse'
        type: object
    type: object
  pick_list.PicklistGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/pick_list.PicklistGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pick_list.PicklistLinesDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  pick_list.PicklistLinesDeleteResponse:
    properties:
      body:
        description: '@ name PicklistLinesDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/pick_list.PicklistLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pick_list.PicklistPaginatedResponse:
    properties:
      current_page:
        type: integer
      next_page:
        type: integer
      per_page:
        type: integer
      previous_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  pick_list.PicklistRequest:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      assignee_to_id:
        type: integer
      attachment_files:
        items:
          additionalProperties: true
          type: object
        type: array
      auto_create_picklist_number:
        type: boolean
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      end_date_time:
        type: string
      external_notes:
        type: string
      id:
        type: integer
      internal_notes:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      items_to_pick:
        type: integer
      partner_id:
        type: integer
      pick_list_number:
        type: string
      picklist_lines:
        items:
          $ref: '#/definitions/pick_list.PickListLines'
        type: array
      price_list_id:
        type: integer
      reference_number:
        type: string
      select_customer_id:
        type: integer
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      start_date_time:
        type: string
      status_history:
        items:
          additionalProperties: true
          type: object
        type: array
      status_id:
        type: integer
      total_picked_items:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  pick_list.PicklistUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  pick_list.PicklistUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/pick_list.PicklistUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pick_list.SendMailPickList:
    properties:
      id:
        type: string
      receiver_email:
        type: string
    type: object
  pick_list.SendMailPickListResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/pick_list.SendMailPickList'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pricing.PricingCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pricing.PricingDeleteLineResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pricing.PricingDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pricing.PricingListById:
    properties:
      pricing:
        $ref: '#/definitions/shared_pricing_and_location.Pricing'
      purchase:
        $ref: '#/definitions/shared_pricing_and_location.PurchasePriceList'
      sales:
        $ref: '#/definitions/shared_pricing_and_location.SalesPriceList'
      transfer:
        $ref: '#/definitions/shared_pricing_and_location.TransferPriceList'
    type: object
  pricing.PricingListByIdResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/pricing.PricingListById'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pricing.PricingListResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/shared_pricing_and_location.Pricing'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pricing.PricingUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  pricing.PurchaseLineItemsDTO:
    properties:
      credit_period:
        type: string
      expected_delivery_time:
        type: string
      lead_time:
        type: string
      minimum_order_quantity:
        type: integer
      price:
        type: number
      price_quantity:
        type: number
      product_id:
        type: integer
      quantity_value:
        additionalProperties: true
        type: object
      quantity_value_type:
        $ref: '#/definitions/cores.LookupCode'
      sales_period:
        type: string
      vendor_rate:
        type: integer
    type: object
  pricing.PurchasePriceListDTO:
    properties:
      created_by_id:
        type: integer
      deleted_by_id:
        type: integer
      other_details:
        $ref: '#/definitions/shared_pricing_and_location.PurchaseListOtherdetails'
      price_list_id:
        type: integer
      purchase_line_items:
        items:
          $ref: '#/definitions/pricing.PurchaseLineItemsDTO'
        type: array
      updated_by_id:
        type: integer
      vendor_name_id:
        type: integer
    type: object
  pricing.SalesLineItemsDTO:
    properties:
      category_commission:
        description: Product                ProductVariant   `json:"product_details"
          `
        type: integer
      duties:
        type: number
      mrp:
        type: integer
      price:
        type: integer
      pricing_options:
        type: string
      pricing_options_id:
        type: integer
      product_id:
        type: integer
      quantity_value:
        additionalProperties: true
        type: object
      quantity_value_type:
        $ref: '#/definitions/cores.LookupCode'
      quantity_value_type_id:
        type: integer
      sale_rate:
        type: integer
      spl_id:
        type: integer
      uom_details:
        $ref: '#/definitions/pricing.UomDTO'
      uom_id:
        type: integer
    type: object
  pricing.SalesPriceListDTO:
    properties:
      add_channel_of_sale:
        $ref: '#/definitions/cores.LookupCode'
      add_channel_of_sale_id:
        type: integer
      created_by_id:
        type: integer
      currency_id:
        type: integer
      customer_name:
        type: string
      deleted_by_id:
        type: integer
      enter_manually:
        type: boolean
      item_rate_rule:
        type: integer
      percentage:
        type: number
      price_list_id:
        type: integer
      sales_line_items:
        items:
          $ref: '#/definitions/pricing.SalesLineItemsDTO'
        type: array
      shipping_cost:
        type: number
      type:
        type: string
      updated_by_id:
        type: integer
    type: object
  pricing.TransferLineItemsDTO:
    properties:
      price:
        type: number
      price_quantity:
        type: number
      product_id:
        type: integer
      product_rate:
        type: number
      tpl_id:
        type: integer
    type: object
  pricing.TransferListOtherDetailsDTO:
    properties:
      credit_period:
        type: string
      expected_delivery_time:
        type: string
      from_address_location_id:
        type: integer
      lead_time:
        type: string
      location_from_address:
        $ref: '#/definitions/locations.LocationListResponseDTO'
      location_to_address:
        $ref: '#/definitions/locations.LocationListResponseDTO'
      sales_period:
        type: string
      shipping_cost:
        type: integer
      to_address_location_id:
        type: integer
    type: object
  pricing.TransferPriceListDTO:
    properties:
      contract_details:
        $ref: '#/definitions/shared_pricing_and_location.ContractDetails'
      created_by_id:
        type: integer
      currency_id:
        type: integer
      deleted_by_id:
        type: integer
      price_list_id:
        type: integer
      transfer_line_items:
        items:
          $ref: '#/definitions/pricing.TransferLineItemsDTO'
        type: array
      transfer_list_other_details:
        $ref: '#/definitions/pricing.TransferListOtherDetailsDTO'
      updated_by_id:
        type: integer
    type: object
  pricing.UomDTO:
    properties:
      code:
        type: string
      conversion_factor:
        type: number
      conversion_type:
        $ref: '#/definitions/core.Lookupcode'
      conversion_type_id:
        type: integer
      description:
        type: string
      name:
        type: string
      uom_class_id:
        type: integer
      uom_class_name:
        type: string
    type: object
  products.BrandRequestAndResponseDTO:
    properties:
      brand_name:
        type: string
      created_by:
        type: integer
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      updated_by:
        type: integer
    type: object
  products.BudleResponseDTO:
    properties:
      app_id:
        type: integer
      bundle_id:
        type: string
      bundle_name:
        type: string
      cost_price:
        type: number
      currency:
        $ref: '#/definitions/cores.CurrencyDTO'
      currency_id:
        type: integer
      description:
        items:
          type: integer
        type: array
      image_options:
        items:
          type: integer
        type: array
      instructions:
        type: string
      mrp:
        type: number
      package_details:
        items:
          type: integer
        type: array
      products:
        items:
          $ref: '#/definitions/products.BundleLineItemsResponse'
        type: array
      sales_price:
        type: number
      shipping:
        type: boolean
      status:
        $ref: '#/definitions/cores.LookupCodesDTO'
      status_id:
        type: integer
      tax:
        description: SellingPrice   float64                   `json:"selling_price"`
        type: boolean
      tax_options:
        type: number
    type: object
  products.BundleLineItems:
    properties:
      app_id:
        type: integer
      bundle_id:
        type: integer
      product_variant_id:
        type: integer
      quantity:
        type: integer
    type: object
  products.BundleLineItemsResponse:
    properties:
      app_id:
        type: integer
      bundle_id:
        type: integer
      product_variant:
        $ref: '#/definitions/products.VariantDetailsForBundleDTO'
      product_variant_id:
        type: integer
      quantity:
        type: integer
    type: object
  products.CategoryAndSubcategoryRequestAndResponseDTO:
    properties:
      app_id:
        type: integer
      child_ids:
        items:
          $ref: '#/definitions/products.CategoryAndSubcategoryRequestAndResponseDTO'
        type: array
      created_by:
        type: integer
      external_id:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      parent_category_id:
        type: integer
      updated_by:
        type: integer
    type: object
  products.CategoryResponseDTO:
    properties:
      external_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      parent_category_id:
        type: integer
    type: object
  products.CreateBundlePayload:
    properties:
      app_id:
        type: integer
      bundle_id:
        type: string
      bundle_name:
        type: string
      cost_price:
        type: number
      created_by:
        type: integer
      currency_id:
        type: integer
      deleted_by:
        type: integer
      description:
        items:
          type: integer
        type: array
      image_options:
        items:
          type: integer
        type: array
      instructions:
        type: string
      mrp:
        type: number
      package_details:
        items:
          type: integer
        type: array
      products:
        items:
          $ref: '#/definitions/products.BundleLineItems'
        type: array
      sales_price:
        type: number
      selling_price:
        type: number
      shipping:
        type: boolean
      status_id:
        type: integer
      tax:
        type: boolean
      tax_options:
        type: number
      updated_by:
        type: integer
    type: object
  products.CreateProductTemplatePayload:
    properties:
      app_id:
        type: integer
      attribute_key_values:
        items:
          $ref: '#/definitions/products.ProductSelectedAttributesAndValuesDTO'
        type: array
      brand_id:
        type: integer
      channel_code:
        type: string
      created_by:
        type: integer
      deleted_by:
        type: integer
      description:
        items:
          type: integer
        type: array
      external_details:
        items:
          type: integer
        type: array
      external_id:
        type: string
      hsn_code:
        type: string
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      inventory_tracking_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      other_statuses:
        items:
          type: integer
        type: array
      package_dimensions:
        items:
          type: integer
        type: array
      package_material_options:
        items:
          type: integer
        type: array
      price_list_details:
        items:
          type: integer
        type: array
      primary_category_id:
        type: integer
      product_condition_id:
        type: integer
      product_name:
        type: string
      product_pricing_details:
        $ref: '#/definitions/products.PricingDetailsDTO'
      product_procurement_treatment_ids:
        items:
          $ref: '#/definitions/products.Ids'
        type: array
      product_type_id:
        type: integer
      product_variant_ids:
        items:
          $ref: '#/definitions/products.CreateProductVariantDTO'
        type: array
      recommended:
        items:
          type: integer
        type: array
      related:
        items:
          type: integer
        type: array
      secondary_category_id:
        type: integer
      secondary_uom:
        items:
          type: integer
        type: array
      shipping_options:
        items:
          type: integer
        type: array
      sku_code:
        type: string
      status_id:
        type: integer
      stock_treatment_ids:
        items:
          $ref: '#/definitions/products.Ids'
        type: array
      template_options:
        items:
          type: integer
        type: array
      template_sku:
        type: string
      uom_id:
        type: integer
      updated_by:
        type: integer
      vendor_price_list_ids:
        items:
          type: integer
        type: array
    type: object
  products.CreateProductVariantDTO:
    properties:
      app_id:
        type: integer
      attribute_key_values_id:
        items:
          type: integer
        type: array
      barcode:
        type: string
      category_id:
        type: integer
      channel_code:
        type: string
      condition_id:
        type: integer
      cost_details:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      deleted_by:
        type: integer
      description:
        items:
          type: integer
        type: array
      external_details:
        items:
          type: integer
        type: array
      external_id:
        type: string
      forecasting_options:
        items:
          type: integer
        type: array
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      inventory_details:
        items:
          $ref: '#/definitions/products.Ids'
        type: array
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      keyword_ids:
        items:
          type: integer
        type: array
      leaf_category_id:
        type: integer
      package_dimensions:
        items:
          type: integer
        type: array
      package_material_options:
        items:
          type: integer
        type: array
      package_template_options:
        items:
          type: integer
        type: array
      parent_sku_id:
        type: string
      price_list_details:
        items:
          type: integer
        type: array
      product_dimensions:
        items:
          type: integer
        type: array
      product_name:
        type: string
      product_pricing_details:
        $ref: '#/definitions/products.PricingDetailsDTO'
      product_template_id:
        type: integer
      product_variant_sku:
        type: string
      shipping_options:
        items:
          type: integer
        type: array
      sku_id:
        type: string
      standard_product_type_id:
        type: string
      standard_product_types:
        items:
          $ref: '#/definitions/products.Ids'
        type: array
      status_id:
        type: integer
      template_sku:
        type: string
      updated_by:
        type: integer
      validation_info:
        type: string
      variant_type_id:
        type: integer
      vendor_price_list_ids:
        items:
          type: integer
        type: array
    type: object
  products.DecentralizedBasicInventoryResponseDTO:
    properties:
      available_stock:
        type: integer
      bin_tag:
        type: string
      channel_code:
        type: string
      commited_stock:
        type: integer
      created_by:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      no_of_units:
        type: integer
      on_hand_quantity:
        type: integer
      physical_location:
        items:
          type: integer
        type: array
      physical_location_id:
        type: integer
      planned_in_quantity:
        type: integer
      planned_out_quantity:
        type: integer
      product_details:
        items:
          type: integer
        type: array
      product_variant_id:
        type: integer
      quantity:
        type: integer
      stock_expected:
        type: integer
      updated_by:
        type: integer
    type: object
  products.Ids:
    properties:
      id:
        type: integer
    type: object
  products.PricingDetailsDTO:
    properties:
      cost_price:
        type: number
      currency_id:
        type: integer
      id:
        type: integer
      mrp:
        type: number
      sales_price:
        type: number
      shipping:
        type: boolean
      tax:
        type: boolean
      tax_options:
        type: number
    type: object
  products.PricingDetailsResponseDTO:
    properties:
      cost_price:
        type: number
      currency:
        $ref: '#/definitions/cores.CurrencyDTO'
      currency_id:
        type: integer
      id:
        type: integer
      mrp:
        type: number
      sales_price:
        type: number
      shipping:
        type: boolean
      tax:
        type: boolean
      tax_options:
        type: number
    type: object
  products.ProductBaseAttributesRequestAndResponseDTO:
    properties:
      created_by:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      updated_by:
        type: integer
    type: object
  products.ProductBaseAttributesValuesRequestAndResponseDTO:
    properties:
      base_attribute_id:
        type: integer
      created_by:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      updated_by:
        type: integer
    type: object
  products.ProductSelectedAttributesAndValuesDTO:
    properties:
      attribute_values:
        items:
          $ref: '#/definitions/products.ProductSelectedAttributesAndValuesDTO'
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  products.ProductSelectedAttributesRequestAndREsponseDTO:
    properties:
      attribute_id:
        type: integer
      created_by:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      template_id:
        type: integer
      updated_by:
        type: integer
    type: object
  products.ProductSelectedAttributesValuesRequestAndResponseeDTO:
    properties:
      attribute_id:
        type: integer
      attribute_value_id:
        type: integer
      created_by:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
      template_id:
        type: integer
      updated_by:
        type: integer
    type: object
  products.TemplateReponseDTO:
    properties:
      attribute_values:
        items:
          $ref: '#/definitions/products.TemplateSelectedAttributesResponse'
        type: array
      brand:
        $ref: '#/definitions/products.BrandRequestAndResponseDTO'
      brand_id:
        type: integer
      created_by:
        type: integer
      description:
        items:
          type: integer
        type: array
      hsn_code:
        type: string
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      inventory_tracking:
        $ref: '#/definitions/cores.LookupCodesDTO'
      inventory_tracking_id:
        type: integer
      other_statuses:
        items:
          type: integer
        type: array
      package_dimensions:
        items:
          type: integer
        type: array
      package_material_options:
        items:
          type: integer
        type: array
      price_list_details:
        items:
          additionalProperties: true
          type: object
        type: array
      primary_category:
        $ref: '#/definitions/products.CategoryResponseDTO'
      primary_category_id:
        type: integer
      product_condition:
        $ref: '#/definitions/cores.LookupCodesDTO'
      product_condition_id:
        type: integer
      product_name:
        type: string
      product_pricing_details:
        $ref: '#/definitions/products.PricingDetailsResponseDTO'
      product_procurement_treatment_ids:
        items:
          type: integer
        type: array
      product_type:
        $ref: '#/definitions/cores.LookupCodesDTO'
      product_type_id:
        type: integer
      product_variant_ids:
        items:
          $ref: '#/definitions/products.VariantResponseDTO'
        type: array
      recommended:
        items:
          type: integer
        type: array
      related:
        items:
          type: integer
        type: array
      secondary_category:
        $ref: '#/definitions/products.CategoryResponseDTO'
      secondary_category_id:
        type: integer
      secondary_uom:
        items:
          type: integer
        type: array
      shipping_options:
        items:
          type: integer
        type: array
      sku_code:
        type: string
      status:
        $ref: '#/definitions/cores.LookupCodesDTO'
      status_id:
        type: integer
      stock_treatment_ids:
        items:
          type: integer
        type: array
      template_options:
        items:
          type: integer
        type: array
      uom:
        $ref: '#/definitions/uom.UomResponseDTO'
      uom_id:
        type: integer
      updated_by:
        type: integer
      vendor_price_list_ids:
        items:
          type: integer
        type: array
    type: object
  products.TemplateSelectedAttributeValuesResponse:
    properties:
      app_id:
        type: integer
      attribute_value_id:
        type: integer
      name:
        type: string
    type: object
  products.TemplateSelectedAttributesResponse:
    properties:
      app_id:
        type: integer
      attribute_id:
        type: integer
      attribute_values:
        items:
          $ref: '#/definitions/products.TemplateSelectedAttributeValuesResponse'
        type: array
      name:
        type: string
    type: object
  products.VariantDetailsForBundleDTO:
    properties:
      app_id:
        type: integer
      parent_sku_id:
        type: string
      product_name:
        type: string
      sku_id:
        type: string
    type: object
  products.VariantResponseDTO:
    properties:
      attribute_key_values_id:
        items:
          type: integer
        type: array
      attribute_values:
        items:
          additionalProperties: true
          type: object
        type: array
      barcode:
        type: string
      category:
        $ref: '#/definitions/products.CategoryResponseDTO'
      category_id:
        type: integer
      condition:
        $ref: '#/definitions/cores.LookupCodesDTO'
      condition_id:
        type: integer
      cost_details:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      description:
        items:
          type: integer
        type: array
      forecasting_options:
        items:
          type: integer
        type: array
      id:
        type: integer
      image_options:
        items:
          type: integer
        type: array
      inventory_details:
        items:
          $ref: '#/definitions/products.DecentralizedBasicInventoryResponseDTO'
        type: array
      keyword_ids:
        items:
          type: integer
        type: array
      leaf_category:
        $ref: '#/definitions/products.CategoryResponseDTO'
      leaf_category_id:
        type: integer
      package_dimensions:
        items:
          type: integer
        type: array
      package_material_options:
        items:
          type: integer
        type: array
      package_template_options:
        items:
          type: integer
        type: array
      parent_sku_id:
        type: string
      price_list_details:
        items:
          additionalProperties: true
          type: object
        type: array
      product_dimensions:
        items:
          type: integer
        type: array
      product_name:
        type: string
      product_pricing_details:
        $ref: '#/definitions/products.PricingDetailsResponseDTO'
      product_template_id:
        type: integer
      serial_number:
        type: string
      shipping_options:
        items:
          type: integer
        type: array
      sku_id:
        type: string
      standard_product_type_id:
        type: string
      standard_product_types:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/cores.LookupCodesDTO'
      status_id:
        type: integer
      updated_by:
        type: integer
      validation_info:
        type: string
      variant_type:
        $ref: '#/definitions/cores.LookupCodesDTO'
      variant_type_id:
        type: integer
      vendor_price_list_ids:
        items:
          type: integer
        type: array
    type: object
  purchase_invoice.GetAllPurchaseInvoiceResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/purchase_invoice.ListPurchaseInvoiceDTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_invoice.ListPurchaseInvoiceDTO:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      balance_due:
        type: number
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      due_date:
        type: string
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      paid:
        $ref: '#/definitions/core.Lookupcode'
      paid_id:
        type: integer
      payment_amount:
        type: number
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      purchase_invoice_date:
        type: string
      purchase_invoice_number:
        type: string
      reference_number:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        additionalProperties: true
        type: object
    type: object
  purchase_invoice.PiPaymentDetails:
    properties:
      adjustment_amount:
        type: number
      available_vendor_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  purchase_invoice.PurchaseInvoiceCreate:
    properties:
      created_id:
        type: integer
    type: object
  purchase_invoice.PurchaseInvoiceCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_invoice.PurchaseInvoiceDTO:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      balance_due:
        type: number
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address:
        additionalProperties: true
        type: object
      due_date:
        type: string
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      link_source_document:
        additionalProperties: true
        type: object
      link_source_document_type:
        type: integer
      paid_id:
        type: integer
      payment_amount:
        type: number
      payment_details:
        $ref: '#/definitions/purchase_invoice.PiPaymentDetails'
      payment_due_date:
        type: string
      payment_terms_id:
        type: integer
      po_ids:
        items:
          additionalProperties: true
          type: object
        type: array
      purchase_invoice_date:
        type: string
      purchase_invoice_lines:
        items:
          $ref: '#/definitions/purchase_invoice.PurchaseInvoiceLines'
        type: array
      purchase_invoice_number:
        type: string
      reference_number:
        type: string
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        additionalProperties: true
        type: object
    type: object
  purchase_invoice.PurchaseInvoiceDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  purchase_invoice.PurchaseInvoiceDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_invoice.PurchaseInvoiceGet:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      balance_due:
        type: number
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address:
        items:
          type: integer
        type: array
      due_date:
        type: string
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      link_source_document:
        items:
          type: integer
        type: array
      link_source_document_id:
        $ref: '#/definitions/core.Lookupcode'
      link_source_document_type:
        type: integer
      paid:
        $ref: '#/definitions/core.Lookupcode'
      paid_id:
        type: integer
      payment_amount:
        type: number
      payment_details:
        $ref: '#/definitions/accounting.PiPaymentDetails'
      payment_due_date:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      po_ids:
        items:
          type: integer
        type: array
      purchase_invoice_date:
        type: string
      purchase_invoice_lines:
        items:
          $ref: '#/definitions/accounting.PurchaseInvoiceLines'
        type: array
      purchase_invoice_number:
        type: string
      reference_number:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        items:
          type: integer
        type: array
    type: object
  purchase_invoice.PurchaseInvoiceGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_invoice.PurchaseInvoiceLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_terms_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      product_template_id:
        type: integer
      purchase_invoice_id:
        type: integer
      quantity:
        type: integer
      serial_number:
        type: string
      tax:
        type: number
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  purchase_invoice.PurchaseInvoiceLinesDelete:
    properties:
      deleted_id:
        type: integer
      product_id:
        type: integer
    type: object
  purchase_invoice.PurchaseInvoiceLinesDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_invoice.PurchaseInvoiceUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  purchase_invoice.PurchaseInvoiceUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_orders.AdditionalInformation:
    properties:
      attachments:
        additionalProperties: true
        type: object
      notes:
        type: string
      terms_and_conditions:
        type: string
    type: object
  purchase_orders.GetAllPurchaseOrdersResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/purchase_orders.ListPurchaseOrdersDTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_orders.ListPurchaseOrdersDTO:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      billed:
        $ref: '#/definitions/cores.LookupCode'
      billed_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency_id:
        type: integer
      date_and_time:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_to_id:
        type: integer
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      organization_details:
        items:
          type: integer
        type: array
      paid:
        $ref: '#/definitions/cores.LookupCode'
      paid_id:
        type: integer
      payment_terms:
        $ref: '#/definitions/cores.LookupCode'
      payment_terms_id:
        type: integer
      purchase_order_number:
        type: string
      reference_number:
        type: string
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/cores.LookupCode'
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        additionalProperties: true
        type: object
    type: object
  purchase_orders.PoPaymentDetails:
    properties:
      adjustment_amount:
        type: number
      available_vendor_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  purchase_orders.PurchaseOrderLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      credit_period:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      exp_delivery_lead_time:
        type: string
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      lead_time:
        type: string
      po_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      product_template_id:
        type: integer
      quantity:
        type: integer
      sales_period:
        type: string
      serial_number:
        type: string
      tax:
        type: number
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  purchase_orders.PurchaseOrderLinesDelete:
    properties:
      deleted_id:
        type: integer
      product_id:
        type: integer
    type: object
  purchase_orders.PurchaseOrderLinesDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_orders.PurchaseOrderLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_orders.PurchaseOrdersCreate:
    properties:
      created_id:
        type: integer
    type: object
  purchase_orders.PurchaseOrdersCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_orders.PurchaseOrdersDTO:
    properties:
      additional_information:
        $ref: '#/definitions/purchase_orders.AdditionalInformation'
      amount:
        type: number
      billed_id:
        type: integer
      billing_address:
        additionalProperties: true
        type: object
      created_by:
        type: integer
      created_date:
        type: string
      currency_id:
        type: integer
      date_and_time:
        type: string
      delivery_address:
        additionalProperties: true
        type: object
      delivery_to_id:
        type: integer
      expected_delivery_date:
        description: delivery date
        type: string
      generate_purchase_order_number:
        type: boolean
      generate_reference_id:
        type: boolean
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      paid_id:
        type: integer
      payment_terms_id:
        type: integer
      po_payment_details:
        $ref: '#/definitions/purchase_orders.PoPaymentDetails'
      price_list_id:
        type: integer
      purchase_order_lines:
        items:
          $ref: '#/definitions/purchase_orders.PurchaseOrderLines'
        type: array
      purchase_order_number:
        type: string
      reference_number:
        type: string
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_date:
        type: string
      vendor_details:
        additionalProperties: true
        type: object
    type: object
  purchase_orders.PurchaseOrdersDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  purchase_orders.PurchaseOrdersDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_orders.PurchaseOrdersGet:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      billed:
        $ref: '#/definitions/core.Lookupcode'
      billed_id:
        type: integer
      billing_address:
        items:
          type: integer
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      date_and_time:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address:
        items:
          type: integer
        type: array
      delivery_to:
        $ref: '#/definitions/core.Lookupcode'
      delivery_to_id:
        type: integer
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      organization_details:
        items:
          type: integer
        type: array
      paid:
        $ref: '#/definitions/core.Lookupcode'
      paid_id:
        type: integer
      payment_due_date:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      po_payment_details:
        $ref: '#/definitions/orders.PoPaymentDetails'
      price_list_id:
        type: integer
      priceList:
        $ref: '#/definitions/shared_pricing_and_location.Pricing'
      purchase_order_lines:
        items:
          $ref: '#/definitions/orders.PurchaseOrderLines'
        type: array
      purchase_order_number:
        type: string
      reference_number:
        type: string
      source_document:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        items:
          type: integer
        type: array
    type: object
  purchase_orders.PurchaseOrdersGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_orders.PurchaseOrdersUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  purchase_orders.PurchaseOrdersUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_returns.GetAllPurchaseReturnsResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/purchase_returns.ListPurchaseReturnsDTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_returns.ListPurchaseReturnsDTO:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      debit_note_issued:
        $ref: '#/definitions/cores.LookupCode'
      debit_note_issued_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_terms:
        $ref: '#/definitions/cores.LookupCode'
      payment_terms_id:
        type: integer
      pr_date:
        type: string
      purchase_order:
        $ref: '#/definitions/orders.PurchaseOrders'
      purchase_return_number:
        type: string
      reference_number:
        type: string
      source_document_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status:
        $ref: '#/definitions/cores.LookupCode'
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        additionalProperties: true
        type: object
    type: object
  purchase_returns.PrPaymentDetails:
    properties:
      adjustments:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
      vendor_credits:
        type: number
    type: object
  purchase_returns.PurchaseReturnLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      discount_format:
        type: string
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location_id:
        type: integer
      pr_id:
        type: integer
      product_id:
        type: integer
      product_template_id:
        type: integer
      quantity_purchased:
        type: integer
      quantity_returned:
        type: integer
      rate:
        type: integer
      serial_number:
        type: string
      tax:
        type: number
      tax_format:
        type: string
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  purchase_returns.PurchaseReturnLinesDelete:
    properties:
      deleted_id:
        type: integer
      product_id:
        type: integer
    type: object
  purchase_returns.PurchaseReturnLinesDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_returns.PurchaseReturnLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_returns.PurchaseReturnsCreate:
    properties:
      created_id:
        type: integer
    type: object
  purchase_returns.PurchaseReturnsCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_returns.PurchaseReturnsDTO:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency_id:
        type: integer
      debit_note_issued_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_due_date:
        type: string
      payment_terms:
        $ref: '#/definitions/cores.LookupCode'
      payment_terms_id:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/orders.PickupDateAndTime'
      pr_date:
        type: string
      pr_payment_details:
        $ref: '#/definitions/purchase_returns.PrPaymentDetails'
      purchase_return_lines:
        description: |-
          AsnId                 uint                         `json:"asn_id"`
          GrnId                 uint                         `json:"grn_id"`
        items:
          $ref: '#/definitions/purchase_returns.PurchaseReturnLines'
        type: array
      reference_number:
        type: string
      source_document_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        additionalProperties: true
        type: object
    type: object
  purchase_returns.PurchaseReturnsDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  purchase_returns.PurchaseReturnsDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_returns.PurchaseReturnsGet:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      debit_note_issued:
        $ref: '#/definitions/core.Lookupcode'
      debit_note_issued_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_due_date:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      pickup_date_and_time:
        $ref: '#/definitions/orders.PickupDateAndTime'
      pr_date:
        type: string
      pr_payment_details:
        $ref: '#/definitions/returns.PrPaymentDetails'
      purchase_return_lines:
        items:
          $ref: '#/definitions/returns.PurchaseReturnLines'
        type: array
      purchase_return_number:
        type: string
      reference_number:
        type: string
      source_document:
        $ref: '#/definitions/core.Lookupcode'
      source_document_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        items:
          type: integer
        type: array
    type: object
  purchase_returns.PurchaseReturnsGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  purchase_returns.PurchaseReturnsUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  purchase_returns.PurchaseReturnsUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  response.ErrorResponse:
    properties:
      error:
        type: string
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  response.MetaResponse:
    properties:
      info:
        $ref: '#/definitions/pagination.Paginatevalue'
      message:
        default: "true"
        type: string
      success:
        default: true
        type: boolean
    type: object
  response.SuccessResponse:
    properties:
      data: {}
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  returns.PrPaymentDetails:
    properties:
      adjustments:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
      vendor_Credits:
        type: number
    type: object
  returns.PurchaseReturnLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      discount_format:
        type: string
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location_id:
        type: integer
      pr_id:
        type: integer
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      quantity_purchased:
        type: integer
      quantity_returned:
        type: integer
      rate:
        type: integer
      return_location:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      serial_number:
        type: string
      tax:
        type: number
      tax_format:
        type: string
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  returns.SalesReturnLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      quantity_returned:
        type: integer
      quantity_sold:
        type: integer
      rate:
        type: integer
      return_location:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      return_location_id:
        type: integer
      return_type:
        $ref: '#/definitions/core.Lookupcode'
      return_type_id:
        type: integer
      serial_number:
        type: string
      sr_id:
        type: integer
      tax:
        type: number
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  returns.SrPaymentDetails:
    properties:
      adjustments:
        type: number
      customer_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  sales_invoice.BulkSalesInvoiceCreate:
    properties:
      created_id:
        type: integer
    type: object
  sales_invoice.BulkSalesInvoiceCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_invoice.BulkSalesInvoiceCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_invoice.DownloadPdfSalesInvoice:
    properties:
      id:
        type: string
    type: object
  sales_invoice.DownloadPdfSalesInvoiceResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_invoice.DownloadPdfSalesInvoice'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_invoice.SalesInvoiceCreate:
    properties:
      created_id:
        type: integer
    type: object
  sales_invoice.SalesInvoiceCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_invoice.SalesInvoiceCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_invoice.SalesInvoiceDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  sales_invoice.SalesInvoiceDeleteResponse:
    properties:
      body:
        description: '@ name SalesInvoiceDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/sales_invoice.SalesInvoiceDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_invoice.SalesInvoiceGet:
    properties:
      adjustments:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      attachment_files:
        items:
          type: integer
        type: array
      available_customer_credits:
        type: number
      balance_due_amount:
        type: number
      billing_address:
        items:
          type: integer
        type: array
      channel:
        $ref: '#/definitions/omnichannel.Marketplace'
      channel_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      customer:
        $ref: '#/definitions/mdm.Partner'
      customer_credits_amount:
        type: number
      customer_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address:
        items:
          type: integer
        type: array
      expected_shipment_date:
        type: string
      external_notes:
        type: string
      id:
        type: integer
      internal_notes:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      is_invoiced:
        type: boolean
      is_payment_received:
        type: boolean
      link_sales_orders:
        items:
          type: integer
        type: array
      payment_due_date:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      payment_type:
        $ref: '#/definitions/core.Lookupcode'
      payment_type_id:
        type: integer
      reference_number:
        type: string
      sales_invoice_lines:
        items:
          $ref: '#/definitions/accounting.SalesInvoiceLines'
        type: array
      sales_invoice_number:
        type: string
      sales_order_ids:
        items:
          type: integer
        type: array
      shipping_address:
        items:
          type: integer
        type: array
      shipping_amount:
        type: number
      source_document_type:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      sub_total_amount:
        type: number
      tax_amount:
        type: number
      terms_and_conditions:
        type: string
      total_amount:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      use_credits_for_payment:
        type: boolean
    type: object
  sales_invoice.SalesInvoiceGetAll:
    properties:
      adjustments:
        type: number
      attachment_files:
        additionalProperties: true
        type: object
      auto_generate_invoice_number:
        type: boolean
      auto_generate_reference_number:
        type: boolean
      available_customer_credits:
        type: number
      balance_due_amount:
        type: number
      billing_address:
        additionalProperties: true
        type: object
      channel:
        $ref: '#/definitions/omnichannel.Marketplace'
      channel_id:
        type: integer
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      customer:
        $ref: '#/definitions/mdm.Partner'
      customer_credits_amount:
        type: number
      customer_id:
        type: integer
      delivery_address:
        additionalProperties: true
        type: object
      expected_shipment_date:
        type: string
      external_notes:
        type: string
      internal_notes:
        type: string
      is_invoiced:
        type: boolean
      is_payment_received:
        type: boolean
      link_sales_orders:
        additionalProperties: true
        type: object
      payment_due_date:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      payment_type:
        $ref: '#/definitions/core.Lookupcode'
      payment_type_id:
        type: integer
      reference_number:
        type: string
      sales_invoice_lines:
        items:
          $ref: '#/definitions/sales_invoice.SalesInvoiceOrderLines'
        type: array
      sales_invoice_number:
        type: string
      sales_order_ids:
        items:
          type: integer
        type: array
      shipping_address:
        additionalProperties: true
        type: object
      shipping_amount:
        type: number
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      sub_total_amount:
        type: number
      tax_amount:
        type: number
      terms_and_conditions:
        type: string
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  sales_invoice.SalesInvoiceGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/sales_invoice.SalesInvoiceGetAll'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
          pagination:
            $ref: '#/definitions/sales_invoice.SalesInvoicePaginatedResponse'
        type: object
    type: object
  sales_invoice.SalesInvoiceGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_invoice.SalesInvoiceGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_invoice.SalesInvoiceLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      discount:
        type: number
      discount_type_id:
        type: integer
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_terms_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      product_variant_id:
        type: integer
      quantity:
        type: integer
      tax:
        type: number
      tax_type_id:
        type: integer
      total_amount:
        type: number
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  sales_invoice.SalesInvoiceLinesDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  sales_invoice.SalesInvoiceLinesDeleteResponse:
    properties:
      body:
        description: '@ name SalesInvoiceLinesDeleteResponse'
        properties:
          data:
            $ref: '#/definitions/sales_invoice.SalesInvoiceLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_invoice.SalesInvoiceOrderLines:
    properties:
      description:
        type: string
      discount:
        type: number
      discount_type:
        $ref: '#/definitions/core.Lookupcode'
      discount_type_id:
        type: integer
      inventory:
        $ref: '#/definitions/mdm.CentralizedBasicInventory'
      inventory_id:
        type: integer
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      product_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      product_variant_id:
        type: integer
      products:
        $ref: '#/definitions/mdm.ProductTemplate'
      quantity:
        type: integer
      tax:
        type: number
      tax_type:
        $ref: '#/definitions/core.Lookupcode'
      tax_type_id:
        type: integer
      total_amount:
        type: number
      uom:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      warehouse:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      warehouse_id:
        type: integer
    type: object
  sales_invoice.SalesInvoicePaginatedResponse:
    properties:
      current_page:
        type: integer
      next_page:
        type: integer
      per_page:
        type: integer
      previous_page:
        type: integer
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
  sales_invoice.SalesInvoiceRequest:
    properties:
      adjustments:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      attachment_files:
        items:
          additionalProperties: true
          type: object
        type: array
      auto_generate_invoice_number:
        type: boolean
      auto_generate_reference_number:
        type: boolean
      available_customer_credits:
        type: number
      balance_due_amount:
        type: number
      billing_address:
        items:
          additionalProperties: true
          type: object
        type: array
      channel_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency_id:
        type: integer
      customer_credits_amount:
        type: number
      customer_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_address:
        items:
          additionalProperties: true
          type: object
        type: array
      expected_shipment_date:
        type: string
      external_notes:
        type: string
      id:
        type: integer
      internal_notes:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      is_invoiced:
        type: boolean
      is_payment_received:
        type: boolean
      link_sales_orders:
        items:
          additionalProperties: true
          type: object
        type: array
      payment_due_date:
        type: string
      payment_terms_id:
        type: integer
      payment_type_id:
        type: integer
      reference_number:
        type: string
      sales_invoice_lines:
        items:
          $ref: '#/definitions/sales_invoice.SalesInvoiceLines'
        type: array
      sales_invoice_number:
        type: string
      sales_order_ids:
        items:
          type: integer
        type: array
      shipping_address:
        items:
          additionalProperties: true
          type: object
        type: array
      shipping_amount:
        type: number
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status_history:
        items:
          additionalProperties: true
          type: object
        type: array
      status_id:
        type: integer
      sub_total_amount:
        type: number
      tax_amount:
        type: number
      terms_and_conditions:
        type: string
      total_amount:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      use_credits_for_payment:
        type: boolean
    type: object
  sales_invoice.SalesInvoiceUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  sales_invoice.SalesInvoiceUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_invoice.SalesInvoiceUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_invoice.SendMailSalesInvoice:
    properties:
      id:
        type: string
      receiver_email:
        type: string
    type: object
  sales_invoice.SendMailSalesInvoiceResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_invoice.SendMailSalesInvoice'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_orders.AdditionalInformation:
    properties:
      attachments:
        additionalProperties: true
        type: object
      notes:
        type: string
      terms_and_conditions:
        type: string
    type: object
  sales_orders.GetAllSalesOrdersResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/sales_orders.ListSalesOrdersDTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_orders.ListSalesOrdersDTO:
    properties:
      So_date:
        type: string
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      channel_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_shipping_date:
        type: string
      id:
        type: integer
      invoiced:
        $ref: '#/definitions/cores.LookupCode'
      invoiced_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_amount:
        type: number
      payment_received:
        $ref: '#/definitions/cores.LookupCode'
      payment_received_id:
        type: integer
      payment_term_id:
        type: integer
      payment_terms:
        $ref: '#/definitions/cores.LookupCode'
      payment_type:
        $ref: '#/definitions/cores.LookupCode'
      payment_type_id:
        type: integer
      reference_number:
        type: string
      sales_order_number:
        type: string
      status:
        $ref: '#/definitions/cores.LookupCode'
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  sales_orders.SalesOrderLinesDelete:
    properties:
      deleted_id:
        type: integer
      product_id:
        type: integer
    type: object
  sales_orders.SalesOrderLinesDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_orders.SalesOrderLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_orders.SalesOrderlines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      discount:
        type: number
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      location:
        type: string
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      product_template_id:
        type: integer
      quantity:
        type: integer
      serial_number:
        type: string
      so_id:
        type: integer
      tax:
        type: number
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      warehouse_id:
        type: integer
    type: object
  sales_orders.SalesOrdersCreate:
    properties:
      created_id:
        type: integer
    type: object
  sales_orders.SalesOrdersCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_orders.SalesOrdersCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_orders.SalesOrdersDTO:
    properties:
      additional_information:
        $ref: '#/definitions/sales_orders.AdditionalInformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      channel_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency_id:
        type: integer
      customer_billing_address:
        additionalProperties: true
        type: object
      customer_name:
        type: string
      customer_shipping_address:
        additionalProperties: true
        type: object
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_shipping_date:
        type: string
      id:
        type: integer
      invoiced_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_amount:
        type: number
      payment_due_date:
        type: string
      payment_received_id:
        type: integer
      payment_terms_id:
        type: integer
      payment_type_id:
        type: integer
      reference_number:
        type: string
      sales_order_lines:
        items:
          $ref: '#/definitions/sales_orders.SalesOrderlines'
        type: array
      so_date:
        type: string
      so_payment_details:
        $ref: '#/definitions/sales_orders.SoPaymentDetails'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        additionalProperties: true
        type: object
    type: object
  sales_orders.SalesOrdersDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  sales_orders.SalesOrdersDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_orders.SalesOrdersDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_orders.SalesOrdersGet:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      channel_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      customer_billing_address:
        items:
          type: integer
        type: array
      customer_name:
        type: string
      customer_shipping_address:
        items:
          type: integer
        type: array
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_shipping_date:
        type: string
      id:
        type: integer
      invoiced:
        $ref: '#/definitions/core.Lookupcode'
      invoiced_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      payment_due_date:
        type: string
      payment_received:
        $ref: '#/definitions/core.Lookupcode'
      payment_received_id:
        type: integer
      payment_terms:
        $ref: '#/definitions/core.Lookupcode'
      payment_terms_id:
        type: integer
      payment_type:
        $ref: '#/definitions/core.Lookupcode'
      payment_type_id:
        type: integer
      reference_number:
        type: string
      sales_order_lines:
        items:
          $ref: '#/definitions/orders.SalesOrderLines'
        type: array
      sales_order_number:
        type: string
      so_date:
        type: string
      so_payment_details:
        $ref: '#/definitions/orders.SoPaymentDetails'
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_details:
        items:
          type: integer
        type: array
    type: object
  sales_orders.SalesOrdersGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_orders.SalesOrdersGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_orders.SalesOrdersUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  sales_orders.SalesOrdersUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_orders.SalesOrdersUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_orders.SoPaymentDetails:
    properties:
      adjustment_amount:
        type: number
      available_customer_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
      use_credits_for_payment:
        type: boolean
    type: object
  sales_returns.GetAllSalesReturnsResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/sales_returns.ListSalesReturnsDTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_returns.ListSalesReturnsDTO:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      channel_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      credit_issued:
        $ref: '#/definitions/cores.LookupCode'
      credit_issued_id:
        type: integer
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      reason:
        $ref: '#/definitions/cores.LookupCode'
      reason_id:
        type: integer
      reference_number:
        type: string
      sales_order:
        $ref: '#/definitions/orders.SalesOrders'
      sales_return_number:
        type: string
      shipping_carrier:
        $ref: '#/definitions/shipping.ShippingPartner'
      shipping_carrier_id:
        type: integer
      shipping_details:
        additionalProperties: true
        type: object
      shipping_mode:
        $ref: '#/definitions/cores.LookupCode'
      shipping_mode_id:
        type: integer
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      sr_date:
        type: string
      status:
        $ref: '#/definitions/cores.LookupCode'
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  sales_returns.SalesReturnLinesDelete:
    properties:
      deleted_id:
        type: integer
      product_id:
        type: integer
    type: object
  sales_returns.SalesReturnLinesDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_returns.SalesReturnLinesDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_returns.SalesReturnsCreate:
    properties:
      created_id:
        type: integer
    type: object
  sales_returns.SalesReturnsCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_returns.SalesReturnsCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_returns.SalesReturnsDTO:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      channel_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      credit_issued_id:
        type: integer
      currency_id:
        type: integer
      customer_billing_address:
        additionalProperties: true
        type: object
      customer_name:
        type: string
      customer_pickup_address:
        additionalProperties: true
        type: object
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      do_id:
        type: integer
      expected_delivery_date:
        description: LinkDocumentNumber     string                       `json:"link_document_number"`
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      pickup_date_and_time:
        $ref: '#/definitions/orders.PickupDateAndTime'
      reason_id:
        type: integer
      reference_number:
        description: |-
          AsnId                    uint                         `json:"asn_id"`
          GrnId                    uint                         `json:"grn_id"`
        type: string
      sales_returns_lines:
        items:
          $ref: '#/definitions/sales_returns.SalesReturnsLines'
        type: array
      shipping_carrier_id:
        type: integer
      shipping_details:
        additionalProperties: true
        type: object
      shipping_mode_id:
        type: integer
      so_id:
        type: integer
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      sr_date:
        description: LinkDocument           string                       `json:"link_document"`
        type: string
      sr_payment_details:
        $ref: '#/definitions/sales_returns.SrPaymentDetails'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  sales_returns.SalesReturnsDelete:
    properties:
      deleted_id:
        type: integer
    type: object
  sales_returns.SalesReturnsDeleteResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_returns.SalesReturnsDelete'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_returns.SalesReturnsGet:
    properties:
      additional_information:
        $ref: '#/definitions/orders.AdditionalInformation'
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      channel_name:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      credit_issued:
        $ref: '#/definitions/core.Lookupcode'
      credit_issued_id:
        type: integer
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      customer_billing_address:
        items:
          type: integer
        type: array
      customer_name:
        type: string
      customer_pickup_address:
        items:
          type: integer
        type: array
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_order:
        $ref: '#/definitions/orders.DeliveryOrders'
      do_id:
        type: integer
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      pickup_date_and_time:
        $ref: '#/definitions/orders.PickupDateAndTime'
      reason:
        $ref: '#/definitions/core.Lookupcode'
      reason_id:
        type: integer
      reference_number:
        type: string
      sales_order:
        $ref: '#/definitions/orders.SalesOrders'
      sales_return_lines:
        items:
          $ref: '#/definitions/returns.SalesReturnLines'
        type: array
      sales_return_number:
        type: string
      shipping_carrier:
        $ref: '#/definitions/shipping.ShippingPartner'
      shipping_carrier_id:
        type: integer
      shipping_details:
        items:
          type: integer
        type: array
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      so_id:
        type: integer
      source_document_type:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      sr_date:
        type: string
      sr_payment_details:
        $ref: '#/definitions/returns.SrPaymentDetails'
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  sales_returns.SalesReturnsGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_returns.SalesReturnsGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_returns.SalesReturnsLines:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      id:
        type: integer
      inventory_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      product_id:
        type: integer
      product_template_id:
        type: integer
      quantity_returned:
        type: integer
      quantity_sold:
        type: integer
      rate:
        type: integer
      return_location_id:
        type: integer
      return_type_id:
        type: integer
      serial_number:
        type: string
      sr_id:
        type: integer
      tax:
        type: number
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  sales_returns.SalesReturnsUpdate:
    properties:
      updated_id:
        type: integer
    type: object
  sales_returns.SalesReturnsUpdateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/sales_returns.SalesReturnsUpdate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  sales_returns.SrPaymentDetails:
    properties:
      adjustments:
        type: number
      customer_credits:
        type: number
      shipping_charges:
        type: number
      sub_total:
        type: number
      tax:
        type: number
      total_amount:
        type: number
    type: object
  scrap_orders.BulkScrapOrderCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  scrap_orders.SO_PickupDateAndTime:
    properties:
      pickup_date:
        type: string
      pickup_from_time:
        type: string
      pickup_to_time:
        type: string
    type: object
  scrap_orders.SOGet:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      grn_status:
        type: boolean
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      is_shipping:
        type: boolean
      no_of_items:
        type: integer
      order_lines:
        items:
          $ref: '#/definitions/orders.ScrapOrderLines'
        type: array
      pickup_date_time:
        $ref: '#/definitions/orders.SO_PickupDateAndTime'
        description: |-
          DeliveryAddress_id uint                 `json:"deliveryaddress_id" gorm:"type:int"`
          DeliveryAddress    mdm.Partner          `json:"deliveryaddress" gorm:"foreignkey:DeliveryAddress_id; references:ID"`
      reference_id:
        type: string
      schedule_scrap_date:
        type: string
      scrap_location:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      scrap_location_details:
        items:
          type: integer
        type: array
      scrap_location_id:
        type: integer
      scrap_order_no:
        type: string
      scrap_reason:
        $ref: '#/definitions/core.Lookupcode'
      scrap_reason_id:
        type: integer
      scrap_source_location:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      scrap_source_location_id:
        type: integer
      scraping_status:
        type: string
      shipping_order_id:
        type: integer
      source_document:
        $ref: '#/definitions/core.Lookupcode'
      source_document_type_id:
        type: integer
      source_documents:
        items:
          type: integer
        type: array
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_history:
        items:
          type: integer
        type: array
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  scrap_orders.ScrapOrderCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  scrap_orders.ScrapOrderDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  scrap_orders.ScrapOrderGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/scrap_orders.ScrapOrdersResponseDTO'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  scrap_orders.ScrapOrderGetResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/scrap_orders.SOGet'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  scrap_orders.ScrapOrderLines:
    properties:
      id:
        type: integer
      inventory_id:
        type: integer
      lot_number:
        type: integer
      price:
        type: number
      product_id:
        type: integer
      scrap_id:
        type: integer
      scrap_item_quantity:
        type: integer
      uom_id:
        type: integer
    type: object
  scrap_orders.ScrapOrderLinesResponseDTO:
    properties:
      id:
        type: integer
      inventory_id:
        type: integer
      lot_number:
        type: integer
      price:
        type: number
      product_Details:
        $ref: '#/definitions/products.VariantResponseDTO'
      product_id:
        type: integer
      scrap_id:
        type: integer
      scrap_item_quantity:
        type: integer
      uom:
        $ref: '#/definitions/uom.UomResponseDTO'
      uom_id:
        type: integer
    type: object
  scrap_orders.ScrapOrderUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  scrap_orders.ScrapOrders:
    properties:
      auto_create_scrap_number:
        type: boolean
      auto_generate_reference_number:
        type: boolean
      created_by:
        type: integer
      deleted_by:
        type: integer
      grn_status:
        type: boolean
      id:
        type: integer
      is_shipping:
        type: boolean
      no_of_items:
        type: integer
      order_lines:
        items:
          $ref: '#/definitions/scrap_orders.ScrapOrderLines'
        type: array
      pickup_date_time:
        $ref: '#/definitions/scrap_orders.SO_PickupDateAndTime'
      reference_id:
        type: string
      schedule_scrap_date:
        type: string
      scrap_location_details:
        additionalProperties: true
        type: object
      scrap_location_id:
        type: integer
      scrap_order_no:
        type: string
      scrap_reason_id:
        type: integer
      scrap_source_location_id:
        type: integer
      scraping_status:
        type: string
      shipping_details:
        $ref: '#/definitions/shipping_orders.ShippingOrderRequest'
      shipping_order_id:
        type: integer
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_by:
        type: integer
    type: object
  scrap_orders.ScrapOrdersResponseDTO:
    properties:
      app_id:
        type: integer
      company_id:
        type: integer
      created_date:
        type: string
      grn_status:
        type: boolean
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      is_shipping:
        type: boolean
      no_of_items:
        type: integer
      order_lines:
        items:
          $ref: '#/definitions/scrap_orders.ScrapOrderLinesResponseDTO'
        type: array
      pickup_date_time:
        $ref: '#/definitions/scrap_orders.SO_PickupDateAndTime'
      reference_id:
        type: string
      schedule_scrap_date:
        type: string
      scrap_location:
        $ref: '#/definitions/locations.LocationResponseDTO'
      scrap_location_details:
        additionalProperties: true
        type: object
      scrap_location_id:
        type: integer
      scrap_order_no:
        type: string
      scrap_reason:
        $ref: '#/definitions/cores.LookupCodeDTO'
      scrap_reason_id:
        type: integer
      scrap_source_location:
        $ref: '#/definitions/locations.LocationResponseDTO'
      scrap_source_location_id:
        type: integer
      scraping_status:
        type: string
      shipping_order_id:
        type: integer
      source_document:
        $ref: '#/definitions/cores.LookupCodeDTO'
      source_document_type_id:
        type: integer
      source_documents:
        additionalProperties: true
        type: object
      status:
        $ref: '#/definitions/cores.LookupCodeDTO'
      status_history:
        additionalProperties: true
        type: object
      status_id:
        type: integer
      total_quantity:
        type: integer
      updated_date:
        type: string
    type: object
  shared_pricing_and_location.ContractDetails:
    properties:
      receiver_name:
        type: string
      sender_name:
        type: string
    type: object
  shared_pricing_and_location.Locations:
    properties:
      address:
        items:
          type: integer
        type: array
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      child_locations:
        items:
          $ref: '#/definitions/shared_pricing_and_location.Locations'
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      latitude:
        type: number
      location_docs:
        items:
          type: integer
        type: array
      location_id:
        type: string
      location_type:
        $ref: '#/definitions/core.Lookupcode'
      location_type_id:
        type: integer
      longitude:
        type: number
      mobile_number:
        type: string
      name:
        type: string
      notes:
        type: string
      parent_id:
        type: integer
      parent_location:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      related_location_id:
        type: integer
      serviceable_area_ids:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shared_pricing_and_location.Pricing:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      currency:
        $ref: '#/definitions/core.Currency'
      currency_id:
        type: integer
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      description:
        type: string
      end_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      price_list_id:
        type: integer
      price_list_name:
        type: string
      price_list_rule:
        type: string
      purchase_price_list:
        $ref: '#/definitions/shared_pricing_and_location.PurchasePriceList'
      purchase_price_list_id:
        type: integer
      sales_price_list:
        $ref: '#/definitions/shared_pricing_and_location.SalesPriceList'
      sales_price_list_id:
        type: integer
      start_date:
        type: string
      status:
        $ref: '#/definitions/core.Lookupcode'
      status_id:
        type: integer
      transfer_price_list:
        $ref: '#/definitions/shared_pricing_and_location.TransferPriceList'
      transfer_price_list_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shared_pricing_and_location.PurchaseLineItems:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      credit_period:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      expected_delivery_time:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      lead_time:
        type: string
      minimum_order_quantity:
        type: integer
      mrp:
        type: number
      ppl_id:
        type: integer
      price:
        type: number
      price_quantity:
        type: number
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      quantity_value:
        items:
          type: integer
        type: array
      quantity_value_type:
        $ref: '#/definitions/core.Lookupcode'
      quantity_value_type_id:
        type: integer
      sales_period:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_rate:
        type: integer
    type: object
  shared_pricing_and_location.PurchaseListOtherdetails:
    properties:
      shipping_cost:
        type: integer
    type: object
  shared_pricing_and_location.PurchasePriceList:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      other_details:
        $ref: '#/definitions/shared_pricing_and_location.PurchaseListOtherdetails'
      purchase_line_items:
        items:
          $ref: '#/definitions/shared_pricing_and_location.PurchaseLineItems'
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
      vendor_name:
        $ref: '#/definitions/mdm.Vendors'
      vendor_name_id:
        type: integer
    type: object
  shared_pricing_and_location.SalesLineItems:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      category_commission:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      duties:
        description: product_taxes
        type: number
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      mrp:
        type: number
      price:
        type: number
      pricing_options:
        $ref: '#/definitions/core.Lookupcode'
      pricing_options_id:
        type: integer
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      quantity_value:
        items:
          type: integer
        type: array
      quantity_value_type:
        $ref: '#/definitions/core.Lookupcode'
      quantity_value_type_id:
        type: integer
      sale_rate:
        type: number
      spl_id:
        type: integer
      uom_details:
        $ref: '#/definitions/mdm.Uom'
      uom_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shared_pricing_and_location.SalesPriceList:
    properties:
      add_channel_of_sale:
        $ref: '#/definitions/core.Lookupcode'
      add_channel_of_sale_id:
        type: integer
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      customer_name:
        type: string
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      enter_manually:
        type: boolean
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      percentage:
        type: number
      sales_line_items:
        items:
          $ref: '#/definitions/shared_pricing_and_location.SalesLineItems'
        type: array
      select_type:
        type: boolean
      shipping_cost:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shared_pricing_and_location.TransferLineItems:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      price:
        type: number
      price_quantity:
        type: number
      product_details:
        $ref: '#/definitions/mdm.ProductVariant'
      product_id:
        type: integer
      product_rate:
        type: number
      tpl_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shared_pricing_and_location.TransferListOtherDetails:
    properties:
      credit_period:
        type: string
      expected_delivery_time:
        type: string
      from_address_location_id:
        type: integer
      lead_time:
        type: string
      location_from_address:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      location_to_address:
        $ref: '#/definitions/shared_pricing_and_location.Locations'
      sales_period:
        type: string
      shipping_cost:
        type: integer
      to_address_location_id:
        type: integer
    type: object
  shared_pricing_and_location.TransferPriceList:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      contract_details:
        $ref: '#/definitions/shared_pricing_and_location.ContractDetails'
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      transfer_line_items:
        items:
          $ref: '#/definitions/shared_pricing_and_location.TransferLineItems'
        type: array
      transfer_list_other_details:
        $ref: '#/definitions/shared_pricing_and_location.TransferListOtherDetails'
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping.NDRLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_attempt_made:
        type: integer
      failure_reason:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      last_delivery_attempt_date:
        type: string
      ndrs_id:
        type: string
      ndrs_raised_date:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping.ShippingOrder:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      awb_number:
        type: string
      billing_address:
        items:
          type: integer
        type: array
      billing_details:
        items:
          type: integer
        type: array
      channel:
        $ref: '#/definitions/omnichannel.Marketplace'
      channel_id:
        type: integer
      cod_amount_received:
        type: number
      cod_date_and_time_of_receiving:
        type: string
      cod_due_amount:
        type: number
      cod_status:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_country:
        $ref: '#/definitions/core.Country'
      destination_country_id:
        type: integer
      destination_zipcode:
        type: integer
      eunimart_wallet_amount:
        type: number
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_cod:
        type: boolean
      is_enabled:
        type: boolean
      is_marketplace_order:
        type: boolean
      is_shipping_address:
        type: boolean
      order:
        $ref: '#/definitions/orders.SalesOrders'
      order_date:
        type: string
      order_id:
        type: integer
      order_value:
        type: number
      origin_country:
        $ref: '#/definitions/core.Country'
      origin_country_id:
        type: integer
      origin_zipcode:
        type: integer
      package_details:
        items:
          type: integer
        type: array
      package_direction:
        $ref: '#/definitions/core.Lookupcode'
      package_direction_id:
        type: integer
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      pickup_attempted:
        type: integer
      quantity:
        type: integer
      receiver_address:
        items:
          type: integer
        type: array
      reference_number:
        type: string
      sender_address:
        items:
          type: integer
        type: array
      set_pickup_date:
        type: string
      set_pickup_from_time:
        type: string
      set_pickup_to_time:
        type: string
      shipping_cost:
        type: number
      shipping_date:
        type: string
      shipping_invoice_id:
        items:
          type: integer
        type: array
      shipping_label_id:
        items:
          type: integer
        type: array
      shipping_manifest_id:
        items:
          type: integer
        type: array
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      shipping_number:
        type: string
      shipping_order_lines:
        items:
          $ref: '#/definitions/shipping.ShippingOrderLines'
        type: array
      shipping_partner:
        $ref: '#/definitions/shipping.ShippingPartner'
      shipping_partner_id:
        type: integer
      shipping_payment_type:
        $ref: '#/definitions/core.Lookupcode'
      shipping_payment_type_id:
        type: integer
      shipping_status:
        $ref: '#/definitions/core.Lookupcode'
      shipping_status_id:
        type: integer
      shipping_type:
        $ref: '#/definitions/core.Lookupcode'
      shipping_type_id:
        type: integer
      status_history:
        items:
          type: integer
        type: array
      supplier_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping.ShippingOrderLines:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discount:
        type: number
      gstin:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      item_quantity:
        type: integer
      product_id:
        type: integer
      product_template:
        $ref: '#/definitions/mdm.ProductTemplate'
      product_template_id:
        type: integer
      product_variant:
        $ref: '#/definitions/mdm.ProductVariant'
      tax_price:
        type: number
      unit_price:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping.ShippingPartner:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      auth_options:
        items:
          type: integer
        type: array
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      partner_name:
        type: string
      profile_options:
        items:
          type: integer
        type: array
      shipping_partner_type:
        $ref: '#/definitions/core.Lookupcode'
      shipping_partner_type_id:
        type: integer
      sp_default_preferences:
        items:
          type: integer
        type: array
      sp_time_preferences:
        items:
          type: integer
        type: array
      subscription_options:
        items:
          type: integer
        type: array
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders.BillingDetails:
    properties:
      currency:
        type: string
      gstin:
        type: string
      hsn_code:
        type: string
      iec_number:
        type: string
      invoice_amount:
        type: number
      invoice_number:
        type: string
      order_id:
        type: string
      tax_amount:
        type: number
    type: object
  shipping_orders.BulkShippingOrderCreate:
    properties:
      created:
        type: boolean
    type: object
  shipping_orders.BulkShippingOrderCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders.BulkShippingOrderCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  shipping_orders.CreateShippingOrder:
    properties:
      created_ShippingOrder_ID:
        type: integer
    type: object
  shipping_orders.DeleteShippingOrder:
    properties:
      deleted_ShippingOrder_Id:
        type: integer
    type: object
  shipping_orders.DeleteShippingOrderLine:
    properties:
      deleted_GRN_Line_Item:
        type: string
      grn_Id:
        type: integer
    type: object
  shipping_orders.GetAllShippingOrders:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      awb_number:
        type: string
      billing_address:
        items:
          type: integer
        type: array
      billing_details:
        items:
          type: integer
        type: array
      channel:
        $ref: '#/definitions/omnichannel.Marketplace'
      channel_id:
        type: integer
      cod_amount_received:
        type: number
      cod_date_and_time_of_receiving:
        type: string
      cod_due_amount:
        type: number
      cod_status:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_country:
        $ref: '#/definitions/core.Country'
      destination_country_id:
        type: integer
      destination_zipcode:
        type: integer
      eunimart_wallet_amount:
        type: number
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_cod:
        type: boolean
      is_enabled:
        type: boolean
      is_marketplace_order:
        type: boolean
      is_shipping_address:
        type: boolean
      order:
        $ref: '#/definitions/orders.SalesOrders'
      order_date:
        type: string
      order_id:
        type: integer
      order_value:
        type: number
      origin_country:
        $ref: '#/definitions/core.Country'
      origin_country_id:
        type: integer
      origin_zipcode:
        type: integer
      package_details:
        items:
          type: integer
        type: array
      package_direction:
        $ref: '#/definitions/core.Lookupcode'
      package_direction_id:
        type: integer
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      pickup_attempted:
        type: integer
      quantity:
        type: integer
      receiver_address:
        items:
          type: integer
        type: array
      reference_number:
        type: string
      sender_address:
        items:
          type: integer
        type: array
      set_pickup_date:
        type: string
      set_pickup_from_time:
        type: string
      set_pickup_to_time:
        type: string
      shipping_cost:
        type: number
      shipping_date:
        type: string
      shipping_invoice_id:
        items:
          type: integer
        type: array
      shipping_label_id:
        items:
          type: integer
        type: array
      shipping_manifest_id:
        items:
          type: integer
        type: array
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      shipping_number:
        type: string
      shipping_order_lines:
        items:
          $ref: '#/definitions/shipping.ShippingOrderLines'
        type: array
      shipping_partner:
        $ref: '#/definitions/shipping.ShippingPartner'
      shipping_partner_id:
        type: integer
      shipping_payment_type:
        $ref: '#/definitions/core.Lookupcode'
      shipping_payment_type_id:
        type: integer
      shipping_status:
        $ref: '#/definitions/core.Lookupcode'
      shipping_status_id:
        type: integer
      shipping_type:
        $ref: '#/definitions/core.Lookupcode'
      shipping_type_id:
        type: integer
      status_history:
        items:
          type: integer
        type: array
      supplier_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders.GetShippingOrder:
    properties:
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      awb_number:
        type: string
      billing_address:
        items:
          type: integer
        type: array
      billing_details:
        items:
          type: integer
        type: array
      channel:
        $ref: '#/definitions/omnichannel.Marketplace'
      channel_id:
        type: integer
      cod_amount_received:
        type: number
      cod_date_and_time_of_receiving:
        type: string
      cod_due_amount:
        type: number
      cod_status:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      destination_country:
        $ref: '#/definitions/core.Country'
      destination_country_id:
        type: integer
      destination_zipcode:
        type: integer
      eunimart_wallet_amount:
        type: number
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_cod:
        type: boolean
      is_enabled:
        type: boolean
      is_marketplace_order:
        type: boolean
      is_shipping_address:
        type: boolean
      order:
        $ref: '#/definitions/orders.SalesOrders'
      order_date:
        type: string
      order_id:
        type: integer
      order_value:
        type: number
      origin_country:
        $ref: '#/definitions/core.Country'
      origin_country_id:
        type: integer
      origin_zipcode:
        type: integer
      package_details:
        items:
          type: integer
        type: array
      package_direction:
        $ref: '#/definitions/core.Lookupcode'
      package_direction_id:
        type: integer
      partner:
        $ref: '#/definitions/mdm.Partner'
      partner_id:
        type: integer
      pickup_attempted:
        type: integer
      quantity:
        type: integer
      receiver_address:
        items:
          type: integer
        type: array
      reference_number:
        type: string
      sender_address:
        items:
          type: integer
        type: array
      set_pickup_date:
        type: string
      set_pickup_from_time:
        type: string
      set_pickup_to_time:
        type: string
      shipping_cost:
        type: number
      shipping_date:
        type: string
      shipping_invoice_id:
        items:
          type: integer
        type: array
      shipping_label_id:
        items:
          type: integer
        type: array
      shipping_manifest_id:
        items:
          type: integer
        type: array
      shipping_mode:
        $ref: '#/definitions/core.Lookupcode'
      shipping_mode_id:
        type: integer
      shipping_number:
        type: string
      shipping_order_lines:
        items:
          $ref: '#/definitions/shipping.ShippingOrderLines'
        type: array
      shipping_partner:
        $ref: '#/definitions/shipping.ShippingPartner'
      shipping_partner_id:
        type: integer
      shipping_payment_type:
        $ref: '#/definitions/core.Lookupcode'
      shipping_payment_type_id:
        type: integer
      shipping_status:
        $ref: '#/definitions/core.Lookupcode'
      shipping_status_id:
        type: integer
      shipping_type:
        $ref: '#/definitions/core.Lookupcode'
      shipping_type_id:
        type: integer
      status_history:
        items:
          type: integer
        type: array
      supplier_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders.PackageDetails:
    properties:
      no_of_items:
        type: integer
      package_height:
        type: integer
      package_length:
        type: integer
      package_weight:
        type: integer
      package_width:
        type: integer
      volumetric_weight:
        type: integer
    type: object
  shipping_orders.ReceiverOrBillingAddresss:
    properties:
      addressline1:
        type: string
      addressline2:
        type: string
      addressline3:
        type: string
      city:
        type: string
      country:
        type: string
      email:
        type: string
      landmark:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      mobile:
        type: string
      name:
        type: string
      pincode:
        type: integer
      state:
        type: string
    type: object
  shipping_orders.SenderAddress:
    properties:
      addressline1:
        type: string
      addressline2:
        type: string
      addressline3:
        type: string
      city:
        type: string
      country:
        type: string
      email:
        type: string
      landmark:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      mobile:
        type: string
      name:
        type: string
      nickname:
        type: string
      pincode:
        type: integer
      state:
        type: string
    type: object
  shipping_orders.ShippingOrderLines:
    properties:
      discount:
        type: number
      gstin:
        type: string
      item_quantity:
        type: integer
      product_id:
        type: integer
      product_template_id:
        type: integer
      tax_price:
        type: number
      unit_price:
        type: number
    type: object
  shipping_orders.ShippingOrderRequest:
    properties:
      awb_number:
        type: string
      billing_address:
        $ref: '#/definitions/shipping_orders.ReceiverOrBillingAddresss'
      billing_details:
        $ref: '#/definitions/shipping_orders.BillingDetails'
      channel_id:
        type: integer
      cod_due_amount:
        type: number
      cod_status:
        type: string
      created_by:
        type: integer
      destination_country_id:
        type: integer
      destination_zipcode:
        type: integer
      eunimart_wallet_amount:
        type: number
      expected_delivery_date:
        type: string
      id:
        type: integer
      is_cod:
        type: boolean
      is_marketplace_order:
        type: boolean
      is_shipping_address:
        type: boolean
      order_date:
        type: string
      order_id:
        type: integer
      order_value:
        type: number
      origin_country_id:
        type: integer
      origin_zipcode:
        type: integer
      package_details:
        $ref: '#/definitions/shipping_orders.PackageDetails'
      package_direction_id:
        type: integer
      partner_id:
        type: integer
      pickup_attempted:
        type: integer
      quantity:
        type: integer
      receiver_address:
        $ref: '#/definitions/shipping_orders.ReceiverOrBillingAddresss'
      reference_number:
        type: string
      sender_address:
        $ref: '#/definitions/shipping_orders.SenderAddress'
      set_pickup_date:
        type: string
      set_pickup_from_time:
        type: string
      set_pickup_to_time:
        type: string
      shipping_cost:
        type: number
      shipping_date:
        type: string
      shipping_invoice_id:
        additionalProperties: true
        type: object
      shipping_label_id:
        additionalProperties: true
        type: object
      shipping_manifest_id:
        additionalProperties: true
        type: object
      shipping_mode_id:
        type: integer
      shipping_number:
        type: string
      shipping_order_lines:
        items:
          $ref: '#/definitions/shipping_orders.ShippingOrderLines'
        type: array
      shipping_partner_id:
        type: integer
      shipping_payment_type_id:
        type: integer
      shipping_status_id:
        type: integer
      shipping_type_id:
        type: integer
      supplier_id:
        type: integer
      updated_by:
        type: integer
    type: object
  shipping_orders.UpdateShippingOrder:
    properties:
      updated_ShippingOrder_Id:
        type: integer
    type: object
  shipping_orders_ndr.BulkNDRCreate:
    properties:
      created:
        type: boolean
    type: object
  shipping_orders_ndr.BulkNDRCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_ndr.BulkNDRCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  shipping_orders_ndr.CreateNDR:
    properties:
      created_NDR_Id:
        type: integer
    type: object
  shipping_orders_ndr.DeleteNDR:
    properties:
      deleted_NDR_Id:
        type: integer
    type: object
  shipping_orders_ndr.DeleteNDRLine:
    properties:
      deleted_NDR_Line_Id:
        type: integer
    type: object
  shipping_orders_ndr.GetAllNDR:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_attempt_left:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      ndr_lines:
        items:
          $ref: '#/definitions/shipping.NDRLines'
        type: array
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
      shipping_order_id:
        description: Reference,awb,shipping_id,pickup address,destination address,customer
          details,product details,payment,channel
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_ndr.GetNDR:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_attempt_left:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      ndr_lines:
        items:
          $ref: '#/definitions/shipping.NDRLines'
        type: array
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
      shipping_order_id:
        description: Reference,awb,shipping_id,pickup address,destination address,customer
          details,product details,payment,channel
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_ndr.NDRLines:
    properties:
      delivery_attempt_made:
        type: integer
      failure_reason:
        type: string
      last_delivery_attempt_date:
        type: string
      ndrs_id:
        type: string
      ndrs_raised_date:
        type: string
    type: object
  shipping_orders_ndr.NDRRequest:
    properties:
      amount:
        type: number
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      delivery_attempt_left:
        type: integer
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      ndr_lines:
        items:
          $ref: '#/definitions/shipping_orders_ndr.NDRLines'
        type: array
      shipping_order_id:
        type: integer
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_ndr.UpdateNDR:
    properties:
      updated_NDR_Id:
        type: integer
    type: object
  shipping_orders_rto.BulkRTOCreate:
    properties:
      created:
        type: boolean
    type: object
  shipping_orders_rto.BulkRTOCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_rto.BulkRTOCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  shipping_orders_rto.CreateRTO:
    properties:
      created_RTO_Id:
        type: integer
    type: object
  shipping_orders_rto.DeleteRTO:
    properties:
      deleted_RTO_Id:
        type: integer
    type: object
  shipping_orders_rto.GetAllRTO:
    properties:
      actual_delivery_date:
        type: string
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      booking_date:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      estimate_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      quantity:
        type: integer
      return_date:
        type: string
      rto_cost:
        type: number
      rto_status:
        $ref: '#/definitions/core.Lookupcode'
      rto_status_id:
        type: integer
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
      shipping_order_id:
        description: Reference,awb,shipping_id, consignee,payment
        type: integer
      shipping_partner:
        $ref: '#/definitions/shipping.ShippingPartner'
      shipping_partner_id:
        type: integer
      status_history:
        items:
          type: integer
        type: array
      total_amount:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_rto.GetRTO:
    properties:
      actual_delivery_date:
        type: string
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      booking_date:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      estimate_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      quantity:
        type: integer
      return_date:
        type: string
      rto_cost:
        type: number
      rto_status:
        $ref: '#/definitions/core.Lookupcode'
      rto_status_id:
        type: integer
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
      shipping_order_id:
        description: Reference,awb,shipping_id, consignee,payment
        type: integer
      shipping_partner:
        $ref: '#/definitions/shipping.ShippingPartner'
      shipping_partner_id:
        type: integer
      status_history:
        items:
          type: integer
        type: array
      total_amount:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_rto.RTORequest:
    properties:
      actual_delivery_date:
        type: string
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      booking_date:
        type: string
      company_id:
        type: integer
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      estimate_delivery_date:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      quantity:
        type: integer
      return_date:
        type: string
      rto_cost:
        type: number
      rto_status_id:
        type: integer
      shipping_order_id:
        type: integer
      shipping_partner_id:
        type: integer
      status_history:
        items:
          additionalProperties: true
          type: object
        type: array
      total_amount:
        type: number
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_rto.UpdateRTO:
    properties:
      updated_RTO_Id:
        type: integer
    type: object
  shipping_orders_wd.BulkWDCreate:
    properties:
      created:
        type: boolean
    type: object
  shipping_orders_wd.BulkWDCreateResponse:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/shipping_orders_wd.BulkWDCreate'
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  shipping_orders_wd.CreateWD:
    properties:
      created_WD_Id:
        type: integer
    type: object
  shipping_orders_wd.DeleteWD:
    properties:
      deleted_WD_Id:
        type: integer
    type: object
  shipping_orders_wd.GetAllWD:
    properties:
      Weight_discrepancy_proof:
        items:
          type: integer
        type: array
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      courier_partner_file_id:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discrepancy_amount:
        type: number
      final_amount:
        type: number
      final_weight_taken:
        type: number
      final_weight_type:
        $ref: '#/definitions/mdm.Uom'
      final_weight_type_id:
        type: integer
      id:
        type: integer
      initial_weight_taken:
        type: number
      initial_weight_type:
        $ref: '#/definitions/mdm.Uom'
      initial_weight_type_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
        description: Reference,awb,shipping_id, initial amount==>shipping cost
      shipping_order_id:
        type: integer
      transaction_id:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_wd.GetWD:
    properties:
      Weight_discrepancy_proof:
        items:
          type: integer
        type: array
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      courier_partner_file_id:
        items:
          type: integer
        type: array
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discrepancy_amount:
        type: number
      final_amount:
        type: number
      final_weight_taken:
        type: number
      final_weight_type:
        $ref: '#/definitions/mdm.Uom'
      final_weight_type_id:
        type: integer
      id:
        type: integer
      initial_weight_taken:
        type: number
      initial_weight_type:
        $ref: '#/definitions/mdm.Uom'
      initial_weight_type_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      shipping_order:
        $ref: '#/definitions/shipping.ShippingOrder'
        description: Reference,awb,shipping_id, initial amount==>shipping cost
      shipping_order_id:
        type: integer
      transaction_id:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_orders_wd.UpdateWD:
    properties:
      updated_WD_Id:
        type: integer
    type: object
  shipping_orders_wd.WDRequest:
    properties:
      Weight_discrepancy_proof:
        additionalProperties: true
        type: object
      app:
        $ref: '#/definitions/core.InstalledApps'
      app_id:
        type: integer
      company_id:
        type: integer
      courier_partner_file_id:
        additionalProperties: true
        type: object
      created_by:
        type: integer
      created_date:
        type: string
      createdBy:
        $ref: '#/definitions/core.CoreUsers'
      deleted_by:
        type: integer
      deletedBy:
        $ref: '#/definitions/core.CoreUsers'
      discrepancy_amount:
        type: number
      final_amount:
        type: number
      final_weight_taken:
        type: number
      final_weight_type_id:
        type: integer
      id:
        type: integer
      initial_weight_taken:
        type: number
      initial_weight_type_id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      shipping_order_id:
        type: integer
      transaction_id:
        type: string
      updated_by:
        type: integer
      updated_date:
        type: string
      updatedBy:
        $ref: '#/definitions/core.CoreUsers'
    type: object
  shipping_partners.AccountDetails:
    properties:
      account_number:
        type: integer
      carrier_currency_id:
        type: integer
      carrier_weight_id:
        type: integer
      meter_number:
        type: string
      payment_type_id:
        type: integer
      show_service_rates:
        type: boolean
      web_service_key:
        type: string
      web_service_password:
        type: string
    type: object
  shipping_partners.AddLocations:
    properties:
      end_time:
        type: string
      location_id:
        type: integer
      pick_up_time:
        type: string
    type: object
  shipping_partners.CommericalInvoiceDetails:
    properties:
      customer_declaration:
        type: string
      include_insurance_charges:
        type: boolean
      include_shipping_charges:
        type: boolean
      invoice_currency_id:
        type: integer
      is_commercial_invoice_details:
        type: boolean
      maximum_weight_allowed:
        type: number
      product_id:
        type: integer
      product_template_id:
        type: integer
      terms_of_sales_id:
        type: integer
      uom_id:
        type: integer
    type: object
  shipping_partners.CreateUserShippingPartnerRegistration:
    properties:
      created_UserShippingPartnerRegistration_ID:
        type: integer
    type: object
  shipping_partners.PackingDetails:
    properties:
      maximum_weight:
        type: number
      packing_method_id:
        type: integer
      use_volumetric_weight:
        type: boolean
    type: object
  shipping_partners.PickupDetails:
    properties:
      from_time:
        type: string
      shipper_details_id:
        type: integer
      to_time:
        type: string
    type: object
  shipping_partners.UploadDoc:
    properties:
      additional_document:
        additionalProperties: true
        type: object
      company_letter_head:
        additionalProperties: true
        type: object
      customer_signature:
        additionalProperties: true
        type: object
      is_upload_doc:
        type: boolean
    type: object
  template.AccessTemplate:
    properties:
      id:
        type: integer
      name:
        description: Model
        type: string
    type: object
  uom.IdNameDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  uom.UomClassListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/uom.UomClassResponseDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  uom.UomClassRequestDTO:
    properties:
      base_uom:
        type: string
      code:
        type: string
      description:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
    type: object
  uom.UomClassResponseDTO:
    properties:
      base_uom:
        type: string
      code:
        type: string
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      name:
        type: string
    type: object
  uom.UomClassViewtDTO:
    properties:
      data:
        $ref: '#/definitions/uom.UomClassResponseDTO'
      meta:
        $ref: '#/definitions/response.SuccessResponse'
    type: object
  uom.UomListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/uom.UomResponseDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  uom.UomRequestDTO:
    properties:
      base_uom:
        type: string
      code:
        type: string
      conversion_factor:
        type: number
      conversion_type_id:
        type: integer
      description:
        type: string
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      item_type_id:
        type: integer
      name:
        type: string
      uom_class_id:
        type: integer
      uom_class_name:
        type: string
    type: object
  uom.UomResponseDTO:
    properties:
      base_uom:
        type: string
      code:
        type: string
      conversion_factor:
        type: number
      conversion_type:
        $ref: '#/definitions/cores.LookupCodesDTO'
      description:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      is_enabled:
        type: boolean
      item_type:
        $ref: '#/definitions/cores.LookupCodesDTO'
      name:
        type: string
      uom_class_code:
        $ref: '#/definitions/uom.UomClassResponseDTO'
      uom_class_name:
        type: string
    type: object
  uom.UomViewDTO:
    properties:
      data:
        $ref: '#/definitions/uom.UomResponseDTO'
      meta:
        $ref: '#/definitions/response.SuccessResponse'
    type: object
  vendors.Report:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  vendors.VendorDTO:
    properties:
      data:
        $ref: '#/definitions/vendors.VendorsRequestDTO'
      meta:
        $ref: '#/definitions/response.SuccessResponse'
    type: object
  vendors.VendorPriceListsDTO:
    properties:
      credit_period:
        type: string
      min_qty:
        type: integer
      name:
        type: string
      payment_type_id:
        type: string
      price_list_id:
        type: integer
      product_variant_id:
        type: integer
      supply_lead_time:
        type: string
      valid_from:
        type: string
      valid_to:
        type: string
    type: object
  vendors.VendorsListDTO:
    properties:
      data:
        items:
          $ref: '#/definitions/vendors.VendorsRequestDTO'
        type: array
      meta:
        $ref: '#/definitions/response.MetaResponse'
    type: object
  vendors.VendorsObjDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  vendors.VendorsRequestDTO:
    properties:
      contact_id:
        type: integer
      name:
        type: string
      primary_contact_id:
        type: integer
      vendor_details:
        $ref: '#/definitions/vendors.Report'
      vendor_docs:
        $ref: '#/definitions/vendors.Report'
      vendor_price_lists:
        items:
          $ref: '#/definitions/vendors.VendorPriceListsDTO'
        type: array
    type: object
  virtual_warehouse.Advanced_channel_configuration:
    properties:
      email_for_shipping_orders:
        type: boolean
      partial_fulfilment_shipping:
        type: boolean
      prices_include_taxes_id:
        type: integer
    type: object
  virtual_warehouse.AvailableVirtualWarehousesResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/virtual_warehouse.VirtualWarehouse'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.Bank_info:
    properties:
      account_number:
        type: integer
      bank_name:
        type: string
      bank_statement:
        additionalProperties: true
        type: object
      cancelled_cheque:
        additionalProperties: true
        type: object
      holder_name:
        type: string
      ifsc_code:
        type: string
    type: object
  virtual_warehouse.Channel_details:
    properties:
      currency_id:
        type: integer
      order_tags_id:
        type: integer
      price_list_id:
        type: integer
    type: object
  virtual_warehouse.Fullfilment_details:
    properties:
      enable_fba_fbf_to_fullfil_orders:
        type: boolean
      select_the_3pl_facility:
        additionalProperties: true
        type: object
    type: object
  virtual_warehouse.Inventory_Automation_Details:
    properties:
      automation_select_source_facility:
        type: string
      inventory_type_id:
        type: integer
      sync_inventory:
        type: boolean
      sync_price:
        type: boolean
    type: object
  virtual_warehouse.Inventory_details:
    properties:
      fixed_inventory:
        type: string
      inventory_range:
        type: string
      select_source_facility_id:
        type: integer
      type_of_source_id:
        type: integer
    type: object
  virtual_warehouse.Kyc_info:
    properties:
      adhaar_card:
        additionalProperties: true
        type: object
      gstin:
        additionalProperties: true
        type: object
      iec:
        additionalProperties: true
        type: object
      pan_card:
        additionalProperties: true
        type: object
      passport:
        additionalProperties: true
        type: object
      voter_id:
        additionalProperties: true
        type: object
    type: object
  virtual_warehouse.Order_details:
    properties:
      assign_auto_fullfilment:
        type: boolean
      order_select_source_facility_id:
        type: integer
    type: object
  virtual_warehouse.Payment_mapping:
    properties:
      payment_method:
        type: string
      payment_method_description:
        type: string
      payment_method_name:
        type: string
    type: object
  virtual_warehouse.Pre_sync_configuration:
    properties:
      pause_inventory_update:
        type: boolean
      pause_order_update:
        type: boolean
      pause_price_update:
        type: boolean
      start_date:
        type: string
    type: object
  virtual_warehouse.Sync_configuration:
    properties:
      consumer_key:
        type: string
      consumer_secret:
        type: string
      store_name:
        type: string
      store_url:
        type: string
    type: object
  virtual_warehouse.Sync_fetch_data:
    properties:
      inventory:
        type: boolean
      orders:
        type: boolean
      products:
        type: boolean
    type: object
  virtual_warehouse.Virtual_Warehouse_Details:
    properties:
      advanced_channel_configuration:
        $ref: '#/definitions/virtual_warehouse.Advanced_channel_configuration'
      channel_details:
        $ref: '#/definitions/virtual_warehouse.Channel_details'
      fullfilment_details:
        $ref: '#/definitions/virtual_warehouse.Fullfilment_details'
      inventory_Automation_Details:
        $ref: '#/definitions/virtual_warehouse.Inventory_Automation_Details'
      inventory_details:
        $ref: '#/definitions/virtual_warehouse.Inventory_details'
      order_details:
        $ref: '#/definitions/virtual_warehouse.Order_details'
      payment_mapping:
        $ref: '#/definitions/virtual_warehouse.Payment_mapping'
      pre_sync_configuration:
        $ref: '#/definitions/virtual_warehouse.Pre_sync_configuration'
      sync_configuration:
        $ref: '#/definitions/virtual_warehouse.Sync_configuration'
      sync_fetch_data:
        $ref: '#/definitions/virtual_warehouse.Sync_fetch_data'
      virtual_warehouse_id:
        type: integer
    type: object
  virtual_warehouse.VirtualWarehouse:
    properties:
      image_options:
        additionalProperties: true
        type: object
      location_served:
        additionalProperties: true
        type: object
      name:
        type: string
    type: object
  virtual_warehouse.VirtualWarehouse_Request:
    properties:
      bank_info:
        $ref: '#/definitions/virtual_warehouse.Bank_info'
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      kyc_info:
        $ref: '#/definitions/virtual_warehouse.Kyc_info'
      mobile_no:
        type: integer
      status:
        type: string
      status_history:
        type: string
      virtual_warehouse_id:
        type: integer
    type: object
  virtual_warehouse.VirtualWarehouseCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseDetailCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseDetailDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseDetailGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/virtual_warehouse.Virtual_Warehouse_Details'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseDetailGetResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseDetailUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/virtual_warehouse.VirtualWarehouse_Request'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseGetResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseLinesDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  virtual_warehouse.VirtualWarehouseUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  webstores.Advanced_channel_configuration:
    properties:
      email_for_shipping_orders:
        type: boolean
      partial_fulfilment_shipping:
        type: boolean
      prices_include_taxes_id:
        type: integer
    type: object
  webstores.AvailableWebstoresResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/webstores.Webstore'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  webstores.Channel_details:
    properties:
      currency_id:
        type: integer
      order_tags_id:
        type: integer
      price_list_id:
        type: integer
    type: object
  webstores.Fullfilment_details:
    properties:
      enable_fba_fbf_to_fullfil_orders:
        type: boolean
      select_the_3pl_facility:
        additionalProperties: true
        type: object
    type: object
  webstores.Inventory_Automation_Details:
    properties:
      automation_select_source_facility:
        type: string
      inventory_type_id:
        type: integer
      sync_inventory:
        type: boolean
      sync_price:
        type: boolean
    type: object
  webstores.Inventory_details:
    properties:
      fixed_inventory:
        type: string
      inventory_range:
        type: string
      select_source_facility_id:
        type: integer
      type_of_source_id:
        type: integer
    type: object
  webstores.Order_details:
    properties:
      assign_auto_fullfilment:
        type: boolean
      order_select_source_facility_id:
        type: integer
    type: object
  webstores.Payment_mapping:
    properties:
      payment_method:
        type: string
      payment_method_description:
        type: string
      payment_method_name:
        type: string
    type: object
  webstores.Pre_sync_configuration:
    properties:
      pause_inventory_update:
        type: boolean
      pause_order_update:
        type: boolean
      pause_price_update:
        type: boolean
      start_date:
        type: string
    type: object
  webstores.Sync_configuration:
    properties:
      consumer_key:
        type: string
      consumer_secret:
        type: string
      store_name:
        type: string
      store_url:
        type: string
    type: object
  webstores.Sync_fetch_data:
    properties:
      inventory:
        type: boolean
      orders:
        type: boolean
      products:
        type: boolean
    type: object
  webstores.User_Webstore_Link:
    properties:
      advanced_channel_configuration:
        $ref: '#/definitions/webstores.Advanced_channel_configuration'
      channel_details:
        $ref: '#/definitions/webstores.Channel_details'
      fullfilment_details:
        $ref: '#/definitions/webstores.Fullfilment_details'
      inventory_Automation_Details:
        $ref: '#/definitions/webstores.Inventory_Automation_Details'
      inventory_details:
        $ref: '#/definitions/webstores.Inventory_details'
      order_details:
        $ref: '#/definitions/webstores.Order_details'
      payment_mapping:
        $ref: '#/definitions/webstores.Payment_mapping'
      pre_sync_configuration:
        $ref: '#/definitions/webstores.Pre_sync_configuration'
      sync_configuration:
        $ref: '#/definitions/webstores.Sync_configuration'
      sync_fetch_data:
        $ref: '#/definitions/webstores.Sync_fetch_data'
      webstore_id:
        type: integer
    type: object
  webstores.Webstore:
    properties:
      image_options:
        additionalProperties: true
        type: object
      location_served:
        additionalProperties: true
        type: object
      name:
        type: string
    type: object
  webstores.WebstoredetailCreateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  webstores.WebstoredetailDeleteResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  webstores.WebstoredetailGetAllResponse:
    properties:
      body:
        properties:
          data:
            items:
              $ref: '#/definitions/webstores.User_Webstore_Link'
            type: array
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  webstores.WebstoredetailGetResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
  webstores.WebstoredetailUpdateResponse:
    properties:
      body:
        properties:
          data: {}
          meta:
            $ref: '#/definitions/response.MetaResponse'
        type: object
    type: object
host: dev-api.eunimart.com
info:
  contact:
    email: contact@eunimart.com
    name: API Support
    url: https://eunimart.com/contact-us-1/
  description: This is the API docs for Eunimart Platform.
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  termsOfService: https://eunimart.com/in/terms-conditions/
  title: Eunimart Platform API Docs
  version: 1.0.0
paths:
  /api/v1/{id}/pricing:
    get:
      consumes:
      - application/json
      description: Find a PriceList by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pricing.PricingListByIdResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a PriceList by id
      tags:
      - Pricing
  /api/v1/asn:
    get:
      consumes:
      - application/json
      description: get all GetAllAsn with MiscOptions of Pagination, Search, Filter
        and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all GetAllAsn with MiscOptions of Pagination, Search, Filter and
        Sort
      tags:
      - Asn
  /api/v1/asn/{id}:
    get:
      consumes:
      - application/json
      description: Find a GetAsn by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a GetAsn by id
      tags:
      - Asn
  /api/v1/asn/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeleteAsn
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteAsn
      tags:
      - Asn
  /api/v1/asn/{id}/delete_products:
    delete:
      consumes:
      - application/json
      description: delete a DeleteAsnLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: asn_id
        in: path
        name: asn_id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteAsnLines
      tags:
      - Asn
  /api/v1/asn/{id}/edit:
    put:
      consumes:
      - application/json
      description: Update a Asn
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Asn
        in: body
        name: AsnUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/asn.AsnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateAsn
      tags:
      - Asn
  /api/v1/asn/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteAsn
      parameters:
      - description: Asn ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteAsn
      tags:
      - Asn
  /api/v1/asn/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetAsnTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAsnTab
      tags:
      - Asn
  /api/v1/asn/{id}/printpdf:
    get:
      consumes:
      - application/json
      description: Download PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.DownloadPdfAsnResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PDF
      tags:
      - Asn
  /api/v1/asn/{id}/sendemail:
    get:
      consumes:
      - application/json
      description: Send Email to specific recevier for Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: receiver_email
        in: query
        name: receiver_email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.SendMailAsnResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Send Email to specific recevier for Id
      tags:
      - Asn
  /api/v1/asn/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteAsn
      parameters:
      - description: Asn ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteAsn
      tags:
      - Asn
  /api/v1/asn/bulk_create:
    post:
      consumes:
      - application/json
      description: do a BulkCreateAsn
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk Asn
        in: body
        name: BulkAsnCreateRequest
        required: true
        schema:
          $ref: '#/definitions/asn.AsnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.BulkAsnCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a BulkCreateAsn
      tags:
      - Asn
  /api/v1/asn/create:
    post:
      consumes:
      - application/json
      description: Create a Asn
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Asn
        in: body
        name: AsnCreateRequest
        required: true
        schema:
          $ref: '#/definitions/asn.AsnRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateAsn
      tags:
      - Asn
  /api/v1/asn/dropdown:
    get:
      consumes:
      - application/json
      description: get all GetAllAsnDropdown with MiscOptions of Pagination, Search,
        Filter and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all GetAllAsnDropdown with MiscOptions of Pagination, Search, Filter
        and Sort
      tags:
      - Asn
  /api/v1/asn/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite AsnList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/asn.AsnGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite AsnList
      tags:
      - Asn
  /api/v1/basic_inventory/centralized:
    get:
      consumes:
      - application/json
      description: CentralizedInventoryList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.CentralizedListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CentralizedInventoryList
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/centralized/{id}:
    get:
      consumes:
      - application/json
      description: View CentralizedInventoryView
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.CentralizedViewDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View CentralizedInventoryView
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/centralized/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteCentralizedInventory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteCentralizedInventory
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/centralized/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateCentralizedInventory
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Centralized Inventory Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/basic_inventory.CentralizedBasicInventoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.CentralizedBasicInventoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateCentralizedInventory
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/centralized/create:
    post:
      consumes:
      - application/json
      description: Create Centralized Inventory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Centralized Inventory Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/basic_inventory.CentralizedBasicInventoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.CentralizedBasicInventoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Centralized Inventory
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/centralized/dropdown:
    get:
      consumes:
      - application/json
      description: CentralizedInventoryList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.CentralizedListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CentralizedInventoryList
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/centralized/search:
    get:
      consumes:
      - application/json
      description: SearchCentralizedInventory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/basic_inventory.CentralizedSearchObjDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: SearchCentralizedInventory
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/decentralized:
    get:
      consumes:
      - application/json
      description: DecentralizedList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.DeentralizedListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DecentralizedList
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/decentralized/{id}:
    get:
      consumes:
      - application/json
      description: View DecentralizedInventoryView
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.DeentralizedViewDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View DecentralizedInventoryView
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/decentralized/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteDecentralizedInventory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteDecentralizedInventory
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/decentralized/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateDecentralizedInventory
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: decentralized Inventory Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/basic_inventory.DecentralizedBasicInventoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.DecentralizedBasicInventoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateDecentralizedInventory
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/decentralized/create:
    post:
      consumes:
      - application/json
      description: CreateDecentralizedInventory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Decentralized Inventory Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/basic_inventory.DecentralizedBasicInventoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.DecentralizedBasicInventoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateDecentralizedInventory
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/decentralized/dropdown:
    get:
      consumes:
      - application/json
      description: DecentralizedList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/basic_inventory.DeentralizedListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DecentralizedList
      tags:
      - Basic_Inventory
  /api/v1/basic_inventory/decentralized/search:
    get:
      consumes:
      - application/json
      description: SearchDecentralizedInventory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/basic_inventory.DecentralizedSearchObjDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: SearchDecentralizedInventory
      tags:
      - Basic_Inventory
  /api/v1/catalogue:
    get:
      consumes:
      - application/json
      description: View Catalogue
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: External Category ID
        in: path
        name: id
        required: true
        type: string
      - description: External MarketPlace ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View Catalogue
      tags:
      - Catalogue
  /api/v1/catalogue_template/upsert:
    post:
      consumes:
      - application/json
      description: Upsert a CatalogueTemplate
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpsertCatalogueTemplate
      tags:
      - Catalogue
  /api/v1/catalogue_template_data/upsert:
    post:
      consumes:
      - application/json
      description: Upsert a CatalogueTemplateData
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpsertCatalogueTemplateData
      tags:
      - Catalogue
  /api/v1/channels:
    get:
      consumes:
      - application/json
      description: Fetch all Channels
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Do fetch Channel
      tags:
      - Channel
  /api/v1/channels/:id:
    get:
      consumes:
      - application/json
      description: fetch a Channel
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Do Channel fetching
      tags:
      - Channel
  /api/v1/channels/:id/delete:
    delete:
      consumes:
      - application/json
      description: Deletes a Channel
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Do Delete Channel
      tags:
      - Channel
  /api/v1/channels/:id/update:
    post:
      consumes:
      - application/json
      description: Updates a Channel
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Do Update Channel
      tags:
      - Channel
  /api/v1/channels/create:
    post:
      consumes:
      - application/json
      description: Create a Channel
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Do Create Channel
      tags:
      - Channel
  /api/v1/contacts:
    get:
      consumes:
      - application/json
      description: Get all contacts
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.ContactListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all contacts
      tags:
      - Contacts
  /api/v1/contacts/{id}:
    get:
      consumes:
      - application/json
      description: View Contact
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.ContactViewDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View Contact
      tags:
      - Contacts
  /api/v1/contacts/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteContacts
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteContacts
      tags:
      - Contacts
  /api/v1/contacts/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteContacts
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteContacts
      tags:
      - Contacts
  /api/v1/contacts/{id}/related:
    get:
      consumes:
      - application/json
      description: Get related contacts
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.ContactListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get related contacts
      tags:
      - Contacts
  /api/v1/contacts/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteContacts
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteContacts
      tags:
      - Contacts
  /api/v1/contacts/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateContact
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Contact  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/contacts.SwaggerPartnerRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.PartnerResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateContact
      tags:
      - Contacts
  /api/v1/contacts/create:
    post:
      consumes:
      - application/json
      description: CreateContact
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Contact Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/contacts.SwaggerPartnerRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.PartnerResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateContact
      tags:
      - Contacts
  /api/v1/contacts/dropdown:
    get:
      consumes:
      - application/json
      description: Get all contacts
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.ContactListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all contacts
      tags:
      - Contacts
  /api/v1/contacts/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite contacts
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/contacts.ContactListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite contacts
      tags:
      - Contacts
  /api/v1/contacts/search:
    get:
      consumes:
      - application/json
      description: Get all filtered contacts
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/contacts.IdNameDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all filtered  contacts
      tags:
      - Contacts
  /api/v1/core/apps/installed:
    get:
      consumes:
      - application/json
      description: List Installed Apps
      parameters:
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.InstalledAppsDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: ListInstalledApps
      tags:
      - Core
  /api/v1/core/countries:
    get:
      consumes:
      - application/json
      description: get Countries
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: get Countries
      tags:
      - Core
  /api/v1/core/currencies:
    get:
      consumes:
      - application/json
      description: get Currencies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: get Currencies
      tags:
      - Core
  /api/v1/core/lookup_code/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete Lookup Code
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteLookupCode
      tags:
      - Core
  /api/v1/core/lookup_code/{id}/update:
    post:
      consumes:
      - application/json
      description: Update Lookup Code
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateLookupCode
      tags:
      - Core
  /api/v1/core/lookup_codes/{type}:
    get:
      consumes:
      - application/json
      description: get Lookup Code
      parameters:
      - description: type
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: get Lookup Code
      tags:
      - Core
  /api/v1/core/lookup_codes/create:
    post:
      consumes:
      - application/json
      description: create Lookup Codes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Lookup Codes
      tags:
      - Core
  /api/v1/core/lookup_codes/list:
    get:
      consumes:
      - application/json
      description: Get all Lookup Codes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.LookupCodeDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Lookup Codes
      tags:
      - Core
  /api/v1/core/lookup_codes/search:
    get:
      consumes:
      - application/json
      description: Get all filtered Lookupcodes
      parameters:
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/cores.LookupCodesDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get all filtered  Lookupcodes
      tags:
      - Core
  /api/v1/core/lookup_type/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete Lookup Type
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteLookupType
      tags:
      - Core
  /api/v1/core/lookup_type/{id}/update:
    post:
      consumes:
      - application/json
      description: Update Lookup Type
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateLookupType
      tags:
      - Core
  /api/v1/core/lookup_type/create:
    post:
      consumes:
      - application/json
      description: create Lookup Types
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Lookup Types
      tags:
      - Core
  /api/v1/core/lookup_types:
    get:
      consumes:
      - application/json
      description: get Lookup Types
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Lookup Types
      tags:
      - Core
  /api/v1/core/lookup_types/list:
    get:
      consumes:
      - application/json
      description: Get all Lookup Types
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.LookupTypesDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Lookup Types
      tags:
      - Core
  /api/v1/core/meta_data:
    get:
      consumes:
      - application/json
      description: List MetaData
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.ListMetaDataDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: ListMetaData
      tags:
      - Core
  /api/v1/core/meta_data/{model_name}:
    get:
      consumes:
      - application/json
      description: View MetaDta
      parameters:
      - description: model_name
        in: path
        name: model_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.ViewMetaDataDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: ViewMetaDta
      tags:
      - Core
  /api/v1/core/states/{id}:
    get:
      consumes:
      - application/json
      description: get States
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: get States
      tags:
      - Core
  /api/v1/core/store/apps:
    get:
      consumes:
      - application/json
      description: List Apps
      parameters:
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.AppsListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: ListStoreApps
      tags:
      - Core
  /api/v1/core/store/apps/{id}:
    get:
      consumes:
      - application/json
      description: Get App
      parameters:
      - description: Get App
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.GetAppStoreDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: GetApp
      tags:
      - Core
  /api/v1/core/store/apps/{id}/install:
    post:
      consumes:
      - application/json
      description: Install App
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: InstallApp
      tags:
      - Core
  /api/v1/core/store/apps/{id}/uninstall:
    post:
      consumes:
      - application/json
      description: Uninstall App
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UninstallApp
      tags:
      - Core
  /api/v1/core/store/search:
    get:
      consumes:
      - application/json
      description: Search Apps
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: code
        in: query
        name: code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cores.GetAppStoreDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: SearchApps
      tags:
      - Core
  /api/v1/creditnote:
    get:
      consumes:
      - application/json
      description: Get all Credit note
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/creditnote.CreditNoteDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Credit note
      tags:
      - CreditNote
  /api/v1/creditnote/{id}:
    get:
      consumes:
      - application/json
      description: View CreditNote
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/creditnote.CreditNoteDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View CreditNote
      tags:
      - CreditNote
  /api/v1/creditnote/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteCreditNote
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteCreditNote
      tags:
      - CreditNote
  /api/v1/creditnote/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteCreditNote
      parameters:
      - description: CreditNote ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteCreditNote
      tags:
      - CreditNote
  /api/v1/creditnote/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetCreditNoteTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetCreditNoteTab
      tags:
      - CreditNote
  /api/v1/creditnote/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteCreditNote
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteCreditNote
      tags:
      - CreditNote
  /api/v1/creditnote/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateCreditNote
      parameters:
      - description: Credit Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: CreditNote  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/creditnote.CreditNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateCreditNote
      tags:
      - CreditNote
  /api/v1/creditnote/create:
    post:
      consumes:
      - application/json
      description: CreateCreditNote
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/creditnote.CreditNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateCreditNote
      tags:
      - CreditNote
  /api/v1/creditnote/dropdown:
    get:
      consumes:
      - application/json
      description: Get all Credit note dropdown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/creditnote.CreditNoteDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Credit note dropdown
      tags:
      - CreditNote
  /api/v1/currency_and_exchange:
    get:
      consumes:
      - application/json
      description: Get all CurrencyExchange
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency_exchange.CurrencyExchangeDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all CurrencyExchange
      tags:
      - CurrencyExchange
  /api/v1/currency_and_exchange/{id}:
    get:
      consumes:
      - application/json
      description: GetExchangePairData
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: CurrencyExchange ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency_exchange.CurrencyExchangeDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get one CurrencyExchange
      tags:
      - CurrencyExchange
  /api/v1/currency_and_exchange/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteExchangePair
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: CurrencyExchange ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteExchangePair
      tags:
      - CurrencyExchange
  /api/v1/currency_and_exchange/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateExchangePair
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/currency_exchange.CurrencyExchangeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateExchangePair
      tags:
      - CurrencyExchange
  /api/v1/currency_and_exchange/create:
    post:
      consumes:
      - application/json
      description: CreateExchangePair
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/currency_exchange.CurrencyExchangeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateExchangePair
      tags:
      - CurrencyExchange
  /api/v1/currency_and_exchange/dropdown:
    get:
      consumes:
      - application/json
      description: Get all CurrencyExchangeDropDown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/currency_exchange.CurrencyExchangeDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all CurrencyExchangeDropDown
      tags:
      - CurrencyExchange
  /api/v1/cycle_count:
    get:
      consumes:
      - application/json
      description: Get all GetAllCycleCount with MiscOptions of Pagination, Search,
        Filter and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all GetAllCycleCount with MiscOptions of Pagination, Search, Filter
        and Sort
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}:
    get:
      consumes:
      - application/json
      description: Find a GetCycleCount by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a GetCycleCount by id
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeleteCycleCount
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteCycleCount
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}/delete_products:
    delete:
      consumes:
      - application/json
      description: delete a DeleteCycleCountLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteCycleCountLines
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}/edit:
    put:
      consumes:
      - application/json
      description: do a UpdateCycleCount
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a CycleCount
        in: body
        name: CycleCountUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/cycle_count.CycleCountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateCycleCount
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavoriteCycleCount
      parameters:
      - description: CycleCount ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavoriteCycleCount
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}/printpdf:
    get:
      consumes:
      - application/json
      description: Download PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.DownloadPdfCycleCountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PDF
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}/sendemail:
    get:
      consumes:
      - application/json
      description: Send Email to specific recevier for Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: receiver_email
        in: query
        name: receiver_email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.SendMailCycleCountResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Send Email to specific recevier for Id
      tags:
      - CycleCount
  /api/v1/cycle_count/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavoriteCycleCount
      parameters:
      - description: CycleCount ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavoriteCycleCount
      tags:
      - CycleCount
  /api/v1/cycle_count/bin_list/{variant_id}:
    get:
      consumes:
      - application/json
      description: do a GetBinsList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a GetBinsList
      tags:
      - CycleCount
  /api/v1/cycle_count/bulk_create:
    post:
      consumes:
      - application/json
      description: do a BulkCreateCycleCount
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk CycleCount
        in: body
        name: BulkCycleCountCreateRequest
        required: true
        schema:
          $ref: '#/definitions/cycle_count.CycleCountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.BulkCycleCountCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a BulkCreateCycleCount
      tags:
      - CycleCount
  /api/v1/cycle_count/create:
    post:
      consumes:
      - application/json
      description: do a CreateCycleCount
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a CycleCount
        in: body
        name: CycleCountCreateRequest
        required: true
        schema:
          $ref: '#/definitions/cycle_count.CycleCountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateCycleCount
      tags:
      - CycleCount
  /api/v1/cycle_count/dropdown:
    get:
      consumes:
      - application/json
      description: Get all GetAllCycleCountDropDown with MiscOptions of Pagination,
        Search, Filter and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all GetAllCycleCountDropDown with MiscOptions of Pagination, Search,
        Filter and Sort
      tags:
      - CycleCount
  /api/v1/cycle_count/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite CycleCount
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/cycle_count.CycleCountGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite CycleCount
      tags:
      - CycleCount
  /api/v1/cycle_count/get_count:
    get:
      consumes:
      - application/json
      description: do a GetCountCapacity
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: variant_id
        in: query
        name: variant_id
        required: true
        type: integer
      - description: storage_location_id
        in: query
        name: storage_location_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a GetCountCapacity
      tags:
      - CycleCount
  /api/v1/cycle_count/product_list:
    post:
      consumes:
      - application/json
      description: do a GetProductlist
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a CycleCount
        in: body
        name: GetProductList
        required: true
        schema:
          $ref: '#/definitions/cycle_count.GetProductsListDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a GetProductlist
      tags:
      - CycleCount
  /api/v1/debitnote:
    get:
      consumes:
      - application/json
      description: Get all Debit note
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/debitnote.DebitNoteDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Debit note
      tags:
      - DebitNote
  /api/v1/debitnote/{id}:
    get:
      consumes:
      - application/json
      description: View DebitNote
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: DebitNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/debitnote.DebitNoteDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View DebitNote
      tags:
      - DebitNote
  /api/v1/debitnote/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteDebitNote
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: DebitNote ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteDebitNote
      tags:
      - DebitNote
  /api/v1/debitnote/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteDebitNote
      parameters:
      - description: DebitNote ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteDebitNote
      tags:
      - DebitNote
  /api/v1/debitnote/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetDebitNoteTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetDebitNoteTab
      tags:
      - DebitNote
  /api/v1/debitnote/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteDebitNote
      parameters:
      - description: Contact ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteDebitNote
      tags:
      - DebitNote
  /api/v1/debitnote/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateDebitNote
      parameters:
      - description: Debit Note ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: DebitNote  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/debitnote.DebitNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateDebitNote
      tags:
      - DebitNote
  /api/v1/debitnote/create:
    post:
      consumes:
      - application/json
      description: CreateDebitNote
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/debitnote.DebitNoteDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateDebitNote
      tags:
      - DebitNote
  /api/v1/debitnote/dropdown:
    get:
      consumes:
      - application/json
      description: Get Debit note dropdown list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/debitnote.DebitNoteDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Debit note dropdown list
      tags:
      - DebitNote
  /api/v1/delivery_orders:
    get:
      consumes:
      - application/json
      description: a get AllDeliveryOrders and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.DeliveryOrderGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllDeliveryOrders and filter it by search query
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}:
    get:
      consumes:
      - application/json
      description: Find a DeliveryOrder by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.DeliveryOrderGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a DeliveryOrder by id
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeleteDeliveryOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.DeliveryOrderDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteDeliveryOrders
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/delete_products:
    delete:
      consumes:
      - application/json
      description: delete a DeleteDeliveryOrderLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.DeliveryOrderLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteDeliveryOrderLines
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/download_pdf:
    post:
      consumes:
      - application/json
      description: Download DeliveryOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download DeliveryOrders
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteDeliveryOrders
      parameters:
      - description: DeliveryOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteDeliveryOrders
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/generate_pdf:
    post:
      consumes:
      - application/json
      description: Generate DeliveryOrders PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate DeliveryOrders PDF
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/send_email:
    post:
      consumes:
      - application/json
      description: Email DeliveryOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email DeliveryOrders
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteDeliveryOrders
      parameters:
      - description: DeliveryOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteDeliveryOrders
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a DeliveryOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a DeliveryOrder
        in: body
        name: DeliveryOrderUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/delivery_orders.DeliveryOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.DeliveryOrderUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateDeliveryOrders
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/bulkcreate:
    post:
      consumes:
      - application/json
      description: do a BulkCreateDeliveryOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk DeliveryOrder
        in: body
        name: BulkDeliveryOrderCreateRequest
        required: true
        schema:
          $ref: '#/definitions/delivery_orders.DeliveryOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.BulkDeliveryOrderCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a BulkCreateDeliveryOrder
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/create:
    post:
      consumes:
      - application/json
      description: Create a DeliveryOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a DeliveryOrder
        in: body
        name: DeliveryOrderCreateRequest
        required: true
        schema:
          $ref: '#/definitions/delivery_orders.DeliveryOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.DeliveryOrderCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateDeliveryOrder
      tags:
      - DeliveryOrders
  /api/v1/delivery_orders/dropdown:
    get:
      consumes:
      - application/json
      description: a get AllDeliveryOrdersDropDown and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delivery_orders.DeliveryOrderGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllDeliveryOrdersDropDown and filter it by search query
      tags:
      - DeliveryOrders
  /api/v1/grn:
    get:
      consumes:
      - application/json
      description: Get All GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllGRNResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllGRN
      tags:
      - GRN
  /api/v1/grn/{id}:
    get:
      consumes:
      - application/json
      description: Get a GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Get GRN
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GRNGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetGRN
      tags:
      - GRN
  /api/v1/grn/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteGRNResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteGRN
      tags:
      - GRN
  /api/v1/grn/{id}/download_pdf:
    post:
      consumes:
      - application/json
      description: Download GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download GRN
      tags:
      - GRN
  /api/v1/grn/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteGRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: GRN ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteGRN
      tags:
      - GRN
  /api/v1/grn/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetGrnTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetGrnTab
      tags:
      - Grn
  /api/v1/grn/{id}/generate_pdf:
    post:
      consumes:
      - application/json
      description: Generate GRN PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate GRN PDF
      tags:
      - GRN
  /api/v1/grn/{id}/send_email:
    post:
      consumes:
      - application/json
      description: Email GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email GRN
      tags:
      - GRN
  /api/v1/grn/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteGRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: GRN ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteGRN
      tags:
      - GRN
  /api/v1/grn/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a GRN
        in: body
        name: GRNUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/grn.GRNRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateGRNResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateGRN
      tags:
      - GRN
  /api/v1/grn/bulk_create:
    post:
      consumes:
      - application/json
      description: Create a Multiple GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk GRN
        in: body
        name: BulkGRNCreateRequest
        required: true
        schema:
          $ref: '#/definitions/grn.GRNRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/grn.BulkGRNCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: BulkCreateGRN
      tags:
      - GRN
  /api/v1/grn/create:
    post:
      consumes:
      - application/json
      description: Create a GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a GRN
        in: body
        name: GRNCreateRequest
        required: true
        schema:
          $ref: '#/definitions/grn.GRNRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GRNCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateGRN
      tags:
      - GRN
  /api/v1/grn/dropdown:
    get:
      consumes:
      - application/json
      description: Get All GRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllGRNResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllGRNDropDown
      tags:
      - GRN
  /api/v1/grn/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite GrnList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GRNGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite GrnList
      tags:
      - GRN
  /api/v1/grn/order_line/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a GRN Order Line
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteGRNOrderLineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteGRNOrderLine
      tags:
      - GRN
  /api/v1/grn/search:
    get:
      consumes:
      - application/json
      description: Search SearchGRN
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/GetAllGRNResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search SearchGRN
      tags:
      - GRN
  /api/v1/internal_transfers:
    get:
      consumes:
      - application/json
      description: Get all InternalTransfers list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_transfers.GetAllInternalTransfersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all InternalTransfers list
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/{id}:
    get:
      consumes:
      - application/json
      description: View InternalTransfers
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ist_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transfers.InternalTransfersGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View InternalTransfers
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete InternalTransfers
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ist_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transfers.InternalTransfersDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete InternalTransfers
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/{id}/downloadPdf:
    post:
      consumes:
      - application/json
      description: Download InternalTransfers
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ist_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download InternalTransfers
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteInternalTransfers
      parameters:
      - description: InternalTransfers ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteInternalTransfers
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetInternalTransferTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetInternalTransferTab
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteInternalTransfers
      parameters:
      - description: InternalTransfers ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteInternalTransfers
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/{id}/update:
    post:
      consumes:
      - application/json
      description: Update InternalTransfers
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ist_id
        in: path
        name: id
        required: true
        type: string
      - description: Internal Transfers  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/internal_transfers.InternalTransfersDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transfers.InternalTransfersUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update InternalTransfers
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/create:
    post:
      consumes:
      - application/json
      description: Create InternalTransfers
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Internal Transfers  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/internal_transfers.InternalTransfersDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transfers.InternalTransfersCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create InternalTransfers
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/dropdown:
    get:
      consumes:
      - application/json
      description: Get all InternalTransfers DropDown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_transfers.GetAllInternalTransfersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all InternalTransfers DropDown
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/order_lines/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete InternalTransfers Orderlines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ist_id
        in: path
        name: id
        required: true
        type: string
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_transfers.InternalTransferOrderLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete InternalTransfers Orderlines
      tags:
      - InternalTransfers
  /api/v1/internal_transfers/search:
    get:
      consumes:
      - application/json
      description: Search InternalTransfers
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal_transfers.GetAllInternalTransfersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search InternalTransfers
      tags:
      - InternalTransfers
  /api/v1/inventory_adjustments:
    get:
      consumes:
      - application/json
      description: get all GetAllInventoryAdjustments with MiscOptions of Pagination,
        Search, Filter and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all GetAllInventoryAdjustments with MiscOptions of Pagination,
        Search, Filter and Sort
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}:
    get:
      consumes:
      - application/json
      description: Find a GetInventoryAdjustment by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a GetInventoryAdjustment by id
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeleteInventoryAdjustment
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteInventoryAdjustment
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}/delete_products:
    delete:
      consumes:
      - application/json
      description: delete a DeleteInventoryAdjustmentLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: inv_adj_id
        in: path
        name: inv_adj_id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteInventoryAdjustmentLines
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}/edit:
    put:
      consumes:
      - application/json
      description: Update a Inventory Adjustment
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a InvAdj
        in: body
        name: InvAdjUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/inventory_adjustments.InventoryAdjustmentsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateInventoryAdjustment
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteInvAdj
      parameters:
      - description: Inventory Adjustment ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteInvAdj
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}/printpdf:
    get:
      consumes:
      - application/json
      description: Download PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.DownloadPdfInvAdjResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PDF
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}/sendemail:
    get:
      consumes:
      - application/json
      description: Send Email to specific recevier for Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: receiver_email
        in: query
        name: receiver_email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.SendMailInvAdjResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Send Email to specific recevier for Id
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteInvAdj
      parameters:
      - description: Inventory Adjustment ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteInvAdj
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/bulk_create:
    post:
      consumes:
      - application/json
      description: do a BulkCreateInventoryAdjustments
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk InvAdj
        in: body
        name: BulkInvAdjCreateRequest
        required: true
        schema:
          $ref: '#/definitions/inventory_adjustments.InventoryAdjustmentsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.BulkInvAdjCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a BulkCreateInventoryAdjustments
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/create:
    post:
      consumes:
      - application/json
      description: Create a Inventory Adjustment
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a InvAdj
        in: body
        name: InvAdjCreateRequest
        required: true
        schema:
          $ref: '#/definitions/inventory_adjustments.InventoryAdjustmentsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateInventoryAdjustment
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/dropdown:
    get:
      consumes:
      - application/json
      description: get all GetAllInvAdjDropDown with MiscOptions of Pagination, Search,
        Filter and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all GetAllInvAdjDropDown with MiscOptions of Pagination, Search,
        Filter and Sort
      tags:
      - Inventory Adjustments
  /api/v1/inventory_adjustments/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite InventoryAdjustmentList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/inventory_adjustments.InvAdjGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite InventoryAdjustmentList
      tags:
      - Inventory Adjustments
  /api/v1/locations:
    get:
      consumes:
      - application/json
      description: Get all Location  list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.LocationListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Location  list
      tags:
      - Locations
  /api/v1/locations/{id}:
    get:
      consumes:
      - application/json
      description: View LocationView
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Location ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.LocationViewDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View LocationView
      tags:
      - Locations
  /api/v1/locations/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteLocation
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Location ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteLocation
      tags:
      - Locations
  /api/v1/locations/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteLocations
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteLocations
      tags:
      - Locations
  /api/v1/locations/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteLocations
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteLocations
      tags:
      - Locations
  /api/v1/locations/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateLocation
      parameters:
      - description: Location ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Location  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/locations.LocationsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.LocationViewDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateLocation
      tags:
      - Locations
  /api/v1/locations/create:
    post:
      consumes:
      - application/json
      description: CreateLocation
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Location  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/locations.LocationRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.LocationViewDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateLocation
      tags:
      - Locations
  /api/v1/locations/dropdown:
    get:
      consumes:
      - application/json
      description: Get all Location  list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.LocationListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Location  list
      tags:
      - Locations
  /api/v1/locations/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite locations
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.LocationListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite locations
      tags:
      - Locations
  /api/v1/locations/search:
    get:
      consumes:
      - application/json
      description: Get all filtered Location
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/locations.IdNameDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all filtered Location
      tags:
      - Locations
  /api/v1/locations/storage_location:
    get:
      consumes:
      - application/json
      description: Get all Storage Location  list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.StorageLocationListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Storage Location  list
      tags:
      - Locations
  /api/v1/locations/storage_location/{id}:
    get:
      consumes:
      - application/json
      description: View StorageLocationView
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Storage Location ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.StorageLocationDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View StorageLocationView
      tags:
      - Locations
  /api/v1/locations/storage_location/create:
    post:
      consumes:
      - application/json
      description: CreateStorageLocation
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Storage Location  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/locations.StorageLocationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.StorageLocationDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateStorageLocation
      tags:
      - Locations
  /api/v1/locations/storage_quantity:
    get:
      consumes:
      - application/json
      description: Get all Storage Quantity  list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/locations.StorageQuantityListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Storage Quantity  list
      tags:
      - Locations
  /api/v1/marketplace:
    get:
      consumes:
      - application/json
      description: a get  AllMarketplaces and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplaceGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllMarketplaces and filter it by search query
      tags:
      - Marketplaces
  /api/v1/marketplace/{id}:
    get:
      consumes:
      - application/json
      description: Find a Marketplace by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplaceGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a Marketplace by id
      tags:
      - Marketplaces
  /api/v1/marketplace/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeleteMarketplacesdetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplacedetailDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteMarketplacesdetails
      tags:
      - Marketplaces
  /api/v1/marketplace/{id}/delete_marketplace:
    delete:
      consumes:
      - application/json
      description: delete a DeleteMarketplaces
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplaceLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteMarketplaces
      tags:
      - Marketplaces
  /api/v1/marketplace/{id}/edit:
    post:
      consumes:
      - application/json
      description: Update a Marketplace
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Marketplace
        in: body
        name: MarketplaceUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/marketplace.Marketplace_Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplaceUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateMarketplaces
      tags:
      - Marketplaces
  /api/v1/marketplace/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteMarketPlaces
      parameters:
      - description: MarketPlace ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteMarketPlaces
      tags:
      - Marketplaces
  /api/v1/marketplace/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteMarketPlaces
      parameters:
      - description: MarketPlace ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteMarketPlaces
      tags:
      - Marketplaces
  /api/v1/marketplace/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a Marketplacedetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Marketplace
        in: body
        name: Marketplace_details
        required: true
        schema:
          $ref: '#/definitions/marketplace.Marketplace_Details'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplacedetailUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateMarketplacesdetails
      tags:
      - Marketplaces
  /api/v1/marketplace/{marketplace_code}/get_auth_keys:
    get:
      consumes:
      - application/json
      description: Get AuthKeys
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: marketplace_code
        in: path
        name: marketplace_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get AuthKeys
      tags:
      - Marketplaces
  /api/v1/marketplace/available:
    get:
      consumes:
      - application/json
      description: get AvailableMarketPlaces and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.AvailableMarketPlacesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AvailableMarketPlaces and filter it by search query
      tags:
      - Marketplaces
  /api/v1/marketplace/create:
    post:
      consumes:
      - application/json
      description: Link a Marketplacedetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: link a Marketplace
        in: body
        name: Marketplace_Details
        required: true
        schema:
          $ref: '#/definitions/marketplace.Marketplace_Details'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplacedetailCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a LinkMarketplacedetails
      tags:
      - Marketplaces
  /api/v1/marketplace/dropdown:
    get:
      consumes:
      - application/json
      description: get AllMarketplaces dropdown list and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplaceGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllMarketplaces dropdown list and filter it by search query
      tags:
      - Marketplaces
  /api/v1/marketplace/list:
    get:
      consumes:
      - application/json
      description: a get all AllMarketplacesdetails and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplacedetailGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all AllMarketplacesdetails and filter it by search query
      tags:
      - Marketplaces
  /api/v1/marketplace/list/dropdown:
    get:
      consumes:
      - application/json
      description: get AllMarketplacesdetails dropdown list and filter it by search
        query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplacedetailGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllMarketplacesdetails dropdown list and filter it by search query
      tags:
      - Marketplaces
  /api/v1/marketplace/register:
    post:
      consumes:
      - application/json
      description: Create a Marketplace
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Marketplace
        in: body
        name: MarketplaceCreateRequest
        required: true
        schema:
          $ref: '#/definitions/marketplace.Marketplace_Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplaceCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateMarketplace
      tags:
      - Marketplaces
  /api/v1/marketplace/update:
    post:
      consumes:
      - application/json
      description: Update a Marketplacedetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: marketplace_code
        in: query
        name: marketplace_code
        type: string
      - description: Update a Marketplace
        in: body
        name: Marketplace_details
        required: true
        schema:
          $ref: '#/definitions/marketplace.Marketplace_Details'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplacedetailUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateMarketDetailsByQuery
      tags:
      - Marketplaces
  /api/v1/marketplace/view/{id}:
    get:
      consumes:
      - application/json
      description: Find a Marketplacedetails by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/marketplace.MarketplacedetailGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a Marketplacedetails by id
      tags:
      - Marketplaces
  /api/v1/module/core_module:
    get:
      consumes:
      - application/json
      description: Get all CoreModule
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/module.CoreAppModule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all CoreModule
      tags:
      - Access_Management
  /api/v1/module/side__module:
    get:
      consumes:
      - application/json
      description: Get all CoreModule
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/module.CoreAppModule'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all CoreModule
      tags:
      - Access_Management
  /api/v1/omnichannel_fields:
    get:
      consumes:
      - application/json
      description: View AppFields
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: app_id
        in: query
        name: app_id
        type: string
      - description: channel_type_id
        in: query
        name: channel_type_id
        type: string
      - description: channel_function_id
        in: query
        name: channel_function_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnichannel_fields.OmnichannelFieldResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View AppFields
      tags:
      - OmnichannelFields
  /api/v1/omnichannel_fields/{id}:
    get:
      consumes:
      - application/json
      description: View OmnichannelFields
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnichannel_fields.OmnichannelFieldResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View OmnichannelFields
      tags:
      - OmnichannelFields
  /api/v1/omnichannel_fields/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete OmnichannelFields
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: field_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnichannel_fields.OmnichannelFieldDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete OmnichannelFields
      tags:
      - OmnichannelFields
  /api/v1/omnichannel_fields/{id}/update:
    post:
      consumes:
      - application/json
      description: Update OmnichannelFields
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      - description: OmnichannelField Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/omnichannel_fields.OmnichannelFieldRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnichannel_fields.OmnichannelFieldResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update OmnichannelFields
      tags:
      - OmnichannelFields
  /api/v1/omnichannel_fields/create:
    post:
      consumes:
      - application/json
      description: Create OmnichannelFields
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: OmnichannelField Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/omnichannel_fields.OmnichannelFieldRequestDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/omnichannel_fields.OmnichannelFieldResponseDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create OmnichannelFields
      tags:
      - OmnichannelFields
  /api/v1/payment_terms:
    get:
      consumes:
      - application/json
      description: Get all Payment Terms
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment_terms_and_record_payment.PaymentTermsDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Payment Terms
      tags:
      - PaymentTerms and Record Payments
  /api/v1/payment_terms/{id}:
    get:
      consumes:
      - application/json
      description: View PaymentTerms
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: PaymentTerms ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment_terms_and_record_payment.PaymentTermsDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View PaymentTerms
      tags:
      - PaymentTerms and Record Payments
  /api/v1/payment_terms/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeletePaymentTerm
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: PaymentTerms ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeletePaymentTerm
      tags:
      - PaymentTerms and Record Payments
  /api/v1/payment_terms/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdatePaymentTerm
      parameters:
      - description: PaymentTerm ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: PaymentTerms  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/payment_terms_and_record_payment.PaymentTermsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdatePaymentTerm
      tags:
      - PaymentTerms and Record Payments
  /api/v1/payment_terms/create:
    post:
      consumes:
      - application/json
      description: CreatePaymentTerm
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/payment_terms_and_record_payment.PaymentTermsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreatePaymentTerm
      tags:
      - PaymentTerms and Record Payments
  /api/v1/payment_terms/dropdown:
    get:
      consumes:
      - application/json
      description: Get all Payment Terms dropdown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/payment_terms_and_record_payment.PaymentTermsDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Payment Terms dropdown
      tags:
      - PaymentTerms and Record Payments
  /api/v1/pick_list:
    get:
      consumes:
      - application/json
      description: get all GetAllPicklist with MiscOptions of Pagination, Search,
        Filter and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all GetAllPicklist with MiscOptions of Pagination, Search, Filter
        and Sort
      tags:
      - PickList
  /api/v1/pick_list/{id}:
    get:
      consumes:
      - application/json
      description: Find a Picklist by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a Picklist by id
      tags:
      - PickList
  /api/v1/pick_list/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeletePicklist
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeletePicklist
      tags:
      - PickList
  /api/v1/pick_list/{id}/delete_products:
    delete:
      consumes:
      - application/json
      description: delete a DeletePicklistLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pick_list_id
        in: path
        name: pick_list_id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeletePicklistLines
      tags:
      - PickList
  /api/v1/pick_list/{id}/edit:
    put:
      consumes:
      - application/json
      description: Update a Picklist
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Picklist
        in: body
        name: PicklistUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/pick_list.PicklistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdatePicklist
      tags:
      - PickList
  /api/v1/pick_list/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavoritePickList
      parameters:
      - description: PickList ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavoritePickList
      tags:
      - PickList
  /api/v1/pick_list/{id}/printpdf:
    get:
      consumes:
      - application/json
      description: Download PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.DownloadPdfPickListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PDF
      tags:
      - PickList
  /api/v1/pick_list/{id}/sendemail:
    get:
      consumes:
      - application/json
      description: Send Email to specific recevier for Id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: receiver_email
        in: query
        name: receiver_email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.SendMailPickListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Send Email to specific recevier for Id
      tags:
      - PickList
  /api/v1/pick_list/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavoritePickList
      parameters:
      - description: PickList ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavoritePickList
      tags:
      - PickList
  /api/v1/pick_list/bulk_create:
    post:
      consumes:
      - application/json
      description: do a BulkCreatePicklist
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk Picklist
        in: body
        name: BulkPicklistCreateRequest
        required: true
        schema:
          $ref: '#/definitions/pick_list.PicklistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.BulkPicklistCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a BulkCreatePicklist
      tags:
      - PickList
  /api/v1/pick_list/create:
    post:
      consumes:
      - application/json
      description: Create a Picklist
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Picklist
        in: body
        name: PicklistCreateRequest
        required: true
        schema:
          $ref: '#/definitions/pick_list.PicklistRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreatePicklist
      tags:
      - PickList
  /api/v1/pick_list/dropdown:
    get:
      consumes:
      - application/json
      description: get all GetAllPickListDropDown with MiscOptions of Pagination,
        Search, Filter and Sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all GetAllPickListDropDown with MiscOptions of Pagination, Search,
        Filter and Sort
      tags:
      - PickList
  /api/v1/pick_list/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite PickList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pick_list.PicklistGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite PickList
      tags:
      - PickList
  /api/v1/pricing:
    get:
      consumes:
      - application/json
      description: a get all Purchase Price List and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pricing.PricingListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all Purchase Price List and filter it by search query
      tags:
      - Pricing
  /api/v1/pricing/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a Price List
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pricing.PricingDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a Price List
      tags:
      - Pricing
  /api/v1/pricing/{id}/delete_line_items:
    delete:
      consumes:
      - application/json
      description: delete a DeletePricingLineItems
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pricing.PricingDeleteLineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeletePricingLineItems
      tags:
      - Pricing
  /api/v1/pricing/{id}/edit:
    post:
      consumes:
      - application/json
      description: Update a Price List
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: create a Purchase Price List
        in: body
        name: PurchasePriceListCreateRequest
        schema:
          $ref: '#/definitions/pricing.PurchasePriceListDTO'
      - description: create a Transfer Price List
        in: body
        name: TransferPriceListCreateRequest
        schema:
          $ref: '#/definitions/pricing.TransferPriceListDTO'
      - description: create a Sales Price List for Markup and Markdown By age
        in: body
        name: SalesPriceListMarkupCreateRequest
        schema:
          $ref: '#/definitions/pricing.SalesPriceListDTO'
      - description: create a Sales Price List for Enter All Items
        in: body
        name: SalesPriceListAllItemCreateRequest
        schema:
          $ref: '#/definitions/pricing.SalesPriceListDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pricing.PricingUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do  Update Price List
      tags:
      - Pricing
  /api/v1/pricing/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouritePricings
      parameters:
      - description: Pricing ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouritePricings
      tags:
      - Pricing
  /api/v1/pricing/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouritePricings
      parameters:
      - description: Pricing ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouritePricings
      tags:
      - Pricing
  /api/v1/pricing/create:
    post:
      consumes:
      - application/json
      description: Create a Price List
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Purchase Price List
        in: body
        name: PurchasePriceListCreateRequest
        schema:
          $ref: '#/definitions/pricing.PurchasePriceListDTO'
      - description: create a Transfer Price List
        in: body
        name: TransferPriceListCreateRequest
        schema:
          $ref: '#/definitions/pricing.TransferPriceListDTO'
      - description: create a Sales Price List for Markup and Markdown By age
        in: body
        name: SalesPriceListMarkupCreateRequest
        schema:
          $ref: '#/definitions/pricing.SalesPriceListDTO'
      - description: create a Sales Price List for Enter All Items
        in: body
        name: SalesPriceListAllItemCreateRequest
        schema:
          $ref: '#/definitions/pricing.SalesPriceListDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pricing.PricingCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Do Create Price List
      tags:
      - Pricing
  /api/v1/pricing/dropdown:
    get:
      consumes:
      - application/json
      description: a get all Price List and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pricing.PricingListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all Price List and filter it by search query
      tags:
      - Pricing
  /api/v1/pricing/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite pricing
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite pricing
      tags:
      - Pricing
  /api/v1/products:
    get:
      consumes:
      - application/json
      description: List of All Products  with MISC OPTIONS of pagination, search,Filter
        and sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.TemplateReponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProducts with MISC OPTIONS of pagination, search,Filter and sort
      tags:
      - Products
  /api/v1/products/{id}:
    get:
      consumes:
      - application/json
      description: View a ProductDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.TemplateReponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ViewProductDetails
      tags:
      - Products
  /api/v1/products/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a ProductDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a DeleteProductDetails
      tags:
      - Products
  /api/v1/products/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteProducts
      parameters:
      - description: ProductVariant ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteProducts
      tags:
      - Products
  /api/v1/products/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteProducts
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteProducts
      tags:
      - Products
  /api/v1/products/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Product
        in: body
        name: CreateProductTemplatePayload
        required: true
        schema:
          $ref: '#/definitions/products.CreateProductTemplatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.TemplateReponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateProductDetails
      tags:
      - Products
  /api/v1/products/base_attributes:
    get:
      consumes:
      - application/json
      description: List of  ProductBaseAttributes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductBaseAttributesRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductBaseAttributes
      tags:
      - Products
  /api/v1/products/base_attributes/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteProductBaseAttributesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteProductBaseAttributesDetails
      tags:
      - Products
  /api/v1/products/base_attributes/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductBaseAttributesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Product BaseAttributes
        in: body
        name: ProductBaseAttributesRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductBaseAttributesRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductBaseAttributesRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateProductBaseAttributesDetails
      tags:
      - Products
  /api/v1/products/base_attributes/create:
    post:
      consumes:
      - application/json
      description: Create ProductBaseAttributes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product BaseAttributes
        in: body
        name: ProductBaseAttributesValuesRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProductBaseAttributes
      tags:
      - Products
  /api/v1/products/base_attributes/dropdown:
    get:
      consumes:
      - application/json
      description: List of  ProductBaseAttributes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductBaseAttributesRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductBaseAttributes
      tags:
      - Products
  /api/v1/products/base_attributes_values:
    get:
      consumes:
      - application/json
      description: List of  ProductBaseAttributesValues
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductBaseAttributesValues
      tags:
      - Products
  /api/v1/products/base_attributes_values/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteProductBaseAttributesValuesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteProductBaseAttributesValuesDetails
      tags:
      - Products
  /api/v1/products/base_attributes_values/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductBaseAttributesValuesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Product BaseAttributes
        in: body
        name: ProductBaseAttributesValuesRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateProductBaseAttributesValuesDetails
      tags:
      - Products
  /api/v1/products/base_attributes_values/create:
    post:
      consumes:
      - application/json
      description: Create ProductBaseAttributesValues
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product BaseAttributesValues
        in: body
        name: ProductBaseAttributesValuesRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProductBaseAttributesValues
      tags:
      - Products
  /api/v1/products/base_attributes_values/dropdown:
    get:
      consumes:
      - application/json
      description: List of  ProductBaseAttributesValues
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductBaseAttributesValuesRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductBaseAttributesValues
      tags:
      - Products
  /api/v1/products/brand:
    get:
      consumes:
      - application/json
      description: ProductBrand List
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.BrandRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetProductBrand
      tags:
      - Products
  /api/v1/products/brand/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteProductBrandDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteProductBrandDetails
      tags:
      - Products
  /api/v1/products/brand/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductBrandDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Product Brand
        in: body
        name: BrandRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.BrandRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.BrandRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateProductBrandDetails
      tags:
      - Products
  /api/v1/products/brand/create:
    post:
      consumes:
      - application/json
      description: Create ProductBrand
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product Brand
        in: body
        name: BrandRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.BrandRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.BrandRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProductBrand
      tags:
      - Products
  /api/v1/products/brand/dropdown:
    get:
      consumes:
      - application/json
      description: ProductBrand List
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.BrandRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetProductBrand
      tags:
      - Products
  /api/v1/products/bulk_create:
    post:
      consumes:
      - application/json
      description: Create Bulk Product
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product
        in: body
        name: CreateProductTemplatePayload
        required: true
        schema:
          $ref: '#/definitions/products.CreateProductTemplatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.CreateProductTemplatePayload'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateBulkProduct
      tags:
      - Products
  /api/v1/products/bundle:
    get:
      consumes:
      - application/json
      description: List of  Bundles
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.BudleResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List of Bundles
      tags:
      - Products
  /api/v1/products/bundle/{id}:
    get:
      consumes:
      - application/json
      description: View a BundleDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.BudleResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ViewBundleDetails
      tags:
      - Products
  /api/v1/products/bundle/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteBundleDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteBundleDetails
      tags:
      - Products
  /api/v1/products/bundle/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a Bundle Details
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Bundle Details
        in: body
        name: CreateBundlePayload
        required: true
        schema:
          $ref: '#/definitions/products.CreateBundlePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.CreateBundlePayload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateBundleDetails
      tags:
      - Products
  /api/v1/products/bundle/create:
    post:
      consumes:
      - application/json
      description: Create a BundleDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Bundle
        in: body
        name: CreateBundlePayload
        required: true
        schema:
          $ref: '#/definitions/products.CreateBundlePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.CreateBundlePayload'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateBundleDetails
      tags:
      - Products
  /api/v1/products/bundle/dropdown:
    get:
      consumes:
      - application/json
      description: List of  Bundles
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.BudleResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: List of Bundles
      tags:
      - Products
  /api/v1/products/category:
    get:
      consumes:
      - application/json
      description: List of  ProductCategories
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.CategoryAndSubcategoryRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductCategory
      tags:
      - Products
  /api/v1/products/category/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteProductCategoryDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteProductCategoryDetails
      tags:
      - Products
  /api/v1/products/category/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductCategoryDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Product category
        in: body
        name: CategoryAndSubcategoryRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.CategoryAndSubcategoryRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.CategoryAndSubcategoryRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateProductCategoryDetails
      tags:
      - Products
  /api/v1/products/category/create:
    post:
      consumes:
      - application/json
      description: Create ProductCategory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product category
        in: body
        name: CategoryAndSubcategoryRequestAndResponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.CategoryAndSubcategoryRequestAndResponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.CategoryAndSubcategoryRequestAndResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProductCategory
      tags:
      - Products
  /api/v1/products/category/dropdown:
    get:
      consumes:
      - application/json
      description: List of  ProductCategories
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.CategoryAndSubcategoryRequestAndResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductCategory
      tags:
      - Products
  /api/v1/products/create:
    post:
      consumes:
      - application/json
      description: Create a ProductDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product
        in: body
        name: CreateProductTemplatePayload
        required: true
        schema:
          $ref: '#/definitions/products.CreateProductTemplatePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.TemplateReponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateProductDetails
      tags:
      - Products
  /api/v1/products/dropdown:
    get:
      consumes:
      - application/json
      description: List of All Products  with MISC OPTIONS of pagination, search,Filter
        and sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.TemplateReponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProducts with MISC OPTIONS of pagination, search,Filter and sort
      tags:
      - Products
  /api/v1/products/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite products
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.VariantResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite products
      tags:
      - Products
  /api/v1/products/selected_attributes:
    get:
      consumes:
      - application/json
      description: List of  ProductSelectedAttributes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductSelectedAttributesRequestAndREsponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductSelectedAttributes
      tags:
      - Products
  /api/v1/products/selected_attributes/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteProductSelectedAttributesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteProductSelectedAttributesDetails
      tags:
      - Products
  /api/v1/products/selected_attributes/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductSelectedAttributesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Product Selected Attributes
        in: body
        name: ProductSelectedAttributesRequestAndREsponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductSelectedAttributesRequestAndREsponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductSelectedAttributesRequestAndREsponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateProductSelectedAttributesDetails
      tags:
      - Products
  /api/v1/products/selected_attributes/create:
    post:
      consumes:
      - application/json
      description: Create ProductSelectedAttributes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product Selected Attributes
        in: body
        name: ProductSelectedAttributesRequestAndREsponseDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductSelectedAttributesRequestAndREsponseDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductSelectedAttributesRequestAndREsponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProductSelectedAttributes
      tags:
      - Products
  /api/v1/products/selected_attributes/dropdown:
    get:
      consumes:
      - application/json
      description: List of  ProductSelectedAttributes
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductSelectedAttributesRequestAndREsponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductSelectedAttributes
      tags:
      - Products
  /api/v1/products/selected_attributes_values:
    get:
      consumes:
      - application/json
      description: List of  ProductSelectedAttributesValues
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductSelectedAttributesValuesRequestAndResponseeDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductSelectedAttributesValues
      tags:
      - Products
  /api/v1/products/selected_attributes_values/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteProductSelectedAttributesValuesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteProductSelectedAttributesValuesDetails
      tags:
      - Products
  /api/v1/products/selected_attributes_values/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductSelectedAttributesValuesDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Product SelectedAttributesValues
        in: body
        name: ProductSelectedAttributesValuesRequestAndResponseeDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductSelectedAttributesValuesRequestAndResponseeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductSelectedAttributesValuesRequestAndResponseeDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateProductSelectedAttributesValuesDetails
      tags:
      - Products
  /api/v1/products/selected_attributes_values/create:
    post:
      consumes:
      - application/json
      description: Create ProductSelectedAttributesValues
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Product SelectedAttributesValues
        in: body
        name: ProductSelectedAttributesValuesRequestAndResponseeDTO
        required: true
        schema:
          $ref: '#/definitions/products.ProductSelectedAttributesValuesRequestAndResponseeDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.ProductSelectedAttributesValuesRequestAndResponseeDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProductSelectedAttributesValues
      tags:
      - Products
  /api/v1/products/selected_attributes_values/dropdown:
    get:
      consumes:
      - application/json
      description: List of  ProductSelectedAttributesValues
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.ProductSelectedAttributesValuesRequestAndResponseeDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductSelectedAttributesValues
      tags:
      - Products
  /api/v1/products/sku_code:
    get:
      consumes:
      - application/json
      description: Check Productvariant and Template Skucode values
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sku
        in: query
        name: sku
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Check  Productvariant and template Skucode
      tags:
      - Products
  /api/v1/products/variant:
    get:
      consumes:
      - application/json
      description: List of All ProductVariants  with MISC OPTIONS of pagination, search,Filter
        and sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.VariantResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductVariants with MISC OPTIONS of pagination, search,Filter
        and sort
      tags:
      - Products
  /api/v1/products/variant/{id}:
    get:
      consumes:
      - application/json
      description: View a ProductDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.VariantResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ViewProductDetails
      tags:
      - Products
  /api/v1/products/variant/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteProductVariantDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteProductVariantDetails
      tags:
      - Products
  /api/v1/products/variant/{id}/download_pdf:
    post:
      consumes:
      - application/json
      description: Download Productvariant
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download Productvariant
      tags:
      - Products
  /api/v1/products/variant/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetProductVariantTabs
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetProductVariantTabs
      tags:
      - Products
  /api/v1/products/variant/{id}/qrcode:
    post:
      consumes:
      - application/json
      description: print Productvariant Qrcode
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: print  Productvariant Qrcode
      tags:
      - Products
  /api/v1/products/variant/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ProductVariantDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a Productvariant
        in: body
        name: CreateProductVariantDTO
        required: true
        schema:
          $ref: '#/definitions/products.CreateProductVariantDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.VariantResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateProductVariantDetails
      tags:
      - Products
  /api/v1/products/variant/create:
    post:
      consumes:
      - application/json
      description: Create ProductVariantDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Productvariant
        in: body
        name: CreateProductVariantDTO
        required: true
        schema:
          $ref: '#/definitions/products.CreateProductVariantDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/products.VariantResponseDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateProductVariantDetails
      tags:
      - Products
  /api/v1/products/variant/dropdown:
    get:
      consumes:
      - application/json
      description: List of All ProductVariants  with MISC OPTIONS of pagination, search,Filter
        and sort
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/products.VariantResponseDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: ListProductVariants with MISC OPTIONS of pagination, search,Filter
        and sort
      tags:
      - Products
  /api/v1/products/variant/variant_generation:
    post:
      consumes:
      - application/json
      description: Productvariant VariantGeneration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Productvariant VariantGeneration
      tags:
      - Products
  /api/v1/purchase_invoice:
    get:
      consumes:
      - application/json
      description: Get all PurchaseInvoice list
      parameters:
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_invoice.GetAllPurchaseInvoiceResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all PurchaseInvoice list
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}:
    get:
      consumes:
      - application/json
      description: View PurchaseInvoice
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseInvoice
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/downloadPdf:
    post:
      consumes:
      - application/json
      description: Download PurchaseInvoice
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouritePurchaseInvoice
      parameters:
      - description: PurchaseInvoice ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouritePurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/generatePdf:
    post:
      consumes:
      - application/json
      description: Generate PDF PurchaseInvoice
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate PDF PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/printPdf:
    post:
      consumes:
      - application/json
      description: print PurchaseInvoice
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Print PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/sendEmail:
    post:
      consumes:
      - application/json
      description: Email PurchaseInvoice
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouritePurchaseInvoice
      parameters:
      - description: PurchaseInvoice ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouritePurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/{id}/update:
    post:
      consumes:
      - application/json
      description: Update PurchaseInvoice
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: Purchase Invoice Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/purchase_invoice.PurchaseInvoiceDTO'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/create:
    post:
      consumes:
      - application/json
      description: Create PurchaseInvoice
      parameters:
      - description: Purchase Invoice Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/purchase_invoice.PurchaseInvoiceDTO'
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/dropdown:
    get:
      consumes:
      - application/json
      description: Get all PurchaseInvoice dropdown list
      parameters:
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_invoice.GetAllPurchaseInvoiceResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all PurchaseInvoice dropdown list
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/invoice_lines/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseInvoiceLines
      parameters:
      - description: purchase_invoice_id
        in: path
        name: id
        required: true
        type: string
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_invoice.PurchaseInvoiceLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete PurchaseInvoiceLines
      tags:
      - PurchaseInvoice
  /api/v1/purchase_invoice/search:
    get:
      consumes:
      - application/json
      description: Search PurchaseInvoice
      parameters:
      - description: query
        in: query
        name: query
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_invoice.GetAllPurchaseInvoiceResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search PurchaseInvoice
      tags:
      - PurchaseInvoice
  /api/v1/purchase_orders:
    get:
      consumes:
      - application/json
      description: Get all PurchaseOrders list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_orders.GetAllPurchaseOrdersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all PurchaseOrders list
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}:
    get:
      consumes:
      - application/json
      description: View PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: po_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: po_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/downloadPdf:
    post:
      consumes:
      - application/json
      description: Download PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: po_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouritePurchaseOrders
      parameters:
      - description: PurchaseOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouritePurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetPurchaseOrderTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetPurchaseOrderTab
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/generatePdf:
    post:
      consumes:
      - application/json
      description: Generate PDF PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: po_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate PDF PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/sendEmail:
    post:
      consumes:
      - application/json
      description: Email PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: po_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouritePurchaseOrders
      parameters:
      - description: PurchaseOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouritePurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{id}/update:
    post:
      consumes:
      - application/json
      description: Update PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: po_id
        in: path
        name: id
        required: true
        type: string
      - description: Purchase Orders Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/purchase_orders.PurchaseOrdersDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/{product_id}/history:
    get:
      consumes:
      - application/json
      description: GetPurchaseHistory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetPurchaseHistory
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/create:
    post:
      consumes:
      - application/json
      description: Create PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Purchase Orders Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/purchase_orders.PurchaseOrdersDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_orders.PurchaseOrdersCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/dropdown:
    get:
      consumes:
      - application/json
      description: Get all PurchaseOrders dropdown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_orders.GetAllPurchaseOrdersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all PurchaseOrders dropdown
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/order_lines/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseOrderLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: po_id
        in: path
        name: id
        required: true
        type: string
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_orders.PurchaseOrderLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete PurchaseOrderLines
      tags:
      - PurchaseOrders
  /api/v1/purchase_orders/search:
    get:
      consumes:
      - application/json
      description: Search PurchaseOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_orders.GetAllPurchaseOrdersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search PurchaseOrders
      tags:
      - PurchaseOrders
  /api/v1/purchase_returns:
    get:
      consumes:
      - application/json
      description: Get all PurchaseReturns list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_returns.GetAllPurchaseReturnsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all PurchaseReturns list
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}:
    get:
      consumes:
      - application/json
      description: View PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/downloadPdf:
    post:
      consumes:
      - application/json
      description: Download PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouritePurchaseReturns
      parameters:
      - description: PurchaseReturns ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouritePurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetPurchaseReturnTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetPurchaseReturnTab
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/generatePdf:
    post:
      consumes:
      - application/json
      description: Generate PDF PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate PDF PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/sendEmail:
    post:
      consumes:
      - application/json
      description: Email PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouritePurchaseReturns
      parameters:
      - description: PurchaseReturns ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouritePurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{id}/update:
    post:
      consumes:
      - application/json
      description: Update PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pr_id
        in: path
        name: id
        required: true
        type: string
      - description: Purchase Returns Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/purchase_returns.PurchaseReturnsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/{product_id}/history:
    get:
      consumes:
      - application/json
      description: GetPurchaseReturnsHistory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetPurchaseReturnsHistory
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/create:
    post:
      consumes:
      - application/json
      description: Create PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Purchase Returns Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/purchase_returns.PurchaseReturnsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_returns.PurchaseReturnsCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/dropdown:
    get:
      consumes:
      - application/json
      description: Get all PurchaseReturns list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_returns.GetAllPurchaseReturnsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all PurchaseReturns list
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/return_lines/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete PurchaseReturnLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: pr_id
        in: path
        name: id
        required: true
        type: string
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/purchase_returns.PurchaseReturnLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete PurchaseReturnLines
      tags:
      - PurchaseReturns
  /api/v1/purchase_returns/search:
    get:
      consumes:
      - application/json
      description: Search PurchaseReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/purchase_returns.GetAllPurchaseReturnsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search PurchaseReturns
      tags:
      - PurchaseReturns
  /api/v1/sales_invoice:
    get:
      consumes:
      - application/json
      description: Get All Sales Invoice with MiscOptions of Pagination, Search, Filter
        and Sort
      parameters:
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SalesInvoiceGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Sales Invoice with MiscOptions of Pagination, Search, Filter
        and Sort
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}:
    get:
      consumes:
      - application/json
      description: Get Sales Invoice by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SalesInvoiceGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Sales Invoice by id
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete Sales Invoice
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SalesInvoiceDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Sales Invoice
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}/delete_products:
    delete:
      consumes:
      - application/json
      description: Delete Sales Invoice Lines
      parameters:
      - description: sales_invoice_id
        in: path
        name: sales_invoice_id
        required: true
        type: integer
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SalesInvoiceLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete Sales Invoice Lines
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}/edit:
    put:
      consumes:
      - application/json
      description: Update Sales Invoice
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Update Sales Invoice
        in: body
        name: SalesInvoiceUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/sales_invoice.SalesInvoiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SalesInvoiceUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update Sales Invoice
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}/favourite:
    post:
      consumes:
      - application/json
      description: Favourite Sales Invoice
      parameters:
      - description: Sales Invoice ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Favourite Sales Invoice
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}/printpdf:
    get:
      consumes:
      - application/json
      description: Download PDF
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.DownloadPdfSalesInvoiceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download PDF
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}/sendemail:
    get:
      consumes:
      - application/json
      description: Send Email to specific recevier for Id
      parameters:
      - description: id
        in: query
        name: id
        required: true
        type: integer
      - description: receiver_email
        in: query
        name: receiver_email
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SendMailSalesInvoiceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Send Email to specific recevier for Id
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavourite Sales Invoice
      parameters:
      - description: Sales Invoice ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavourite Sales Invoice
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/bulk_create:
    post:
      consumes:
      - application/json
      description: Bulk Create Sales Invoice
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk Sales Invoice
        in: body
        name: BulkSalesInvoiceCreateRequest
        required: true
        schema:
          $ref: '#/definitions/sales_invoice.SalesInvoiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.BulkSalesInvoiceCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Bulk Create Sales Invoice
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/create:
    post:
      consumes:
      - application/json
      description: Create Sales Invoice
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create Sales Invoice
        in: body
        name: SalesInvoiceCreateRequest
        required: true
        schema:
          $ref: '#/definitions/sales_invoice.SalesInvoiceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SalesInvoiceCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create Sales Invoice
      tags:
      - Sales Invoice
  /api/v1/sales_invoice/dropdown:
    get:
      consumes:
      - application/json
      description: Get All Sales Invoice dropdown with MiscOptions of Pagination,
        Search, Filter and Sort
      parameters:
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_invoice.SalesInvoiceGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Sales Invoice dropdown with MiscOptions of Pagination, Search,
        Filter and Sort
      tags:
      - Sales Invoice
  /api/v1/sales_orders:
    get:
      consumes:
      - application/json
      description: Get all SalesOrders list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sales_orders.GetAllSalesOrdersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all SalesOrders list
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}:
    get:
      consumes:
      - application/json
      description: View SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_orders.SalesOrdersGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_orders.SalesOrdersDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/downloadPdf:
    post:
      consumes:
      - application/json
      description: Download SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteSalesOrders
      parameters:
      - description: SalesOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteSalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetSalesOrderTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetSalesOrderTab
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/generatePdf:
    post:
      consumes:
      - application/json
      description: Generate PDF SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate PDF SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/sendEmail:
    post:
      consumes:
      - application/json
      description: Email SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteSalesOrders
      parameters:
      - description: SalesOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteSalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{id}/update:
    post:
      consumes:
      - application/json
      description: Update SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      - description: Sales Orders Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/sales_orders.SalesOrdersDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_orders.SalesOrdersUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/{product_id}/history:
    get:
      consumes:
      - application/json
      description: GetSalesHistory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetSalesHistory
      tags:
      - SalesOrders
  /api/v1/sales_orders/create:
    post:
      consumes:
      - application/json
      description: Create SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Sales Orders Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/sales_orders.SalesOrdersDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_orders.SalesOrdersCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_orders/dropdown:
    get:
      consumes:
      - application/json
      description: Get all SalesOrders DropDown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sales_orders.GetAllSalesOrdersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all SalesOrders DropDown
      tags:
      - SalesOrders
  /api/v1/sales_orders/order_lines/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete SalesOrderLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: so_id
        in: path
        name: id
        required: true
        type: string
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_orders.SalesOrderLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete SalesOrderLines
      tags:
      - SalesOrders
  /api/v1/sales_orders/search:
    get:
      consumes:
      - application/json
      description: Search SalesOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sales_orders.GetAllSalesOrdersResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search SalesOrders
      tags:
      - SalesOrders
  /api/v1/sales_returns:
    get:
      consumes:
      - application/json
      description: Get all SalesReturns list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sales_returns.GetAllSalesReturnsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all SalesReturns list
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}:
    get:
      consumes:
      - application/json
      description: View SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_returns.SalesReturnsGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View SalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_returns.SalesReturnsDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete SalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/downloadPdf:
    post:
      consumes:
      - application/json
      description: Download SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download SalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteSalesReturns
      parameters:
      - description: SalesReturns ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteSalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetSalesReturnTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetSalesReturnTab
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/generatePdf:
    post:
      consumes:
      - application/json
      description: Generate PDF SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate PDF SalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/sendEmail:
    post:
      consumes:
      - application/json
      description: Email SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sr_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email SalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteSalesReturns
      parameters:
      - description: SalesReturns ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteSalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{id}/update:
    post:
      consumes:
      - application/json
      description: Update SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sr_id
        in: path
        name: id
        required: true
        type: string
      - description: Sales Returns Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/sales_returns.SalesReturnsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_returns.SalesReturnsUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update SalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/{product_id}/history:
    get:
      consumes:
      - application/json
      description: GetSalesReturnsHistory
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: product_id
        in: path
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetSalesReturnsHistory
      tags:
      - SalesReturns
  /api/v1/sales_returns/create:
    post:
      consumes:
      - application/json
      description: Create SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Sales Returns Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/sales_returns.SalesReturnsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_returns.SalesReturnsCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create SalesReturns
      tags:
      - SalesReturns
  /api/v1/sales_returns/dropdown:
    get:
      consumes:
      - application/json
      description: Get all SalesReturns dropdown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sales_returns.GetAllSalesReturnsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all SalesReturns dropdown
      tags:
      - SalesReturns
  /api/v1/sales_returns/return_lines/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete SalesReturnLines
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: sr_id
        in: path
        name: id
        required: true
        type: string
      - description: product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/sales_returns.SalesReturnLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete SalesReturnLines
      tags:
      - SalesReturns
  /api/v1/sales_returns/search:
    get:
      consumes:
      - application/json
      description: Search SalesReturns
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/sales_returns.GetAllSalesReturnsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search SalesReturns
      tags:
      - SalesReturns
  /api/v1/scrap_orders:
    get:
      consumes:
      - application/json
      description: Find All ScrapOrders and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/scrap_orders.ScrapOrderGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find All ScrapOrders and filter it by search query
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}:
    get:
      consumes:
      - application/json
      description: Find a ScrapOrder By id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/scrap_orders.ScrapOrderGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a ScrapOrder By id
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a ScrapOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/scrap_orders.ScrapOrderDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a ScrapOrder
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/download_pdf:
    post:
      consumes:
      - application/json
      description: Download ScrapOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download ScrapOrders
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteScrapOrders
      parameters:
      - description: ScrapOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteScrapOrders
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetScrapOrderTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetScrapOrderTab
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/generate_pdf:
    post:
      consumes:
      - application/json
      description: Generate ScrapOrders PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate ScrapOrders PDF
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/send_email:
    post:
      consumes:
      - application/json
      description: Email ScrapOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email ScrapOrders
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteScrapOrders
      parameters:
      - description: ScrapOrders ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteScrapOrders
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ScrapOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: update a ScrapOrder
        in: body
        name: UpdateScrapOrderRequest
        required: true
        schema:
          $ref: '#/definitions/scrap_orders.ScrapOrders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/scrap_orders.ScrapOrderUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateScrap
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/{line_id}/delete_product:
    delete:
      responses: {}
  /api/v1/scrap_orders/bulkcreate:
    post:
      consumes:
      - application/json
      description: do a BulkCreateScrapOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk ScrapOrder
        in: body
        name: BulkScrapOrderCreateRequest
        required: true
        schema:
          $ref: '#/definitions/scrap_orders.ScrapOrders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/scrap_orders.BulkScrapOrderCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a BulkCreateScrapOrder
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/create:
    post:
      consumes:
      - application/json
      description: Create a ScrapOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a ScrapOrder
        in: body
        name: CreateScrapOrderRequest
        required: true
        schema:
          $ref: '#/definitions/scrap_orders.ScrapOrders'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/scrap_orders.ScrapOrderCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateScrapOrder
      tags:
      - ScrapOrders
  /api/v1/scrap_orders/dropdown:
    get:
      consumes:
      - application/json
      description: Find All ScrapOrders and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/scrap_orders.ScrapOrderGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find All ScrapOrders and filter it by search query
      tags:
      - ScrapOrders
  /api/v1/shipping_orders:
    get:
      consumes:
      - application/json
      description: Get All ShippingOrders
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllShippingOrdersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllShippingOrders
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}:
    get:
      consumes:
      - application/json
      description: Get a ShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Get ShippingOrder
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShippingOrderGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a ShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteShippingOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/download_pdf:
    post:
      consumes:
      - application/json
      description: Download ShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ShippingOrder_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download ShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ShippingOrder ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/filter_module/{tab}:
    get:
      consumes:
      - application/json
      description: GetShippingOrderTab
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: tab
        in: path
        name: tab
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetShippingOrderTab
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/generate_pdf:
    post:
      consumes:
      - application/json
      description: Generate ShippingOrder PDF
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ShippingOrder_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Generate ShippingOrder PDF
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/send_email:
    post:
      consumes:
      - application/json
      description: Email ShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ShippingOrder_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Email ShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: ShippingOrder ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a ShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a ShippingOrder
        in: body
        name: ShippingOrderUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders.ShippingOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateShippingOrderResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/bulk_create:
    post:
      consumes:
      - application/json
      description: Create a Multiple ShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk ShippingOrder
        in: body
        name: BulkShippingOrderCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders.ShippingOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shipping_orders.BulkShippingOrderCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: BulkCreateShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/create:
    post:
      consumes:
      - application/json
      description: Create a ShippingOrder
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a ShippingOrder
        in: body
        name: ShippingOrderCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders.ShippingOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShippingOrderCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateShippingOrder
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/dropdown:
    get:
      consumes:
      - application/json
      description: Get All ShippingOrdersDropDown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllShippingOrdersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllShippingOrdersDropDown
      tags:
      - ShippingOrder
  /api/v1/shipping_orders/order_line/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a ShippingOrderLine
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Product_id
        in: query
        name: product_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteShippingOrderLineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteShippingOrderLine
      tags:
      - ShippingOrder
  /api/v1/shipping_orders_ndr:
    get:
      consumes:
      - application/json
      description: Get All NDR
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllNDRResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all NDR and filter it by search query
      tags:
      - NDR
  /api/v1/shipping_orders_ndr/{id}:
    get:
      consumes:
      - application/json
      description: Get a NDR
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/NDRGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetNDR
      tags:
      - NDR
  /api/v1/shipping_orders_ndr/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a NDR
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteNDRResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteNDR
      tags:
      - NDR
  /api/v1/shipping_orders_ndr/{id}/update:
    post:
      consumes:
      - application/json
      description: Update the NDR
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update the NDR
        in: body
        name: NDRUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_ndr.NDRRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateNDRResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateNDR
      tags:
      - NDR
  /api/v1/shipping_orders_ndr/bulk_create:
    post:
      consumes:
      - application/json
      description: Create a Multiple NDR
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk NDR
        in: body
        name: BulkNDRCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_ndr.NDRRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shipping_orders_ndr.BulkNDRCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: BulkCreateNDR
      tags:
      - NDR
  /api/v1/shipping_orders_ndr/create:
    post:
      consumes:
      - application/json
      description: Create a NDR
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a NDR
        in: body
        name: NDRCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_ndr.NDRRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/NDRCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateNDR
      tags:
      - NDR
  /api/v1/shipping_orders_ndr/dropdown:
    get:
      consumes:
      - application/json
      description: Get NDR dropdown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllNDRResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all NDR and filter it by search query
      tags:
      - NDR
  /api/v1/shipping_orders_ndr/ndr_lines/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a NDR Line
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: ndrs_id
        in: query
        name: ndrs_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteNDRLineResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteNDRLine
      tags:
      - NDR
  /api/v1/shipping_orders_rto:
    get:
      consumes:
      - application/json
      description: Get All RTO
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllRTOResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllRTO
      tags:
      - RTO
  /api/v1/shipping_orders_rto/{id}:
    get:
      consumes:
      - application/json
      description: Get a RTO
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RTOGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetRTO
      tags:
      - RTO
  /api/v1/shipping_orders_rto/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a RTO
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteRTOResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteRTO
      tags:
      - RTO
  /api/v1/shipping_orders_rto/{id}/update:
    post:
      consumes:
      - application/json
      description: Update the RTO
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update the RTO
        in: body
        name: RTOUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_rto.RTORequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateRTOResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateRTO
      tags:
      - RTO
  /api/v1/shipping_orders_rto/bulk_create:
    post:
      consumes:
      - application/json
      description: Create a Multiple RTO
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk RTO
        in: body
        name: BulkRTOCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_rto.RTORequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shipping_orders_rto.BulkRTOCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: BulkCreateRTO
      tags:
      - RTO
  /api/v1/shipping_orders_rto/create:
    post:
      consumes:
      - application/json
      description: Create a RTO
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a RTO
        in: body
        name: RTOCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_rto.RTORequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RTOCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateRTO
      tags:
      - RTO
  /api/v1/shipping_orders_rto/dropdown:
    get:
      consumes:
      - application/json
      description: Get DropDown RTO
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllRTOResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllRTODropDown
      tags:
      - RTO
  /api/v1/shipping_orders_wd:
    get:
      consumes:
      - application/json
      description: Get All WD
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllWDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllWD
      tags:
      - WD
  /api/v1/shipping_orders_wd/{id}:
    get:
      consumes:
      - application/json
      description: Get a WD
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WDGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetWD
      tags:
      - WD
  /api/v1/shipping_orders_wd/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a WD
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/DeleteWDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteWD
      tags:
      - WD
  /api/v1/shipping_orders_wd/{id}/update:
    post:
      consumes:
      - application/json
      description: Update the WD
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update the WD
        in: body
        name: WDUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_wd.WDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UpdateWDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateWD
      tags:
      - WD
  /api/v1/shipping_orders_wd/bulk_create:
    post:
      consumes:
      - application/json
      description: Create a Multiple WD
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a Bulk WD
        in: body
        name: BulkWDCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_wd.WDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/shipping_orders_wd.BulkWDCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: BulkCreateWD
      tags:
      - WD
  /api/v1/shipping_orders_wd/create:
    post:
      consumes:
      - application/json
      description: Create a WD
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create a WD
        in: body
        name: WDCreateRequest
        required: true
        schema:
          $ref: '#/definitions/shipping_orders_wd.WDRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WDCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateWD
      tags:
      - WD
  /api/v1/shipping_orders_wd/dropdown:
    get:
      consumes:
      - application/json
      description: Get All WD
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllWDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllWDDropDown
      tags:
      - WD
  /api/v1/shipping_partners:
    get:
      consumes:
      - application/json
      description: FindAllUserShippingPartnerRegistration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserShippingPartnerRegistrationGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FindAllUserShippingPartnerRegistration
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/{id}:
    get:
      consumes:
      - application/json
      description: Find a GetShippingPartner by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetShippingPartnerById
      tags:
      - ShippingPartner
  /api/v1/shipping_partners/{id}/delete:
    delete:
      consumes:
      - application/json
      description: Delete a UserShippingPartnerRegistration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserShippingPartnerRegistrationDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteUserShippingPartnerRegistration
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/{id}/download_pdf:
    post:
      consumes:
      - application/json
      description: Download UserShippingPartnerRegistration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserShippingPartnerRegistration_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Download UserShippingPartnerRegistration
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteUserShippingPartnerRegistration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserShippingPartnerRegistration ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteUserShippingPartnerRegistration
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteUserShippingPartnerRegistration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserShippingPartnerRegistration ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteUserShippingPartnerRegistration
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateUserShippingPartnerRegistration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Shipping Partner
        in: body
        name: UserShippingPartnerRegistrationUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/UserShippingPartnerRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserShippingPartnerRegistrationUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateUserShippingPartnerRegistration
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/{id}/upload_document:
    post:
      consumes:
      - application/json
      description: Upload UserShippingPartnerRegistration Document
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UserShippingPartnerRegistration_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Upload UserShippingPartnerRegistration Document
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/{partner_name}/get_auth_options:
    get:
      consumes:
      - application/json
      description: Find a GetShippingPartnerAuth by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetShippingPartnerAuthById
      tags:
      - ShippingPartner
  /api/v1/shipping_partners/{partner_name}/update_partner:
    get:
      consumes:
      - application/json
      description: Find a GetShippingPartner by name
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: partner_name
        in: path
        name: partner_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetShippingPartnerByName
      tags:
      - ShippingPartner
  /api/v1/shipping_partners/dropdown:
    get:
      consumes:
      - application/json
      description: GetAllUserShippingPartnerRegistrationDropDown
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserShippingPartnerRegistrationGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: GetAllUserShippingPartnerRegistrationDropDown
      tags:
      - UserShippingPartnerRegistrationDropDown
  /api/v1/shipping_partners/list:
    get:
      consumes:
      - application/json
      description: FindAllShippingPartner
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      - description: Filters
        in: query
        name: filters
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ShippingPartnerGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FindAllShippingPartner
      tags:
      - ShippingPartner
  /api/v1/shipping_partners/rate_calc:
    post:
      consumes:
      - application/json
      description: UserShippingPartnerRegistrationEstimateCosts
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: get all rate calculator cost
        in: body
        name: RateCalcCreateRequest
        required: true
        schema:
          $ref: '#/definitions/RateCalcRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetAllRateCalculator'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UserShippingPartnerRegistrationEstimateCosts
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/register:
    post:
      consumes:
      - application/json
      description: Create a UserShippingPartnerRegistration
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Shipping Partner
        in: body
        name: UserShippingPartnerRegistrationCreateRequest
        required: true
        schema:
          $ref: '#/definitions/UserShippingPartnerRegistrationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserShippingPartnerRegistrationCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateUserShippingPartnerRegistration
      tags:
      - UserShippingPartnerRegistration
  /api/v1/shipping_partners/registered/{id}:
    get:
      consumes:
      - application/json
      description: Find a UserShippingPartnerRegistration by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserShippingPartnerRegistrationGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FindUserShippingPartnerRegistrationById
      tags:
      - UserShippingPartnerRegistration
  /api/v1/template:
    get:
      consumes:
      - application/json
      description: Get all Templates
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/template.AccessTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Templates
      tags:
      - Access_Management
  /api/v1/template/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteTemplate
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteTemplate
      tags:
      - Access_Management
  /api/v1/template/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateTemplate
      parameters:
      - description: Template ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Template  Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/template.AccessTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/template.AccessTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateTemplate
      tags:
      - Access_Management
  /api/v1/template/create:
    post:
      consumes:
      - application/json
      description: CreateTemplate
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Template Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/template.AccessTemplate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/template.AccessTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateTemplate
      tags:
      - Access_Management
  /api/v1/template/list:
    get:
      consumes:
      - application/json
      description: Get all Templates
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/template.AccessTemplate'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all Templates
      tags:
      - Access_Management
  /api/v1/uom:
    get:
      consumes:
      - application/json
      description: UomList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UomList
      tags:
      - UOM
  /api/v1/uom/{id}:
    get:
      consumes:
      - application/json
      description: View UomView
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UOM ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomViewDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View UomView
      tags:
      - UOM
  /api/v1/uom/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteUom
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UOM ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteUom
      tags:
      - UOM
  /api/v1/uom/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateUom
      parameters:
      - description: UOM ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Uom Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/uom.UomRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomRequestDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateUom
      tags:
      - UOM
  /api/v1/uom/class:
    get:
      consumes:
      - application/json
      description: UomClassList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomClassListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UomClassList
      tags:
      - UOM
  /api/v1/uom/class/{id}:
    get:
      consumes:
      - application/json
      description: View UomClassView
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UOM class ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomClassViewtDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: View UomClassView
      tags:
      - UOM
  /api/v1/uom/class/{id}/delete:
    delete:
      consumes:
      - application/json
      description: DeleteUomClass
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: UOM class ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: DeleteUomClass
      tags:
      - UOM
  /api/v1/uom/class/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateUomClass
      parameters:
      - description: UOM class ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Uom class Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/uom.UomClassRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomClassRequestDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateUomClass
      tags:
      - UOM
  /api/v1/uom/class/create:
    post:
      consumes:
      - application/json
      description: CreateUomClass
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Uom Class Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/uom.UomClassRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomClassRequestDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateUomClass
      tags:
      - UOM
  /api/v1/uom/class/dropdown:
    get:
      consumes:
      - application/json
      description: UomClassList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomClassListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UomClassList
      tags:
      - UOM
  /api/v1/uom/class/search:
    get:
      consumes:
      - application/json
      description: UomClassSearch
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/uom.IdNameDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UomClassSearch
      tags:
      - UOM
  /api/v1/uom/create:
    post:
      consumes:
      - application/json
      description: CreateUom
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Uom Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/uom.UomRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomRequestDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateUom
      tags:
      - UOM
  /api/v1/uom/dropdown:
    get:
      consumes:
      - application/json
      description: UomList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uom.UomListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UomList
      tags:
      - UOM
  /api/v1/uom/search:
    get:
      consumes:
      - application/json
      description: UomSearch
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Search query
        in: query
        name: q
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/uom.IdNameDTO'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UomSearch
      tags:
      - UOM
  /api/v1/vendors:
    get:
      consumes:
      - application/json
      description: Get all vendors
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorsListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all vendors
      tags:
      - Vendors
  /api/v1/vendors/{id}:
    get:
      consumes:
      - application/json
      description: Get Details of specific vendor based on ID
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Details of specific vendor based on ID
      tags:
      - Vendors
  /api/v1/vendors/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a Vendors
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a Vendors
      tags:
      - Vendors
  /api/v1/vendors/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteVendors
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteVendors
      tags:
      - Vendors
  /api/v1/vendors/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteVendors
      parameters:
      - description: Vendor ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteVendors
      tags:
      - Vendors
  /api/v1/vendors/{id}/update:
    post:
      consumes:
      - application/json
      description: UpdateVendorPricelist
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: VendorPricelist Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/vendors.VendorPriceListsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UpdateVendorPricelist
      tags:
      - Vendors
  /api/v1/vendors/create:
    post:
      consumes:
      - application/json
      description: CreateVendors
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Vendors Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/vendors.VendorsRequestDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateVendors
      tags:
      - Vendors
  /api/v1/vendors/dropdown:
    get:
      consumes:
      - application/json
      description: Get all vendors
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorsListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all vendors
      tags:
      - Vendors
  /api/v1/vendors/favourite_list:
    get:
      consumes:
      - application/json
      description: Get all favourite vendors
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorsListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all favourite vendors
      tags:
      - Vendors
  /api/v1/vendors/pricelist:
    get:
      consumes:
      - application/json
      description: Get all vendors price list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorsListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all vendors price list
      tags:
      - Vendors
  /api/v1/vendors/pricelist/{id}:
    get:
      consumes:
      - application/json
      description: Get Details of specific vendorpricelist based on ID
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorPriceListsDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get Details of specific vendorpricelist based on ID
      tags:
      - Vendors
  /api/v1/vendors/pricelist/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a VendorPricelist
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a VendorPricelist
      tags:
      - Vendors
  /api/v1/vendors/pricelist/create:
    post:
      consumes:
      - application/json
      description: CreateVendorPriceList
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: VendorPricelist Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/vendors.VendorPriceListsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: CreateVendorPriceList
      tags:
      - Vendors
  /api/v1/vendors/pricelist/dropdown:
    get:
      consumes:
      - application/json
      description: Get all vendors price list
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: '[[column_name,operator,value]]'
        in: query
        name: filters
        type: string
      - description: '[[column_name,asc or desc]]'
        in: query
        name: sort
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorsListDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all vendors price list
      tags:
      - Vendors
  /api/v1/vendors/search:
    get:
      consumes:
      - application/json
      description: Search Vendors
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vendors.VendorsObjDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Search Vendors
      tags:
      - Vendors
  /api/v1/virtual_warehouse:
    get:
      consumes:
      - application/json
      description: a get  AllVirtualWarehouses and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllVirtualWarehouses and filter it by search query
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}:
    get:
      consumes:
      - application/json
      description: Find a VirtualWarehouse by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a VirtualWarehouse by id
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeleteVirtualWarehouse
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseLinesDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteVirtualWarehouse
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}/edit:
    post:
      consumes:
      - application/json
      description: Update a VirtualWarehouse
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a VirtualWarehouse
        in: body
        name: VirtualWarehouseUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/virtual_warehouse.VirtualWarehouse_Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateVirtualWarehouse
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteVirtualWarehouse
      parameters:
      - description: VirtualWarehouse ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: FavouriteVirtualWarehouse
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}/remove:
    delete:
      consumes:
      - application/json
      description: delete a DeleteVirtualWarehouseDetails
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseDetailDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteVirtualWarehouseDetails
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteVirtualWarehouse
      parameters:
      - description: VirtualWarehouse ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteVirtualWarehouse
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a VirtualWarehouseDetail
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a VirtualWarehouse
        in: body
        name: VirtualWarehouse_details
        required: true
        schema:
          $ref: '#/definitions/virtual_warehouse.Virtual_Warehouse_Details'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseDetailUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateVirtualWarehouseDetail
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{id}/view:
    get:
      consumes:
      - application/json
      description: Find a VirtualWarehouseDetails by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseDetailGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a VirtualWarehouseDetails by id
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/{virtual_warehouse_code}/get_auth_keys:
    get:
      consumes:
      - application/json
      description: Get AuthKeys
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: virtual_warehouse_code
        in: path
        name: virtual_warehouse_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get AuthKeys
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/available:
    get:
      consumes:
      - application/json
      description: get AvailableVirtualWarehouses and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.AvailableVirtualWarehousesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AvailableVirtualWarehouses and filter it by search query
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/create:
    post:
      consumes:
      - application/json
      description: Link a VirtualWarehouseDetail
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: link a VirtualWarehouse
        in: body
        name: VirtualWarehouse_Details
        required: true
        schema:
          $ref: '#/definitions/virtual_warehouse.Virtual_Warehouse_Details'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseDetailCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a LinkVirtualWarehouseDetail
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/list:
    get:
      consumes:
      - application/json
      description: a get all AllVirtualWarehouseDetails and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseDetailGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get all AllVirtualWarehouseDetails and filter it by search query
      tags:
      - VirtualWarehouse
  /api/v1/virtual_warehouse/register:
    post:
      consumes:
      - application/json
      description: Create a VirtualWarehouse
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a VirtualWarehouse
        in: body
        name: VirtualWarehouseCreateRequest
        required: true
        schema:
          $ref: '#/definitions/virtual_warehouse.VirtualWarehouse_Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/virtual_warehouse.VirtualWarehouseCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateVirtualWarehouse
      tags:
      - VirtualWarehouse
  /api/v1/webstores:
    get:
      consumes:
      - application/json
      description: a get AllWebstores and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webstores.WebstoredetailGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllWebstores and filter it by search query
      tags:
      - Webstores
  /api/v1/webstores/{id}:
    get:
      consumes:
      - application/json
      description: Find a Webstore by id
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webstores.WebstoredetailGetResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Find a Webstore by id
      tags:
      - Webstores
  /api/v1/webstores/{id}/delete:
    delete:
      consumes:
      - application/json
      description: delete a DeleteWebstores
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webstores.WebstoredetailDeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: delete a DeleteWebstores
      tags:
      - Webstores
  /api/v1/webstores/{id}/favourite:
    post:
      consumes:
      - application/json
      description: FavouriteWebstores
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: Webstore ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      - ApiKeyAuth: []
      summary: FavouriteWebstores
      tags:
      - Webstores
  /api/v1/webstores/{id}/unfavourite:
    post:
      consumes:
      - application/json
      description: UnFavouriteWebstore
      parameters:
      - description: Webstore ID
        in: path
        name: id
        required: true
        type: string
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: UnFavouriteWebstore
      tags:
      - Webstores
  /api/v1/webstores/{id}/update:
    post:
      consumes:
      - application/json
      description: Update a Webstore
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Update a Webstore
        in: body
        name: WebstoreUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/webstores.User_Webstore_Link'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webstores.WebstoredetailUpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a UpdateWebstores
      tags:
      - Webstores
  /api/v1/webstores/{webstore_code}/get_auth_keys:
    get:
      consumes:
      - application/json
      description: Get AuthKeys
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: webstore_code
        in: path
        name: webstore
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get AuthKeys
      tags:
      - Webstores
  /api/v1/webstores/available:
    get:
      consumes:
      - application/json
      description: get AvailableWebstores and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webstores.AvailableWebstoresResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AvailableWebstores and filter it by search query
      tags:
      - Webstores
  /api/v1/webstores/create:
    post:
      consumes:
      - application/json
      description: Create a Webstore
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: create a Webstore
        in: body
        name: WebstoreCreateRequest
        required: true
        schema:
          $ref: '#/definitions/webstores.User_Webstore_Link'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webstores.WebstoredetailCreateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: do a CreateWebstore
      tags:
      - Webstores
  /api/v1/webstores/dropdown:
    get:
      consumes:
      - application/json
      description: a get AllWebstores dropdown list and filter it by search query
      parameters:
      - description: Authorization
        in: header
        name: Authorization
        required: true
        type: string
      - description: filters
        in: query
        name: filters
        type: string
      - description: per_page
        in: query
        name: per_page
        type: integer
      - description: page_no
        in: query
        name: page_no
        type: integer
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/webstores.WebstoredetailGetAllResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: get AllWebstores dropdown list and filter it by search query
      tags:
      - Webstores
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login accounts
      parameters:
      - description: request body login
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.LoginResponseDOC'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login accounts
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register accounts
      parameters:
      - description: request body register
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.RegisterResponseDOC'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register accounts
      tags:
      - auth
  /auth/user_login:
    post:
      consumes:
      - application/json
      description: UserLogin
      parameters:
      - description: request body login
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.UserLoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.UserLoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: UserLogin
      tags:
      - auth
  /auth/verify_otp:
    post:
      consumes:
      - application/json
      description: VerifyOTP
      parameters:
      - description: verify otp
        in: body
        name: verifyotp
        required: true
        schema:
          $ref: '#/definitions/auth.VerifyOtpDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.VerifyOtpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: VerifyOTP
      tags:
      - auth
schemes:
- https
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
